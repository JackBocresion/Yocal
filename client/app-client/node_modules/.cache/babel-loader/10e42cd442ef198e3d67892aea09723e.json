{"ast":null,"code":"var _jsxFileName = \"/Users/jackbocresion/Desktop/YoCal copy/client/app-client/src/App.js\";\nimport Navbar from './components/Nav';\nimport React, { useEffect, useState, createContext } from 'react';\nimport './styles/calendar.scss';\nimport './styles/App.css';\nimport Login from './components/Login';\nimport Home from './components/Home'; //import Home from './components/newhome';\n\nimport { BrowserRouter as Router, Route, Switch, Redirect, useLocation, useHistory } from 'react-router-dom';\nimport Createevent from './components/CreateEvent';\nimport './styles/Event.scss';\nimport axios from 'axios';\nimport Friends from './components/Friends';\nimport BetaFooter from './components/BetaFooter';\nimport Edit from './components/Edit';\nimport './styles/toruskit.css';\nimport Chat from './components/Chat/chatHome';\nimport Spinner from './microComponents/spinner';\nimport Archive from './components/Archive';\nimport { valify } from \"./maps\";\nimport { io } from 'socket.io-client';\nMap.prototype.valify = valify; // import Conflicts from \"./components/Conflicts\"\n//use via props vs via a freq called func becasue it will give better performance!\n\nexport const userData = createContext();\n\nconst App = () => {\n  //create a function here that will create the props data. if it cannot find the data for the prop, redirect and/or return null.\n  // const [state, setState] = useState({\n  //    username: null,\n  //    data: null,\n  //    events: null,\n  //    friendEvents: null,\n  //    /*--------------------*/\n  //    friendReqs: null,\n  //    friends: null,\n  //    /*--------------------*/\n  //    month: null,\n  //    year: null,\n  //    /* ------------------ */\n  //    chats: null,\n  //    messages: null,\n  // });\n  // const [loading, setLoading] = useState(true);\n  //get to removeing the constructors!!!\n  useEffect(() => {\n    getData();\n    setInterval(() => {\n      console.log('refreshing...');\n      getData();\n    }, 15000); //localize???\n  }, []); //put events into state\n  //console.log(state, 'state from appjs');\n  //\n\n  const [background, setBackground] = useState(\"\");\n  useEffect(() => {\n    let socket = io('http://localhost:8000');\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }\n  }, \"ho\"));\n\n  function getData() {\n    const cookie = localStorage.getItem('token');\n\n    if (cookie) {\n      if (window.location.pathname === '/') {\n        window.location.pathname = '/home';\n      }\n\n      axios.get('http://localhost:8000/getuser', {\n        headers: {\n          Authorization: `Bearer ${cookie}`\n        }\n      }).then(res => {\n        console.log(res.data, 'res'); //  setTimeout(()=>\n\n        const meep = new Map(res.data.events);\n        console.log(meep.valify());\n        setState({\n          username: res.data.user.username,\n          data: res.data.user,\n          events: meep,\n          //.valify(),\n          //FIX THIS!!!!!\n          id: res.data.user.id,\n\n          /*--------------------*/\n          incoming: res.data.incoming,\n          outgoing: res.data.outgoing,\n          friends: res.data.friends,\n\n          /*--------------------*/\n          refresh: () => getData(),\n\n          /*--------------------*/\n          conflicts: res.data.conflicts\n        }); //,\n        // 3000\n\n        console.log(meep.get(362), \"meepget0\"); //   );\n      }).catch(err => {\n        //if the cookie is bad, then login\n        console.log('in catch block, fatal req error', err);\n        localStorage.removeItem('token');\n        window.location.pathname = '/';\n      }); //this should ONLY be triggered when the cookie is null and the pathname is not login, so a user is not found.\n    } else if (window.location.pathname != '/') {\n      //if there is no cookie, the redirect will go through, but the component will handle the rejection.\n      //console.log('error!');\n      // <Redirect to=\"/\"/>\n      window.location.pathname = '/';\n    }\n  }\n\n  function createHandshake() {}\n};\n\nexport default App; //concat arrays of old, upcoming and today\n//filter then sort for each, then concat\n//add a buffer of ~1-3 days","map":{"version":3,"sources":["/Users/jackbocresion/Desktop/YoCal copy/client/app-client/src/App.js"],"names":["Navbar","React","useEffect","useState","createContext","Login","Home","BrowserRouter","Router","Route","Switch","Redirect","useLocation","useHistory","Createevent","axios","Friends","BetaFooter","Edit","Chat","Spinner","Archive","valify","io","Map","prototype","userData","App","getData","setInterval","console","log","background","setBackground","socket","cookie","localStorage","getItem","window","location","pathname","get","headers","Authorization","then","res","data","meep","events","setState","username","user","id","incoming","outgoing","friends","refresh","conflicts","catch","err","removeItem","createHandshake"],"mappings":"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","sourcesContent":["import Navbar from './components/Nav';\nimport React, { useEffect, useState, createContext } from 'react';\nimport './styles/calendar.scss';\nimport './styles/App.css';\nimport Login from './components/Login';\nimport Home from './components/Home';\n//import Home from './components/newhome';\nimport {\n   BrowserRouter as Router,\n   Route,\n   Switch,\n   Redirect,\n   useLocation,\n   useHistory,\n} from 'react-router-dom';\nimport Createevent from './components/CreateEvent';\nimport './styles/Event.scss';\nimport axios from 'axios';\nimport Friends from './components/Friends';\nimport BetaFooter from './components/BetaFooter';\nimport Edit from './components/Edit';\nimport './styles/toruskit.css';\nimport Chat from './components/Chat/chatHome';\nimport Spinner from './microComponents/spinner';\nimport Archive from './components/Archive';\nimport { valify } from \"./maps\"\n\n\n\nimport { io } from 'socket.io-client';\nMap.prototype.valify = valify\n// import Conflicts from \"./components/Conflicts\"\n//use via props vs via a freq called func becasue it will give better performance!\nexport const userData = createContext();\n\n\n\n\nconst App = () => {\n   //create a function here that will create the props data. if it cannot find the data for the prop, redirect and/or return null.\n   // const [state, setState] = useState({\n   //    username: null,\n   //    data: null,\n   //    events: null,\n   //    friendEvents: null,\n   //    /*--------------------*/\n   //    friendReqs: null,\n   //    friends: null,\n   //    /*--------------------*/\n   //    month: null,\n   //    year: null,\n   //    /* ------------------ */\n   //    chats: null,\n   //    messages: null,\n   // });\n   // const [loading, setLoading] = useState(true);\n   //get to removeing the constructors!!!\n   useEffect(() => {\n      getData();\n      setInterval(() => {\n         console.log('refreshing...');\n         getData();\n      }, 15000);\n      //localize???\n   }, []);\n\n   //put events into state\n   //console.log(state, 'state from appjs');\n\n   //\n\n   const [background, setBackground] = useState(\"\")\n   \n   useEffect(() => {\n      let socket = io('http://localhost:8000');\n   },[])\n   \n   return (\n      <div>\n         <h1>ho</h1>\n         {/* <userData.Provider value={state}>\n            {state.username == null && window.location.pathname != '/' ? (\n               <Spinner />\n            ) : (\n               <Router>\n                  <Navbar />\n                  <Switch>\n                     <Route path=\"/\" exact component={Login} />\n                     <Route path=\"/home\" exact component={Home} />\n                     <Route\n                        exact\n                        path=\"/home/:day/:month/:year\"\n                        component={Createevent}\n                     />\n                     <Route exact path=\"/friends\" component={Friends} />\n                     <Route exact path=\"/chat\" component={Chat} />\n                     <Route exact path=\"/edit/:id\" component={Edit} />\n                     <Route exact path=\"/archive\" component={Archive} />\n                     // <Route exact path=\"/conflicts\" component={Conflicts} /> \n                     <Route render={() => <h1>404 error</h1>} />\n                  </Switch>\n                   <BetaFooter />\n               </Router>\n            )} \n         </userData.Provider> */}\n      </div>\n   );\n   function getData() {\n      const cookie = localStorage.getItem('token');\n      if (cookie) {\n         if (window.location.pathname === '/') {\n            window.location.pathname = '/home';\n         }\n         axios\n            .get('http://localhost:8000/getuser', {\n               headers: { Authorization: `Bearer ${cookie}` },\n            })\n            .then((res) => {\n               console.log(res.data, 'res');\n               //  setTimeout(()=>\n               const meep = new Map(res.data.events)\n               console.log(meep.valify());\n               setState({\n                  username: res.data.user.username,\n                  data: res.data.user,\n                  events: meep,//.valify(),\n                  //FIX THIS!!!!!\n                  id: res.data.user.id,\n                  /*--------------------*/\n                  incoming: res.data.incoming,\n                  outgoing: res.data.outgoing,\n                  friends: res.data.friends,\n                  /*--------------------*/\n                  refresh: () => getData(),\n                  /*--------------------*/\n                  conflicts: res.data.conflicts,\n               }); //,\n               // 3000\n               console.log(meep.get(362),\"meepget0\")\n               //   );\n            \n            })\n            .catch((err) => {\n               //if the cookie is bad, then login\n               console.log('in catch block, fatal req error', err);\n               localStorage.removeItem('token');\n               window.location.pathname = '/';\n            });\n         //this should ONLY be triggered when the cookie is null and the pathname is not login, so a user is not found.\n      } else if (window.location.pathname != '/') {\n         //if there is no cookie, the redirect will go through, but the component will handle the rejection.\n         //console.log('error!');\n         // <Redirect to=\"/\"/>\n         window.location.pathname = '/';\n      }\n   }\n\n\n   function createHandshake() {\n      \n   }\n};\n\nexport default App;\n\n//concat arrays of old, upcoming and today\n\n//filter then sort for each, then concat\n\n//add a buffer of ~1-3 days"]},"metadata":{},"sourceType":"module"}