{"ast":null,"code":"var self = self || {}; // File:src/Three.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nvar THREE = {\n  REVISION: '77'\n}; //\n\nif (typeof define === 'function' && define.amd) {\n  define('three', THREE);\n} else if ('undefined' !== typeof exports && 'undefined' !== typeof module) {\n  module.exports = THREE;\n} // Polyfills\n\n\nif (Number.EPSILON === undefined) {\n  Number.EPSILON = Math.pow(2, -52);\n} //\n\n\nif (Math.sign === undefined) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n  Math.sign = function (x) {\n    return x < 0 ? -1 : x > 0 ? 1 : +x;\n  };\n}\n\nif (Function.prototype.name === undefined) {\n  // Missing in IE9-11.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n  Object.defineProperty(Function.prototype, 'name', {\n    get: function () {\n      return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n    }\n  });\n}\n\nif (Object.assign === undefined) {\n  // Missing in IE.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n  (function () {\n    Object.assign = function (target) {\n      'use strict';\n\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n\n      return output;\n    };\n  })();\n} //\n\n\nObject.assign(THREE, {\n  // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\n  MOUSE: {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2\n  },\n  // GL STATE CONSTANTS\n  CullFaceNone: 0,\n  CullFaceBack: 1,\n  CullFaceFront: 2,\n  CullFaceFrontBack: 3,\n  FrontFaceDirectionCW: 0,\n  FrontFaceDirectionCCW: 1,\n  // SHADOWING TYPES\n  BasicShadowMap: 0,\n  PCFShadowMap: 1,\n  PCFSoftShadowMap: 2,\n  // MATERIAL CONSTANTS\n  // side\n  FrontSide: 0,\n  BackSide: 1,\n  DoubleSide: 2,\n  // shading\n  FlatShading: 1,\n  SmoothShading: 2,\n  // colors\n  NoColors: 0,\n  FaceColors: 1,\n  VertexColors: 2,\n  // blending modes\n  NoBlending: 0,\n  NormalBlending: 1,\n  AdditiveBlending: 2,\n  SubtractiveBlending: 3,\n  MultiplyBlending: 4,\n  CustomBlending: 5,\n  // custom blending equations\n  // (numbers start from 100 not to clash with other\n  // mappings to OpenGL constants defined in Texture.js)\n  AddEquation: 100,\n  SubtractEquation: 101,\n  ReverseSubtractEquation: 102,\n  MinEquation: 103,\n  MaxEquation: 104,\n  // custom blending destination factors\n  ZeroFactor: 200,\n  OneFactor: 201,\n  SrcColorFactor: 202,\n  OneMinusSrcColorFactor: 203,\n  SrcAlphaFactor: 204,\n  OneMinusSrcAlphaFactor: 205,\n  DstAlphaFactor: 206,\n  OneMinusDstAlphaFactor: 207,\n  // custom blending source factors\n  //ZeroFactor: 200,\n  //OneFactor: 201,\n  //SrcAlphaFactor: 204,\n  //OneMinusSrcAlphaFactor: 205,\n  //DstAlphaFactor: 206,\n  //OneMinusDstAlphaFactor: 207,\n  DstColorFactor: 208,\n  OneMinusDstColorFactor: 209,\n  SrcAlphaSaturateFactor: 210,\n  // depth modes\n  NeverDepth: 0,\n  AlwaysDepth: 1,\n  LessDepth: 2,\n  LessEqualDepth: 3,\n  EqualDepth: 4,\n  GreaterEqualDepth: 5,\n  GreaterDepth: 6,\n  NotEqualDepth: 7,\n  // TEXTURE CONSTANTS\n  MultiplyOperation: 0,\n  MixOperation: 1,\n  AddOperation: 2,\n  // Tone Mapping modes\n  NoToneMapping: 0,\n  // do not do any tone mapping, not even exposure (required for special purpose passes.)\n  LinearToneMapping: 1,\n  // only apply exposure.\n  ReinhardToneMapping: 2,\n  Uncharted2ToneMapping: 3,\n  // John Hable\n  CineonToneMapping: 4,\n  // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n  // Mapping modes\n  UVMapping: 300,\n  CubeReflectionMapping: 301,\n  CubeRefractionMapping: 302,\n  EquirectangularReflectionMapping: 303,\n  EquirectangularRefractionMapping: 304,\n  SphericalReflectionMapping: 305,\n  CubeUVReflectionMapping: 306,\n  CubeUVRefractionMapping: 307,\n  // Wrapping modes\n  RepeatWrapping: 1000,\n  ClampToEdgeWrapping: 1001,\n  MirroredRepeatWrapping: 1002,\n  // Filters\n  NearestFilter: 1003,\n  NearestMipMapNearestFilter: 1004,\n  NearestMipMapLinearFilter: 1005,\n  LinearFilter: 1006,\n  LinearMipMapNearestFilter: 1007,\n  LinearMipMapLinearFilter: 1008,\n  // Data types\n  UnsignedByteType: 1009,\n  ByteType: 1010,\n  ShortType: 1011,\n  UnsignedShortType: 1012,\n  IntType: 1013,\n  UnsignedIntType: 1014,\n  FloatType: 1015,\n  HalfFloatType: 1025,\n  // Pixel types\n  //UnsignedByteType: 1009,\n  UnsignedShort4444Type: 1016,\n  UnsignedShort5551Type: 1017,\n  UnsignedShort565Type: 1018,\n  // Pixel formats\n  AlphaFormat: 1019,\n  RGBFormat: 1020,\n  RGBAFormat: 1021,\n  LuminanceFormat: 1022,\n  LuminanceAlphaFormat: 1023,\n  // THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\n  RGBEFormat: THREE.RGBAFormat,\n  //1024;\n  DepthFormat: 1026,\n  // DDS / ST3C Compressed texture formats\n  RGB_S3TC_DXT1_Format: 2001,\n  RGBA_S3TC_DXT1_Format: 2002,\n  RGBA_S3TC_DXT3_Format: 2003,\n  RGBA_S3TC_DXT5_Format: 2004,\n  // PVRTC compressed texture formats\n  RGB_PVRTC_4BPPV1_Format: 2100,\n  RGB_PVRTC_2BPPV1_Format: 2101,\n  RGBA_PVRTC_4BPPV1_Format: 2102,\n  RGBA_PVRTC_2BPPV1_Format: 2103,\n  // ETC compressed texture formats\n  RGB_ETC1_Format: 2151,\n  // Loop styles for AnimationAction\n  LoopOnce: 2200,\n  LoopRepeat: 2201,\n  LoopPingPong: 2202,\n  // Interpolation\n  InterpolateDiscrete: 2300,\n  InterpolateLinear: 2301,\n  InterpolateSmooth: 2302,\n  // Interpolant ending modes\n  ZeroCurvatureEnding: 2400,\n  ZeroSlopeEnding: 2401,\n  WrapAroundEnding: 2402,\n  // Triangle Draw modes\n  TrianglesDrawMode: 0,\n  TriangleStripDrawMode: 1,\n  TriangleFanDrawMode: 2,\n  // Texture Encodings\n  LinearEncoding: 3000,\n  // No encoding at all.\n  sRGBEncoding: 3001,\n  GammaEncoding: 3007,\n  // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\n  // The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\n  // These encodings should not specified as output encodings except in rare situations.\n  RGBEEncoding: 3002,\n  // AKA Radiance.\n  LogLuvEncoding: 3003,\n  RGBM7Encoding: 3004,\n  RGBM16Encoding: 3005,\n  RGBDEncoding: 3006,\n  // MaxRange is 256.\n  // Depth packing strategies\n  BasicDepthPacking: 3200,\n  // for writing to float textures for high precision or for visualizing results in RGB buffers\n  RGBADepthPacking: 3201 // for packing into RGBA buffers.\n\n}); // File:src/math/Color.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Color = function (r, g, b) {\n  if (g === undefined && b === undefined) {\n    // r is THREE.Color, hex or string\n    return this.set(r);\n  }\n\n  return this.setRGB(r, g, b);\n};\n\nTHREE.Color.prototype = {\n  constructor: THREE.Color,\n  r: 1,\n  g: 1,\n  b: 1,\n  set: function (value) {\n    if (value instanceof THREE.Color) {\n      this.copy(value);\n    } else if (typeof value === 'number') {\n      this.setHex(value);\n    } else if (typeof value === 'string') {\n      this.setStyle(value);\n    }\n\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.r = scalar;\n    this.g = scalar;\n    this.b = scalar;\n  },\n  setHex: function (hex) {\n    hex = Math.floor(hex);\n    this.r = (hex >> 16 & 255) / 255;\n    this.g = (hex >> 8 & 255) / 255;\n    this.b = (hex & 255) / 255;\n    return this;\n  },\n  setRGB: function (r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    return this;\n  },\n  setHSL: function () {\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n      return p;\n    }\n\n    return function (h, s, l) {\n      // h,s,l ranges are in 0.0 - 1.0\n      h = THREE.Math.euclideanModulo(h, 1);\n      s = THREE.Math.clamp(s, 0, 1);\n      l = THREE.Math.clamp(l, 0, 1);\n\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n\n      return this;\n    };\n  }(),\n  setStyle: function (style) {\n    function handleAlpha(string) {\n      if (string === undefined) return;\n\n      if (parseFloat(string) < 1) {\n        console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n      }\n    }\n\n    var m;\n\n    if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n      // rgb / hsl\n      var color;\n      var name = m[1];\n      var components = m[2];\n\n      switch (name) {\n        case 'rgb':\n        case 'rgba':\n          if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(255,0,0) rgba(255,0,0,0.5)\n            this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n            this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n            this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n            handleAlpha(color[5]);\n            return this;\n          }\n\n          if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n            this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n            this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n            this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n            handleAlpha(color[5]);\n            return this;\n          }\n\n          break;\n\n        case 'hsl':\n        case 'hsla':\n          if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n            var h = parseFloat(color[1]) / 360;\n            var s = parseInt(color[2], 10) / 100;\n            var l = parseInt(color[3], 10) / 100;\n            handleAlpha(color[5]);\n            return this.setHSL(h, s, l);\n          }\n\n          break;\n      }\n    } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n      // hex color\n      var hex = m[1];\n      var size = hex.length;\n\n      if (size === 3) {\n        // #ff0\n        this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n        this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n        this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n        return this;\n      } else if (size === 6) {\n        // #ff0000\n        this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n        return this;\n      }\n    }\n\n    if (style && style.length > 0) {\n      // color keywords\n      var hex = THREE.ColorKeywords[style];\n\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex);\n      } else {\n        // unknown color\n        console.warn('THREE.Color: Unknown color ' + style);\n      }\n    }\n\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this.r, this.g, this.b);\n  },\n  copy: function (color) {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    return this;\n  },\n  copyGammaToLinear: function (color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    this.r = Math.pow(color.r, gammaFactor);\n    this.g = Math.pow(color.g, gammaFactor);\n    this.b = Math.pow(color.b, gammaFactor);\n    return this;\n  },\n  copyLinearToGamma: function (color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n    this.r = Math.pow(color.r, safeInverse);\n    this.g = Math.pow(color.g, safeInverse);\n    this.b = Math.pow(color.b, safeInverse);\n    return this;\n  },\n  convertGammaToLinear: function () {\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    this.r = r * r;\n    this.g = g * g;\n    this.b = b * b;\n    return this;\n  },\n  convertLinearToGamma: function () {\n    this.r = Math.sqrt(this.r);\n    this.g = Math.sqrt(this.g);\n    this.b = Math.sqrt(this.b);\n    return this;\n  },\n  getHex: function () {\n    return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n  },\n  getHexString: function () {\n    return ('000000' + this.getHex().toString(16)).slice(-6);\n  },\n  getHSL: function (optionalTarget) {\n    // h,s,l ranges are in 0.0 - 1.0\n    var hsl = optionalTarget || {\n      h: 0,\n      s: 0,\n      l: 0\n    };\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var hue, saturation;\n    var lightness = (min + max) / 2.0;\n\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      var delta = max - min;\n      saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n      switch (max) {\n        case r:\n          hue = (g - b) / delta + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          hue = (b - r) / delta + 2;\n          break;\n\n        case b:\n          hue = (r - g) / delta + 4;\n          break;\n      }\n\n      hue /= 6;\n    }\n\n    hsl.h = hue;\n    hsl.s = saturation;\n    hsl.l = lightness;\n    return hsl;\n  },\n  getStyle: function () {\n    return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n  },\n  offsetHSL: function (h, s, l) {\n    var hsl = this.getHSL();\n    hsl.h += h;\n    hsl.s += s;\n    hsl.l += l;\n    this.setHSL(hsl.h, hsl.s, hsl.l);\n    return this;\n  },\n  add: function (color) {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    return this;\n  },\n  addColors: function (color1, color2) {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n    return this;\n  },\n  addScalar: function (s) {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n    return this;\n  },\n  multiply: function (color) {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    return this;\n  },\n  lerp: function (color, alpha) {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n    return this;\n  },\n  equals: function (c) {\n    return c.r === this.r && c.g === this.g && c.b === this.b;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.r = array[offset];\n    this.g = array[offset + 1];\n    this.b = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.r;\n    array[offset + 1] = this.g;\n    array[offset + 2] = this.b;\n    return array;\n  }\n};\nTHREE.ColorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n}; // File:src/math/Quaternion.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Quaternion = function (x, y, z, w) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._w = w !== undefined ? w : 1;\n};\n\nTHREE.Quaternion.prototype = {\n  constructor: THREE.Quaternion,\n\n  get x() {\n    return this._x;\n  },\n\n  set x(value) {\n    this._x = value;\n    this.onChangeCallback();\n  },\n\n  get y() {\n    return this._y;\n  },\n\n  set y(value) {\n    this._y = value;\n    this.onChangeCallback();\n  },\n\n  get z() {\n    return this._z;\n  },\n\n  set z(value) {\n    this._z = value;\n    this.onChangeCallback();\n  },\n\n  get w() {\n    return this._w;\n  },\n\n  set w(value) {\n    this._w = value;\n    this.onChangeCallback();\n  },\n\n  set: function (x, y, z, w) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this._x, this._y, this._z, this._w);\n  },\n  copy: function (quaternion) {\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromEuler: function (euler, update) {\n    if (euler instanceof THREE.Euler === false) {\n      throw new Error('THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    } // http://www.mathworks.com/matlabcentral/fileexchange/\n    // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //\tcontent/SpinCalc.m\n\n\n    var c1 = Math.cos(euler._x / 2);\n    var c2 = Math.cos(euler._y / 2);\n    var c3 = Math.cos(euler._z / 2);\n    var s1 = Math.sin(euler._x / 2);\n    var s2 = Math.sin(euler._y / 2);\n    var s3 = Math.sin(euler._z / 2);\n    var order = euler.order;\n\n    if (order === 'XYZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'YXZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'ZXY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'ZYX') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'YZX') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'XZY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromAxisAngle: function (axis, angle) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n    var halfAngle = angle / 2,\n        s = Math.sin(halfAngle);\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos(halfAngle);\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10],\n        trace = m11 + m22 + m33,\n        s;\n\n    if (trace > 0) {\n      s = 0.5 / Math.sqrt(trace + 1.0);\n      this._w = 0.25 / s;\n      this._x = (m32 - m23) * s;\n      this._y = (m13 - m31) * s;\n      this._z = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n      this._w = (m32 - m23) / s;\n      this._x = 0.25 * s;\n      this._y = (m12 + m21) / s;\n      this._z = (m13 + m31) / s;\n    } else if (m22 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n      this._w = (m13 - m31) / s;\n      this._x = (m12 + m21) / s;\n      this._y = 0.25 * s;\n      this._z = (m23 + m32) / s;\n    } else {\n      s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n      this._w = (m21 - m12) / s;\n      this._x = (m13 + m31) / s;\n      this._y = (m23 + m32) / s;\n      this._z = 0.25 * s;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  setFromUnitVectors: function () {\n    // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n    // assumes direction vectors vFrom and vTo are normalized\n    var v1, r;\n    var EPS = 0.000001;\n    return function (vFrom, vTo) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      r = vFrom.dot(vTo) + 1;\n\n      if (r < EPS) {\n        r = 0;\n\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          v1.set(-vFrom.y, vFrom.x, 0);\n        } else {\n          v1.set(0, -vFrom.z, vFrom.y);\n        }\n      } else {\n        v1.crossVectors(vFrom, vTo);\n      }\n\n      this._x = v1.x;\n      this._y = v1.y;\n      this._z = v1.z;\n      this._w = r;\n      return this.normalize();\n    };\n  }(),\n  inverse: function () {\n    return this.conjugate().normalize();\n  },\n  conjugate: function () {\n    this._x *= -1;\n    this._y *= -1;\n    this._z *= -1;\n    this.onChangeCallback();\n    return this;\n  },\n  dot: function (v) {\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n  },\n  lengthSq: function () {\n    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n  },\n  length: function () {\n    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n  },\n  normalize: function () {\n    var l = this.length();\n\n    if (l === 0) {\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n    } else {\n      l = 1 / l;\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  multiply: function (q, p) {\n    if (p !== undefined) {\n      console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n      return this.multiplyQuaternions(q, p);\n    }\n\n    return this.multiplyQuaternions(this, q);\n  },\n  premultiply: function (q) {\n    return this.multiplyQuaternions(q, this);\n  },\n  multiplyQuaternions: function (a, b) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n    var qax = a._x,\n        qay = a._y,\n        qaz = a._z,\n        qaw = a._w;\n    var qbx = b._x,\n        qby = b._y,\n        qbz = b._z,\n        qbw = b._w;\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    this.onChangeCallback();\n    return this;\n  },\n  slerp: function (qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    var x = this._x,\n        y = this._y,\n        z = this._z,\n        w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n    if (cosHalfTheta < 0) {\n      this._w = -qb._w;\n      this._x = -qb._x;\n      this._y = -qb._y;\n      this._z = -qb._z;\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n\n    if (cosHalfTheta >= 1.0) {\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      return this;\n    }\n\n    var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n\n    if (Math.abs(sinHalfTheta) < 0.001) {\n      this._w = 0.5 * (w + this._w);\n      this._x = 0.5 * (x + this._x);\n      this._y = 0.5 * (y + this._y);\n      this._z = 0.5 * (z + this._z);\n      return this;\n    }\n\n    var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n    var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n        ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this._w = w * ratioA + this._w * ratioB;\n    this._x = x * ratioA + this._x * ratioB;\n    this._y = y * ratioA + this._y * ratioB;\n    this._z = z * ratioA + this._z * ratioB;\n    this.onChangeCallback();\n    return this;\n  },\n  equals: function (quaternion) {\n    return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this._x = array[offset];\n    this._y = array[offset + 1];\n    this._z = array[offset + 2];\n    this._w = array[offset + 3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._w;\n    return array;\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {}\n};\nObject.assign(THREE.Quaternion, {\n  slerp: function (qa, qb, qm, t) {\n    return qm.copy(qa).slerp(qb, t);\n  },\n  slerpFlat: function (dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n    // fuzz-free, array-based Quaternion SLERP operation\n    var x0 = src0[srcOffset0 + 0],\n        y0 = src0[srcOffset0 + 1],\n        z0 = src0[srcOffset0 + 2],\n        w0 = src0[srcOffset0 + 3],\n        x1 = src1[srcOffset1 + 0],\n        y1 = src1[srcOffset1 + 1],\n        z1 = src1[srcOffset1 + 2],\n        w1 = src1[srcOffset1 + 3];\n\n    if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n      var s = 1 - t,\n          cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n          dir = cos >= 0 ? 1 : -1,\n          sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n      if (sqrSin > Number.EPSILON) {\n        var sin = Math.sqrt(sqrSin),\n            len = Math.atan2(sin, cos * dir);\n        s = Math.sin(s * len) / sin;\n        t = Math.sin(t * len) / sin;\n      }\n\n      var tDir = t * dir;\n      x0 = x0 * s + x1 * tDir;\n      y0 = y0 * s + y1 * tDir;\n      z0 = z0 * s + z1 * tDir;\n      w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n      if (s === 1 - t) {\n        var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n        x0 *= f;\n        y0 *= f;\n        z0 *= f;\n        w0 *= f;\n      }\n    }\n\n    dst[dstOffset] = x0;\n    dst[dstOffset + 1] = y0;\n    dst[dstOffset + 2] = z0;\n    dst[dstOffset + 3] = w0;\n  }\n}); // File:src/math/Vector2.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\n\nTHREE.Vector2 = function (x, y) {\n  this.x = x || 0;\n  this.y = y || 0;\n};\n\nTHREE.Vector2.prototype = {\n  constructor: THREE.Vector2,\n\n  get width() {\n    return this.x;\n  },\n\n  set width(value) {\n    this.x = value;\n  },\n\n  get height() {\n    return this.y;\n  },\n\n  set height(value) {\n    this.y = value;\n  },\n\n  //\n  set: function (x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    return this;\n  },\n  multiply: function (v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n    }\n\n    return this;\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector2();\n        max = new THREE.Vector2();\n      }\n\n      min.set(minVal, minVal);\n      max.set(maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function (min, max) {\n    var length = this.length();\n    return this.multiplyScalar(Math.max(min, Math.min(max, length)) / length);\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  angle: function () {\n    // computes the angle in radians with respect to the positive x-axis\n    var angle = Math.atan2(this.y, this.x);\n    if (angle < 0) angle += 2 * Math.PI;\n    return angle;\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  },\n  setLength: function (length) {\n    return this.multiplyScalar(length / this.length());\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    return array;\n  },\n  fromAttribute: function (attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    return this;\n  },\n  rotateAround: function (center, angle) {\n    var c = Math.cos(angle),\n        s = Math.sin(angle);\n    var x = this.x - center.x;\n    var y = this.y - center.y;\n    this.x = x * c - y * s + center.x;\n    this.y = x * s + y * c + center.y;\n    return this;\n  }\n}; // File:src/math/Vector3.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.Vector3 = function (x, y, z) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\n\nTHREE.Vector3.prototype = {\n  constructor: THREE.Vector3,\n  set: function (x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    return this;\n  },\n  multiply: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return this;\n  },\n  multiplyVectors: function (a, b) {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n    return this;\n  },\n  applyEuler: function () {\n    var quaternion;\n    return function applyEuler(euler) {\n      if (euler instanceof THREE.Euler === false) {\n        console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      if (quaternion === undefined) quaternion = new THREE.Quaternion();\n      return this.applyQuaternion(quaternion.setFromEuler(euler));\n    };\n  }(),\n  applyAxisAngle: function () {\n    var quaternion;\n    return function applyAxisAngle(axis, angle) {\n      if (quaternion === undefined) quaternion = new THREE.Quaternion();\n      return this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n    };\n  }(),\n  applyMatrix3: function (m) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n    return this;\n  },\n  applyMatrix4: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n    return this;\n  },\n  applyProjection: function (m) {\n    // input: THREE.Matrix4 projection matrix\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // perspective divide\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n    return this;\n  },\n  applyQuaternion: function (q) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var qx = q.x,\n        qy = q.y,\n        qz = q.z,\n        qw = q.w; // calculate quat * vector\n\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return this;\n  },\n  project: function () {\n    var matrix;\n    return function project(camera) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.multiplyMatrices(camera.projectionMatrix, matrix.getInverse(camera.matrixWorld));\n      return this.applyProjection(matrix);\n    };\n  }(),\n  unproject: function () {\n    var matrix;\n    return function unproject(camera) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.multiplyMatrices(camera.matrixWorld, matrix.getInverse(camera.projectionMatrix));\n      return this.applyProjection(matrix);\n    };\n  }(),\n  transformDirection: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n    return this.normalize();\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector3();\n        max = new THREE.Vector3();\n      }\n\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function (min, max) {\n    var length = this.length();\n    return this.multiplyScalar(Math.max(min, Math.min(max, length)) / length);\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  setLength: function (length) {\n    return this.multiplyScalar(length / this.length());\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  cross: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n      return this.crossVectors(v, w);\n    }\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n    return this;\n  },\n  crossVectors: function (a, b) {\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  },\n  projectOnVector: function () {\n    var v1, dot;\n    return function projectOnVector(vector) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      v1.copy(vector).normalize();\n      dot = this.dot(v1);\n      return this.copy(v1).multiplyScalar(dot);\n    };\n  }(),\n  projectOnPlane: function () {\n    var v1;\n    return function projectOnPlane(planeNormal) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      v1.copy(this).projectOnVector(planeNormal);\n      return this.sub(v1);\n    };\n  }(),\n  reflect: function () {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n    var v1;\n    return function reflect(normal) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    };\n  }(),\n  angleTo: function (v) {\n    var theta = this.dot(v) / Math.sqrt(this.lengthSq() * v.lengthSq()); // clamp, to handle numerical problems\n\n    return Math.acos(THREE.Math.clamp(theta, -1, 1));\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y,\n        dz = this.z - v.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  setFromSpherical: function (s) {\n    var sinPhiRadius = Math.sin(s.phi) * s.radius;\n    this.x = sinPhiRadius * Math.sin(s.theta);\n    this.y = Math.cos(s.phi) * s.radius;\n    this.z = sinPhiRadius * Math.cos(s.theta);\n    return this;\n  },\n  setFromMatrixPosition: function (m) {\n    return this.setFromMatrixColumn(m, 3);\n  },\n  setFromMatrixScale: function (m) {\n    var sx = this.setFromMatrixColumn(m, 0).length();\n    var sy = this.setFromMatrixColumn(m, 1).length();\n    var sz = this.setFromMatrixColumn(m, 2).length();\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n    return this;\n  },\n  setFromMatrixColumn: function (m, index) {\n    if (typeof m === 'number') {\n      console.warn('THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).');\n      var temp = m;\n      m = index;\n      index = temp;\n    }\n\n    return this.fromArray(m.elements, index * 4);\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    return array;\n  },\n  fromAttribute: function (attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    this.z = attribute.array[index + 2];\n    return this;\n  }\n}; // File:src/math/Vector4.js\n\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.Vector4 = function (x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = w !== undefined ? w : 1;\n};\n\nTHREE.Vector4.prototype = {\n  constructor: THREE.Vector4,\n  set: function (x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    this.w = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setW: function (w) {\n    this.w = w;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      case 3:\n        this.w = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      case 3:\n        return this.w;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z, this.w);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w !== undefined ? v.w : 1;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    this.w += v.w * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    this.w -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    if (isFinite(scalar)) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      this.w *= scalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 0;\n    }\n\n    return this;\n  },\n  applyMatrix4: function (m) {\n    var x = this.x,\n        y = this.y,\n        z = this.z,\n        w = this.w;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  setAxisAngleFromQuaternion: function (q) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n    // q is assumed to be normalized\n    this.w = 2 * Math.acos(q.w);\n    var s = Math.sqrt(1 - q.w * q.w);\n\n    if (s < 0.0001) {\n      this.x = 1;\n      this.y = 0;\n      this.z = 0;\n    } else {\n      this.x = q.x / s;\n      this.y = q.y / s;\n      this.z = q.z / s;\n    }\n\n    return this;\n  },\n  setAxisAngleFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var angle,\n        x,\n        y,\n        z,\n        // variables for result\n    epsilon = 0.01,\n        // margin to allow for rounding errors\n    epsilon2 = 0.1,\n        // margin to distinguish between 0 and 180 degrees\n    te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n\n    if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n      if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n        // this singularity is identity matrix so angle = 0\n        this.set(1, 0, 0, 0);\n        return this; // zero angle, arbitrary axis\n      } // otherwise this singularity is angle = 180\n\n\n      angle = Math.PI;\n      var xx = (m11 + 1) / 2;\n      var yy = (m22 + 1) / 2;\n      var zz = (m33 + 1) / 2;\n      var xy = (m12 + m21) / 4;\n      var xz = (m13 + m31) / 4;\n      var yz = (m23 + m32) / 4;\n\n      if (xx > yy && xx > zz) {\n        // m11 is the largest diagonal term\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n\n      this.set(x, y, z, angle);\n      return this; // return 180 deg rotation\n    } // as we have reached here there are no singularities so we can handle normally\n\n\n    var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n    if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n    return this;\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    this.w = Math.min(this.w, v.w);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    this.w = Math.max(this.w, v.w);\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    this.w = Math.max(min.w, Math.min(max.w, this.w));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector4();\n        max = new THREE.Vector4();\n      }\n\n      min.set(minVal, minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    this.w = -this.w;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  setLength: function (length) {\n    return this.multiplyScalar(length / this.length());\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n    return array;\n  },\n  fromAttribute: function (attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    this.z = attribute.array[index + 2];\n    this.w = attribute.array[index + 3];\n    return this;\n  }\n}; // File:src/math/Euler.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Euler = function (x, y, z, order) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._order = order || THREE.Euler.DefaultOrder;\n};\n\nTHREE.Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\nTHREE.Euler.DefaultOrder = 'XYZ';\nTHREE.Euler.prototype = {\n  constructor: THREE.Euler,\n\n  get x() {\n    return this._x;\n  },\n\n  set x(value) {\n    this._x = value;\n    this.onChangeCallback();\n  },\n\n  get y() {\n    return this._y;\n  },\n\n  set y(value) {\n    this._y = value;\n    this.onChangeCallback();\n  },\n\n  get z() {\n    return this._z;\n  },\n\n  set z(value) {\n    this._z = value;\n    this.onChangeCallback();\n  },\n\n  get order() {\n    return this._order;\n  },\n\n  set order(value) {\n    this._order = value;\n    this.onChangeCallback();\n  },\n\n  set: function (x, y, z, order) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order || this._order;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this._x, this._y, this._z, this._order);\n  },\n  copy: function (euler) {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m, order, update) {\n    var clamp = THREE.Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var te = m.elements;\n    var m11 = te[0],\n        m12 = te[4],\n        m13 = te[8];\n    var m21 = te[1],\n        m22 = te[5],\n        m23 = te[9];\n    var m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n    order = order || this._order;\n\n    if (order === 'XYZ') {\n      this._y = Math.asin(clamp(m13, -1, 1));\n\n      if (Math.abs(m13) < 0.99999) {\n        this._x = Math.atan2(-m23, m33);\n        this._z = Math.atan2(-m12, m11);\n      } else {\n        this._x = Math.atan2(m32, m22);\n        this._z = 0;\n      }\n    } else if (order === 'YXZ') {\n      this._x = Math.asin(-clamp(m23, -1, 1));\n\n      if (Math.abs(m23) < 0.99999) {\n        this._y = Math.atan2(m13, m33);\n        this._z = Math.atan2(m21, m22);\n      } else {\n        this._y = Math.atan2(-m31, m11);\n        this._z = 0;\n      }\n    } else if (order === 'ZXY') {\n      this._x = Math.asin(clamp(m32, -1, 1));\n\n      if (Math.abs(m32) < 0.99999) {\n        this._y = Math.atan2(-m31, m33);\n        this._z = Math.atan2(-m12, m22);\n      } else {\n        this._y = 0;\n        this._z = Math.atan2(m21, m11);\n      }\n    } else if (order === 'ZYX') {\n      this._y = Math.asin(-clamp(m31, -1, 1));\n\n      if (Math.abs(m31) < 0.99999) {\n        this._x = Math.atan2(m32, m33);\n        this._z = Math.atan2(m21, m11);\n      } else {\n        this._x = 0;\n        this._z = Math.atan2(-m12, m22);\n      }\n    } else if (order === 'YZX') {\n      this._z = Math.asin(clamp(m21, -1, 1));\n\n      if (Math.abs(m21) < 0.99999) {\n        this._x = Math.atan2(-m23, m22);\n        this._y = Math.atan2(-m31, m11);\n      } else {\n        this._x = 0;\n        this._y = Math.atan2(m13, m33);\n      }\n    } else if (order === 'XZY') {\n      this._z = Math.asin(-clamp(m12, -1, 1));\n\n      if (Math.abs(m12) < 0.99999) {\n        this._x = Math.atan2(m32, m22);\n        this._y = Math.atan2(m13, m11);\n      } else {\n        this._x = Math.atan2(-m23, m33);\n        this._y = 0;\n      }\n    } else {\n      console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n    }\n\n    this._order = order;\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromQuaternion: function () {\n    var matrix;\n    return function (q, order, update) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.makeRotationFromQuaternion(q);\n      return this.setFromRotationMatrix(matrix, order, update);\n    };\n  }(),\n  setFromVector3: function (v, order) {\n    return this.set(v.x, v.y, v.z, order || this._order);\n  },\n  reorder: function () {\n    // WARNING: this discards revolution information -bhouston\n    var q = new THREE.Quaternion();\n    return function (newOrder) {\n      q.setFromEuler(this);\n      return this.setFromQuaternion(q, newOrder);\n    };\n  }(),\n  equals: function (euler) {\n    return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n  },\n  fromArray: function (array) {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._order;\n    return array;\n  },\n  toVector3: function (optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this._x, this._y, this._z);\n    } else {\n      return new THREE.Vector3(this._x, this._y, this._z);\n    }\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {}\n}; // File:src/math/Line3.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Line3 = function (start, end) {\n  this.start = start !== undefined ? start : new THREE.Vector3();\n  this.end = end !== undefined ? end : new THREE.Vector3();\n};\n\nTHREE.Line3.prototype = {\n  constructor: THREE.Line3,\n  set: function (start, end) {\n    this.start.copy(start);\n    this.end.copy(end);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (line) {\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n    return this;\n  },\n  center: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n  },\n  delta: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.subVectors(this.end, this.start);\n  },\n  distanceSq: function () {\n    return this.start.distanceToSquared(this.end);\n  },\n  distance: function () {\n    return this.start.distanceTo(this.end);\n  },\n  at: function (t, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return this.delta(result).multiplyScalar(t).add(this.start);\n  },\n  closestPointToPointParameter: function () {\n    var startP = new THREE.Vector3();\n    var startEnd = new THREE.Vector3();\n    return function (point, clampToLine) {\n      startP.subVectors(point, this.start);\n      startEnd.subVectors(this.end, this.start);\n      var startEnd2 = startEnd.dot(startEnd);\n      var startEnd_startP = startEnd.dot(startP);\n      var t = startEnd_startP / startEnd2;\n\n      if (clampToLine) {\n        t = THREE.Math.clamp(t, 0, 1);\n      }\n\n      return t;\n    };\n  }(),\n  closestPointToPoint: function (point, clampToLine, optionalTarget) {\n    var t = this.closestPointToPointParameter(point, clampToLine);\n    var result = optionalTarget || new THREE.Vector3();\n    return this.delta(result).multiplyScalar(t).add(this.start);\n  },\n  applyMatrix4: function (matrix) {\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n    return this;\n  },\n  equals: function (line) {\n    return line.start.equals(this.start) && line.end.equals(this.end);\n  }\n}; // File:src/math/Box2.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Box2 = function (min, max) {\n  this.min = min !== undefined ? min : new THREE.Vector2(+Infinity, +Infinity);\n  this.max = max !== undefined ? max : new THREE.Vector2(-Infinity, -Infinity);\n};\n\nTHREE.Box2.prototype = {\n  constructor: THREE.Box2,\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new THREE.Vector2();\n    return function (center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = +Infinity;\n    this.max.x = this.max.y = -Infinity;\n    return this;\n  },\n  isEmpty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y;\n  },\n  center: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector2();\n    return result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  size: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector2();\n    return result.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function (point) {\n    if (point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y) {\n      return false;\n    }\n\n    return true;\n  },\n  containsBox: function (box) {\n    if (this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y) {\n      return true;\n    }\n\n    return false;\n  },\n  getParameter: function (point, optionalTarget) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    var result = optionalTarget || new THREE.Vector2();\n    return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n  },\n  intersectsBox: function (box) {\n    // using 6 splitting planes to rule out intersections.\n    if (box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y) {\n      return false;\n    }\n\n    return true;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector2();\n    return result.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new THREE.Vector2();\n    return function (point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}; // File:src/math/Box3.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.Box3 = function (min, max) {\n  this.min = min !== undefined ? min : new THREE.Vector3(+Infinity, +Infinity, +Infinity);\n  this.max = max !== undefined ? max : new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n};\n\nTHREE.Box3.prototype = {\n  constructor: THREE.Box3,\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromArray: function (array) {\n    var minX = +Infinity;\n    var minY = +Infinity;\n    var minZ = +Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n    var maxZ = -Infinity;\n\n    for (var i = 0, l = array.length; i < l; i += 3) {\n      var x = array[i];\n      var y = array[i + 1];\n      var z = array[i + 2];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new THREE.Vector3();\n    return function (center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  setFromObject: function () {\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and children's, world transforms\n    var v1 = new THREE.Vector3();\n    return function (object) {\n      var scope = this;\n      object.updateMatrixWorld(true);\n      this.makeEmpty();\n      object.traverse(function (node) {\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry instanceof THREE.Geometry) {\n            var vertices = geometry.vertices;\n\n            for (var i = 0, il = vertices.length; i < il; i++) {\n              v1.copy(vertices[i]);\n              v1.applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          } else if (geometry instanceof THREE.BufferGeometry && geometry.attributes['position'] !== undefined) {\n            var positions = geometry.attributes['position'].array;\n\n            for (var i = 0, il = positions.length; i < il; i += 3) {\n              v1.fromArray(positions, i);\n              v1.applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          }\n        }\n      });\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = this.min.z = +Infinity;\n    this.max.x = this.max.y = this.max.z = -Infinity;\n    return this;\n  },\n  isEmpty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n  },\n  center: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  size: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function (point) {\n    if (point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z) {\n      return false;\n    }\n\n    return true;\n  },\n  containsBox: function (box) {\n    if (this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z) {\n      return true;\n    }\n\n    return false;\n  },\n  getParameter: function (point, optionalTarget) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    var result = optionalTarget || new THREE.Vector3();\n    return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n  },\n  intersectsBox: function (box) {\n    // using 6 splitting planes to rule out intersections.\n    if (box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z) {\n      return false;\n    }\n\n    return true;\n  },\n  intersectsSphere: function () {\n    var closestPoint;\n    return function intersectsSphere(sphere) {\n      if (closestPoint === undefined) closestPoint = new THREE.Vector3(); // Find the point on the AABB closest to the sphere center.\n\n      this.clampPoint(sphere.center, closestPoint); // If that point is inside the sphere, the AABB and sphere intersect.\n\n      return closestPoint.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n    };\n  }(),\n  intersectsPlane: function (plane) {\n    // We compute the minimum and maximum dot product values. If those values\n    // are on the same side (back or front) of the plane, then there is no intersection.\n    var min, max;\n\n    if (plane.normal.x > 0) {\n      min = plane.normal.x * this.min.x;\n      max = plane.normal.x * this.max.x;\n    } else {\n      min = plane.normal.x * this.max.x;\n      max = plane.normal.x * this.min.x;\n    }\n\n    if (plane.normal.y > 0) {\n      min += plane.normal.y * this.min.y;\n      max += plane.normal.y * this.max.y;\n    } else {\n      min += plane.normal.y * this.max.y;\n      max += plane.normal.y * this.min.y;\n    }\n\n    if (plane.normal.z > 0) {\n      min += plane.normal.z * this.min.z;\n      max += plane.normal.z * this.max.z;\n    } else {\n      min += plane.normal.z * this.max.z;\n      max += plane.normal.z * this.min.z;\n    }\n\n    return min <= plane.constant && max >= plane.constant;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new THREE.Vector3();\n    return function (point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  getBoundingSphere: function () {\n    var v1 = new THREE.Vector3();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Sphere();\n      result.center = this.center();\n      result.radius = this.size(v1).length() * 0.5;\n      return result;\n    };\n  }(),\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n    if (this.isEmpty()) this.makeEmpty();\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  applyMatrix4: function () {\n    var points = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()];\n    return function (matrix) {\n      // transform of empty box is an empty box.\n      if (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n      points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n      points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n      points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n      points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n      points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n      points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n      points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n      points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n      this.setFromPoints(points);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}; // File:src/math/Matrix3.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n * @author tschw\r\n */\n\nTHREE.Matrix3 = function () {\n  this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\n  if (arguments.length > 0) {\n    console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n  }\n};\n\nTHREE.Matrix3.prototype = {\n  constructor: THREE.Matrix3,\n  set: function (n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n    var te = this.elements;\n    te[0] = n11;\n    te[1] = n21;\n    te[2] = n31;\n    te[3] = n12;\n    te[4] = n22;\n    te[5] = n32;\n    te[6] = n13;\n    te[7] = n23;\n    te[8] = n33;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().fromArray(this.elements);\n  },\n  copy: function (m) {\n    var me = m.elements;\n    this.set(me[0], me[3], me[6], me[1], me[4], me[7], me[2], me[5], me[8]);\n    return this;\n  },\n  setFromMatrix4: function (m) {\n    var me = m.elements;\n    this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n    return this;\n  },\n  applyToVector3Array: function () {\n    var v1;\n    return function (array, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = array.length;\n\n      for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n        v1.fromArray(array, j);\n        v1.applyMatrix3(this);\n        v1.toArray(array, j);\n      }\n\n      return array;\n    };\n  }(),\n  applyToBuffer: function () {\n    var v1;\n    return function applyToBuffer(buffer, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = buffer.length / buffer.itemSize;\n\n      for (var i = 0, j = offset; i < length; i++, j++) {\n        v1.x = buffer.getX(j);\n        v1.y = buffer.getY(j);\n        v1.z = buffer.getZ(j);\n        v1.applyMatrix3(this);\n        buffer.setXYZ(v1.x, v1.y, v1.z);\n      }\n\n      return buffer;\n    };\n  }(),\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[3] *= s;\n    te[6] *= s;\n    te[1] *= s;\n    te[4] *= s;\n    te[7] *= s;\n    te[2] *= s;\n    te[5] *= s;\n    te[8] *= s;\n    return this;\n  },\n  determinant: function () {\n    var te = this.elements;\n    var a = te[0],\n        b = te[1],\n        c = te[2],\n        d = te[3],\n        e = te[4],\n        f = te[5],\n        g = te[6],\n        h = te[7],\n        i = te[8];\n    return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n  },\n  getInverse: function (matrix, throwOnDegenerate) {\n    if (matrix instanceof THREE.Matrix4) {\n      console.error(\"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\");\n    }\n\n    var me = matrix.elements,\n        te = this.elements,\n        n11 = me[0],\n        n21 = me[1],\n        n31 = me[2],\n        n12 = me[3],\n        n22 = me[4],\n        n32 = me[5],\n        n13 = me[6],\n        n23 = me[7],\n        n33 = me[8],\n        t11 = n33 * n22 - n32 * n23,\n        t12 = n32 * n13 - n33 * n12,\n        t13 = n23 * n12 - n22 * n13,\n        det = n11 * t11 + n21 * t12 + n31 * t13;\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnDegenerate || false) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      return this.identity();\n    }\n\n    var detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n31 * n23 - n33 * n21) * detInv;\n    te[2] = (n32 * n21 - n31 * n22) * detInv;\n    te[3] = t12 * detInv;\n    te[4] = (n33 * n11 - n31 * n13) * detInv;\n    te[5] = (n31 * n12 - n32 * n11) * detInv;\n    te[6] = t13 * detInv;\n    te[7] = (n21 * n13 - n23 * n11) * detInv;\n    te[8] = (n22 * n11 - n21 * n12) * detInv;\n    return this;\n  },\n  transpose: function () {\n    var tmp,\n        m = this.elements;\n    tmp = m[1];\n    m[1] = m[3];\n    m[3] = tmp;\n    tmp = m[2];\n    m[2] = m[6];\n    m[6] = tmp;\n    tmp = m[5];\n    m[5] = m[7];\n    m[7] = tmp;\n    return this;\n  },\n  flattenToArrayOffset: function (array, offset) {\n    console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated \" + \"- just use .toArray instead.\");\n    return this.toArray(array, offset);\n  },\n  getNormalMatrix: function (matrix4) {\n    return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n  },\n  transposeIntoArray: function (r) {\n    var m = this.elements;\n    r[0] = m[0];\n    r[1] = m[3];\n    r[2] = m[6];\n    r[3] = m[1];\n    r[4] = m[4];\n    r[5] = m[7];\n    r[6] = m[2];\n    r[7] = m[5];\n    r[8] = m[8];\n    return this;\n  },\n  fromArray: function (array) {\n    this.elements.set(array);\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    return array;\n  }\n}; // File:src/math/Matrix4.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.Matrix4 = function () {\n  this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\n  if (arguments.length > 0) {\n    console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n  }\n};\n\nTHREE.Matrix4.prototype = {\n  constructor: THREE.Matrix4,\n  set: function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n    var te = this.elements;\n    te[0] = n11;\n    te[4] = n12;\n    te[8] = n13;\n    te[12] = n14;\n    te[1] = n21;\n    te[5] = n22;\n    te[9] = n23;\n    te[13] = n24;\n    te[2] = n31;\n    te[6] = n32;\n    te[10] = n33;\n    te[14] = n34;\n    te[3] = n41;\n    te[7] = n42;\n    te[11] = n43;\n    te[15] = n44;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function () {\n    return new THREE.Matrix4().fromArray(this.elements);\n  },\n  copy: function (m) {\n    this.elements.set(m.elements);\n    return this;\n  },\n  copyPosition: function (m) {\n    var te = this.elements;\n    var me = m.elements;\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    return this;\n  },\n  extractBasis: function (xAxis, yAxis, zAxis) {\n    xAxis.setFromMatrixColumn(this, 0);\n    yAxis.setFromMatrixColumn(this, 1);\n    zAxis.setFromMatrixColumn(this, 2);\n    return this;\n  },\n  makeBasis: function (xAxis, yAxis, zAxis) {\n    this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  extractRotation: function () {\n    var v1;\n    return function (m) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      var te = this.elements;\n      var me = m.elements;\n      var scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\n      var scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\n      var scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\n      te[0] = me[0] * scaleX;\n      te[1] = me[1] * scaleX;\n      te[2] = me[2] * scaleX;\n      te[4] = me[4] * scaleY;\n      te[5] = me[5] * scaleY;\n      te[6] = me[6] * scaleY;\n      te[8] = me[8] * scaleZ;\n      te[9] = me[9] * scaleZ;\n      te[10] = me[10] * scaleZ;\n      return this;\n    };\n  }(),\n  makeRotationFromEuler: function (euler) {\n    if (euler instanceof THREE.Euler === false) {\n      console.error('THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    }\n\n    var te = this.elements;\n    var x = euler.x,\n        y = euler.y,\n        z = euler.z;\n    var a = Math.cos(x),\n        b = Math.sin(x);\n    var c = Math.cos(y),\n        d = Math.sin(y);\n    var e = Math.cos(z),\n        f = Math.sin(z);\n\n    if (euler.order === 'XYZ') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else if (euler.order === 'YXZ') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = -b;\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZXY') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce - df * b;\n      te[4] = -a * f;\n      te[8] = de + cf * b;\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n      te[2] = -a * d;\n      te[6] = b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZYX') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n      te[2] = -d;\n      te[6] = b * c;\n      te[10] = a * c;\n    } else if (euler.order === 'YZX') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = -b * e;\n      te[2] = -d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n    } else if (euler.order === 'XZY') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = -f;\n      te[8] = d * e;\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n    } // last column\n\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  makeRotationFromQuaternion: function (q) {\n    var te = this.elements;\n    var x = q.x,\n        y = q.y,\n        z = q.z,\n        w = q.w;\n    var x2 = x + x,\n        y2 = y + y,\n        z2 = z + z;\n    var xx = x * x2,\n        xy = x * y2,\n        xz = x * z2;\n    var yy = y * y2,\n        yz = y * z2,\n        zz = z * z2;\n    var wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n    te[0] = 1 - (yy + zz);\n    te[4] = xy - wz;\n    te[8] = xz + wy;\n    te[1] = xy + wz;\n    te[5] = 1 - (xx + zz);\n    te[9] = yz - wx;\n    te[2] = xz - wy;\n    te[6] = yz + wx;\n    te[10] = 1 - (xx + yy); // last column\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  lookAt: function () {\n    var x, y, z;\n    return function (eye, target, up) {\n      if (x === undefined) {\n        x = new THREE.Vector3();\n        y = new THREE.Vector3();\n        z = new THREE.Vector3();\n      }\n\n      var te = this.elements;\n      z.subVectors(eye, target).normalize();\n\n      if (z.lengthSq() === 0) {\n        z.z = 1;\n      }\n\n      x.crossVectors(up, z).normalize();\n\n      if (x.lengthSq() === 0) {\n        z.z += 0.0001;\n        x.crossVectors(up, z).normalize();\n      }\n\n      y.crossVectors(z, x);\n      te[0] = x.x;\n      te[4] = y.x;\n      te[8] = z.x;\n      te[1] = x.y;\n      te[5] = y.y;\n      te[9] = z.y;\n      te[2] = x.z;\n      te[6] = y.z;\n      te[10] = z.z;\n      return this;\n    };\n  }(),\n  multiply: function (m, n) {\n    if (n !== undefined) {\n      console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n      return this.multiplyMatrices(m, n);\n    }\n\n    return this.multiplyMatrices(this, m);\n  },\n  premultiply: function (m) {\n    return this.multiplyMatrices(m, this);\n  },\n  multiplyMatrices: function (a, b) {\n    var ae = a.elements;\n    var be = b.elements;\n    var te = this.elements;\n    var a11 = ae[0],\n        a12 = ae[4],\n        a13 = ae[8],\n        a14 = ae[12];\n    var a21 = ae[1],\n        a22 = ae[5],\n        a23 = ae[9],\n        a24 = ae[13];\n    var a31 = ae[2],\n        a32 = ae[6],\n        a33 = ae[10],\n        a34 = ae[14];\n    var a41 = ae[3],\n        a42 = ae[7],\n        a43 = ae[11],\n        a44 = ae[15];\n    var b11 = be[0],\n        b12 = be[4],\n        b13 = be[8],\n        b14 = be[12];\n    var b21 = be[1],\n        b22 = be[5],\n        b23 = be[9],\n        b24 = be[13];\n    var b31 = be[2],\n        b32 = be[6],\n        b33 = be[10],\n        b34 = be[14];\n    var b41 = be[3],\n        b42 = be[7],\n        b43 = be[11],\n        b44 = be[15];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n    return this;\n  },\n  multiplyToArray: function (a, b, r) {\n    var te = this.elements;\n    this.multiplyMatrices(a, b);\n    r[0] = te[0];\n    r[1] = te[1];\n    r[2] = te[2];\n    r[3] = te[3];\n    r[4] = te[4];\n    r[5] = te[5];\n    r[6] = te[6];\n    r[7] = te[7];\n    r[8] = te[8];\n    r[9] = te[9];\n    r[10] = te[10];\n    r[11] = te[11];\n    r[12] = te[12];\n    r[13] = te[13];\n    r[14] = te[14];\n    r[15] = te[15];\n    return this;\n  },\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[4] *= s;\n    te[8] *= s;\n    te[12] *= s;\n    te[1] *= s;\n    te[5] *= s;\n    te[9] *= s;\n    te[13] *= s;\n    te[2] *= s;\n    te[6] *= s;\n    te[10] *= s;\n    te[14] *= s;\n    te[3] *= s;\n    te[7] *= s;\n    te[11] *= s;\n    te[15] *= s;\n    return this;\n  },\n  applyToVector3Array: function () {\n    var v1;\n    return function (array, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = array.length;\n\n      for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n        v1.fromArray(array, j);\n        v1.applyMatrix4(this);\n        v1.toArray(array, j);\n      }\n\n      return array;\n    };\n  }(),\n  applyToBuffer: function () {\n    var v1;\n    return function applyToBuffer(buffer, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = buffer.length / buffer.itemSize;\n\n      for (var i = 0, j = offset; i < length; i++, j++) {\n        v1.x = buffer.getX(j);\n        v1.y = buffer.getY(j);\n        v1.z = buffer.getZ(j);\n        v1.applyMatrix4(this);\n        buffer.setXYZ(v1.x, v1.y, v1.z);\n      }\n\n      return buffer;\n    };\n  }(),\n  determinant: function () {\n    var te = this.elements;\n    var n11 = te[0],\n        n12 = te[4],\n        n13 = te[8],\n        n14 = te[12];\n    var n21 = te[1],\n        n22 = te[5],\n        n23 = te[9],\n        n24 = te[13];\n    var n31 = te[2],\n        n32 = te[6],\n        n33 = te[10],\n        n34 = te[14];\n    var n41 = te[3],\n        n42 = te[7],\n        n43 = te[11],\n        n44 = te[15]; //TODO: make this more efficient\n    //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n  },\n  transpose: function () {\n    var te = this.elements;\n    var tmp;\n    tmp = te[1];\n    te[1] = te[4];\n    te[4] = tmp;\n    tmp = te[2];\n    te[2] = te[8];\n    te[8] = tmp;\n    tmp = te[6];\n    te[6] = te[9];\n    te[9] = tmp;\n    tmp = te[3];\n    te[3] = te[12];\n    te[12] = tmp;\n    tmp = te[7];\n    te[7] = te[13];\n    te[13] = tmp;\n    tmp = te[11];\n    te[11] = te[14];\n    te[14] = tmp;\n    return this;\n  },\n  flattenToArrayOffset: function (array, offset) {\n    console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated \" + \"- just use .toArray instead.\");\n    return this.toArray(array, offset);\n  },\n  getPosition: function () {\n    var v1;\n    return function () {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n      return v1.setFromMatrixColumn(this, 3);\n    };\n  }(),\n  setPosition: function (v) {\n    var te = this.elements;\n    te[12] = v.x;\n    te[13] = v.y;\n    te[14] = v.z;\n    return this;\n  },\n  getInverse: function (m, throwOnDegenerate) {\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    var te = this.elements,\n        me = m.elements,\n        n11 = me[0],\n        n21 = me[1],\n        n31 = me[2],\n        n41 = me[3],\n        n12 = me[4],\n        n22 = me[5],\n        n32 = me[6],\n        n42 = me[7],\n        n13 = me[8],\n        n23 = me[9],\n        n33 = me[10],\n        n43 = me[11],\n        n14 = me[12],\n        n24 = me[13],\n        n34 = me[14],\n        n44 = me[15],\n        t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n        t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n        t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n        t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnDegenerate || false) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      return this.identity();\n    }\n\n    var detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n    te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n    te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n    te[4] = t12 * detInv;\n    te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n    te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n    te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n    te[8] = t13 * detInv;\n    te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n    te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n    te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n    te[12] = t14 * detInv;\n    te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n    te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n    te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n    return this;\n  },\n  scale: function (v) {\n    var te = this.elements;\n    var x = v.x,\n        y = v.y,\n        z = v.z;\n    te[0] *= x;\n    te[4] *= y;\n    te[8] *= z;\n    te[1] *= x;\n    te[5] *= y;\n    te[9] *= z;\n    te[2] *= x;\n    te[6] *= y;\n    te[10] *= z;\n    te[3] *= x;\n    te[7] *= y;\n    te[11] *= z;\n    return this;\n  },\n  getMaxScaleOnAxis: function () {\n    var te = this.elements;\n    var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n  },\n  makeTranslation: function (x, y, z) {\n    this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationX: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationY: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationZ: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationAxis: function (axis, angle) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n    var c = Math.cos(angle);\n    var s = Math.sin(angle);\n    var t = 1 - c;\n    var x = axis.x,\n        y = axis.y,\n        z = axis.z;\n    var tx = t * x,\n        ty = t * y;\n    this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeScale: function (x, y, z) {\n    this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  compose: function (position, quaternion, scale) {\n    this.makeRotationFromQuaternion(quaternion);\n    this.scale(scale);\n    this.setPosition(position);\n    return this;\n  },\n  decompose: function () {\n    var vector, matrix;\n    return function (position, quaternion, scale) {\n      if (vector === undefined) {\n        vector = new THREE.Vector3();\n        matrix = new THREE.Matrix4();\n      }\n\n      var te = this.elements;\n      var sx = vector.set(te[0], te[1], te[2]).length();\n      var sy = vector.set(te[4], te[5], te[6]).length();\n      var sz = vector.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n      var det = this.determinant();\n\n      if (det < 0) {\n        sx = -sx;\n      }\n\n      position.x = te[12];\n      position.y = te[13];\n      position.z = te[14]; // scale the rotation part\n\n      matrix.elements.set(this.elements); // at this point matrix is incomplete so we can't use .copy()\n\n      var invSX = 1 / sx;\n      var invSY = 1 / sy;\n      var invSZ = 1 / sz;\n      matrix.elements[0] *= invSX;\n      matrix.elements[1] *= invSX;\n      matrix.elements[2] *= invSX;\n      matrix.elements[4] *= invSY;\n      matrix.elements[5] *= invSY;\n      matrix.elements[6] *= invSY;\n      matrix.elements[8] *= invSZ;\n      matrix.elements[9] *= invSZ;\n      matrix.elements[10] *= invSZ;\n      quaternion.setFromRotationMatrix(matrix);\n      scale.x = sx;\n      scale.y = sy;\n      scale.z = sz;\n      return this;\n    };\n  }(),\n  makeFrustum: function (left, right, bottom, top, near, far) {\n    var te = this.elements;\n    var x = 2 * near / (right - left);\n    var y = 2 * near / (top - bottom);\n    var a = (right + left) / (right - left);\n    var b = (top + bottom) / (top - bottom);\n    var c = -(far + near) / (far - near);\n    var d = -2 * far * near / (far - near);\n    te[0] = x;\n    te[4] = 0;\n    te[8] = a;\n    te[12] = 0;\n    te[1] = 0;\n    te[5] = y;\n    te[9] = b;\n    te[13] = 0;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = c;\n    te[14] = d;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = -1;\n    te[15] = 0;\n    return this;\n  },\n  makePerspective: function (fov, aspect, near, far) {\n    var ymax = near * Math.tan(THREE.Math.DEG2RAD * fov * 0.5);\n    var ymin = -ymax;\n    var xmin = ymin * aspect;\n    var xmax = ymax * aspect;\n    return this.makeFrustum(xmin, xmax, ymin, ymax, near, far);\n  },\n  makeOrthographic: function (left, right, top, bottom, near, far) {\n    var te = this.elements;\n    var w = 1.0 / (right - left);\n    var h = 1.0 / (top - bottom);\n    var p = 1.0 / (far - near);\n    var x = (right + left) * w;\n    var y = (top + bottom) * h;\n    var z = (far + near) * p;\n    te[0] = 2 * w;\n    te[4] = 0;\n    te[8] = 0;\n    te[12] = -x;\n    te[1] = 0;\n    te[5] = 2 * h;\n    te[9] = 0;\n    te[13] = -y;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = -2 * p;\n    te[14] = -z;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[15] = 1;\n    return this;\n  },\n  equals: function (matrix) {\n    var te = this.elements;\n    var me = matrix.elements;\n\n    for (var i = 0; i < 16; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  },\n  fromArray: function (array) {\n    this.elements.set(array);\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    array[offset + 9] = te[9];\n    array[offset + 10] = te[10];\n    array[offset + 11] = te[11];\n    array[offset + 12] = te[12];\n    array[offset + 13] = te[13];\n    array[offset + 14] = te[14];\n    array[offset + 15] = te[15];\n    return array;\n  }\n}; // File:src/math/Ray.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Ray = function (origin, direction) {\n  this.origin = origin !== undefined ? origin : new THREE.Vector3();\n  this.direction = direction !== undefined ? direction : new THREE.Vector3();\n};\n\nTHREE.Ray.prototype = {\n  constructor: THREE.Ray,\n  set: function (origin, direction) {\n    this.origin.copy(origin);\n    this.direction.copy(direction);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (ray) {\n    this.origin.copy(ray.origin);\n    this.direction.copy(ray.direction);\n    return this;\n  },\n  at: function (t, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.direction).multiplyScalar(t).add(this.origin);\n  },\n  lookAt: function (v) {\n    this.direction.copy(v).sub(this.origin).normalize();\n    return this;\n  },\n  recast: function () {\n    var v1 = new THREE.Vector3();\n    return function (t) {\n      this.origin.copy(this.at(t, v1));\n      return this;\n    };\n  }(),\n  closestPointToPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors(point, this.origin);\n    var directionDistance = result.dot(this.direction);\n\n    if (directionDistance < 0) {\n      return result.copy(this.origin);\n    }\n\n    return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n  },\n  distanceToPoint: function (point) {\n    return Math.sqrt(this.distanceSqToPoint(point));\n  },\n  distanceSqToPoint: function () {\n    var v1 = new THREE.Vector3();\n    return function (point) {\n      var directionDistance = v1.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n      if (directionDistance < 0) {\n        return this.origin.distanceToSquared(point);\n      }\n\n      v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n      return v1.distanceToSquared(point);\n    };\n  }(),\n  distanceSqToSegment: function () {\n    var segCenter = new THREE.Vector3();\n    var segDir = new THREE.Vector3();\n    var diff = new THREE.Vector3();\n    return function (v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n      // It returns the min distance between the ray and the segment\n      // defined by v0 and v1\n      // It can also set two optional targets :\n      // - The closest point on the ray\n      // - The closest point on the segment\n      segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n      segDir.copy(v1).sub(v0).normalize();\n      diff.copy(this.origin).sub(segCenter);\n      var segExtent = v0.distanceTo(v1) * 0.5;\n      var a01 = -this.direction.dot(segDir);\n      var b0 = diff.dot(this.direction);\n      var b1 = -diff.dot(segDir);\n      var c = diff.lengthSq();\n      var det = Math.abs(1 - a01 * a01);\n      var s0, s1, sqrDist, extDet;\n\n      if (det > 0) {\n        // The ray and segment are not parallel.\n        s0 = a01 * b1 - b0;\n        s1 = a01 * b0 - b1;\n        extDet = segExtent * det;\n\n        if (s0 >= 0) {\n          if (s1 >= -extDet) {\n            if (s1 <= extDet) {\n              // region 0\n              // Minimum at interior points of ray and segment.\n              var invDet = 1 / det;\n              s0 *= invDet;\n              s1 *= invDet;\n              sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n            } else {\n              // region 1\n              s1 = segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            // region 5\n            s1 = -segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          if (s1 <= -extDet) {\n            // region 4\n            s0 = Math.max(0, -(-a01 * segExtent + b0));\n            s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          } else if (s1 <= extDet) {\n            // region 3\n            s0 = 0;\n            s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = s1 * (s1 + 2 * b1) + c;\n          } else {\n            // region 2\n            s0 = Math.max(0, -(a01 * segExtent + b0));\n            s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        }\n      } else {\n        // Ray and segment are parallel.\n        s1 = a01 > 0 ? -segExtent : segExtent;\n        s0 = Math.max(0, -(a01 * s1 + b0));\n        sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n      }\n\n      if (optionalPointOnRay) {\n        optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n      }\n\n      if (optionalPointOnSegment) {\n        optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);\n      }\n\n      return sqrDist;\n    };\n  }(),\n  intersectSphere: function () {\n    var v1 = new THREE.Vector3();\n    return function (sphere, optionalTarget) {\n      v1.subVectors(sphere.center, this.origin);\n      var tca = v1.dot(this.direction);\n      var d2 = v1.dot(v1) - tca * tca;\n      var radius2 = sphere.radius * sphere.radius;\n      if (d2 > radius2) return null;\n      var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n      var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n      var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n      if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n      // in order to always return an intersect point that is in front of the ray.\n\n      if (t0 < 0) return this.at(t1, optionalTarget); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n      return this.at(t0, optionalTarget);\n    };\n  }(),\n  intersectsSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) <= sphere.radius;\n  },\n  distanceToPlane: function (plane) {\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (plane.distanceToPoint(this.origin) === 0) {\n        return 0;\n      } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n      return null;\n    }\n\n    var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n    return t >= 0 ? t : null;\n  },\n  intersectPlane: function (plane, optionalTarget) {\n    var t = this.distanceToPlane(plane);\n\n    if (t === null) {\n      return null;\n    }\n\n    return this.at(t, optionalTarget);\n  },\n  intersectsPlane: function (plane) {\n    // check if the ray lies on the plane first\n    var distToPoint = plane.distanceToPoint(this.origin);\n\n    if (distToPoint === 0) {\n      return true;\n    }\n\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator * distToPoint < 0) {\n      return true;\n    } // ray origin is behind the plane (and is pointing behind it)\n\n\n    return false;\n  },\n  intersectBox: function (box, optionalTarget) {\n    var tmin, tmax, tymin, tymax, tzmin, tzmax;\n    var invdirx = 1 / this.direction.x,\n        invdiry = 1 / this.direction.y,\n        invdirz = 1 / this.direction.z;\n    var origin = this.origin;\n\n    if (invdirx >= 0) {\n      tmin = (box.min.x - origin.x) * invdirx;\n      tmax = (box.max.x - origin.x) * invdirx;\n    } else {\n      tmin = (box.max.x - origin.x) * invdirx;\n      tmax = (box.min.x - origin.x) * invdirx;\n    }\n\n    if (invdiry >= 0) {\n      tymin = (box.min.y - origin.y) * invdiry;\n      tymax = (box.max.y - origin.y) * invdiry;\n    } else {\n      tymin = (box.max.y - origin.y) * invdiry;\n      tymax = (box.min.y - origin.y) * invdiry;\n    }\n\n    if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n    // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n    if (tymin > tmin || tmin !== tmin) tmin = tymin;\n    if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n    if (invdirz >= 0) {\n      tzmin = (box.min.z - origin.z) * invdirz;\n      tzmax = (box.max.z - origin.z) * invdirz;\n    } else {\n      tzmin = (box.max.z - origin.z) * invdirz;\n      tzmax = (box.min.z - origin.z) * invdirz;\n    }\n\n    if (tmin > tzmax || tzmin > tmax) return null;\n    if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n    if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n    if (tmax < 0) return null;\n    return this.at(tmin >= 0 ? tmin : tmax, optionalTarget);\n  },\n  intersectsBox: function () {\n    var v = new THREE.Vector3();\n    return function (box) {\n      return this.intersectBox(box, v) !== null;\n    };\n  }(),\n  intersectTriangle: function () {\n    // Compute the offset origin, edges, and normal.\n    var diff = new THREE.Vector3();\n    var edge1 = new THREE.Vector3();\n    var edge2 = new THREE.Vector3();\n    var normal = new THREE.Vector3();\n    return function (a, b, c, backfaceCulling, optionalTarget) {\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n      edge1.subVectors(b, a);\n      edge2.subVectors(c, a);\n      normal.crossVectors(edge1, edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n      //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n      //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n      //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n      var DdN = this.direction.dot(normal);\n      var sign;\n\n      if (DdN > 0) {\n        if (backfaceCulling) return null;\n        sign = 1;\n      } else if (DdN < 0) {\n        sign = -1;\n        DdN = -DdN;\n      } else {\n        return null;\n      }\n\n      diff.subVectors(this.origin, a);\n      var DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2)); // b1 < 0, no intersection\n\n      if (DdQxE2 < 0) {\n        return null;\n      }\n\n      var DdE1xQ = sign * this.direction.dot(edge1.cross(diff)); // b2 < 0, no intersection\n\n      if (DdE1xQ < 0) {\n        return null;\n      } // b1+b2 > 1, no intersection\n\n\n      if (DdQxE2 + DdE1xQ > DdN) {\n        return null;\n      } // Line intersects triangle, check if ray does.\n\n\n      var QdN = -sign * diff.dot(normal); // t < 0, no intersection\n\n      if (QdN < 0) {\n        return null;\n      } // Ray intersects triangle.\n\n\n      return this.at(QdN / DdN, optionalTarget);\n    };\n  }(),\n  applyMatrix4: function (matrix4) {\n    this.direction.add(this.origin).applyMatrix4(matrix4);\n    this.origin.applyMatrix4(matrix4);\n    this.direction.sub(this.origin);\n    this.direction.normalize();\n    return this;\n  },\n  equals: function (ray) {\n    return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n  }\n}; // File:src/math/Sphere.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Sphere = function (center, radius) {\n  this.center = center !== undefined ? center : new THREE.Vector3();\n  this.radius = radius !== undefined ? radius : 0;\n};\n\nTHREE.Sphere.prototype = {\n  constructor: THREE.Sphere,\n  set: function (center, radius) {\n    this.center.copy(center);\n    this.radius = radius;\n    return this;\n  },\n  setFromPoints: function () {\n    var box = new THREE.Box3();\n    return function (points, optionalCenter) {\n      var center = this.center;\n\n      if (optionalCenter !== undefined) {\n        center.copy(optionalCenter);\n      } else {\n        box.setFromPoints(points).center(center);\n      }\n\n      var maxRadiusSq = 0;\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n      }\n\n      this.radius = Math.sqrt(maxRadiusSq);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (sphere) {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n    return this;\n  },\n  empty: function () {\n    return this.radius <= 0;\n  },\n  containsPoint: function (point) {\n    return point.distanceToSquared(this.center) <= this.radius * this.radius;\n  },\n  distanceToPoint: function (point) {\n    return point.distanceTo(this.center) - this.radius;\n  },\n  intersectsSphere: function (sphere) {\n    var radiusSum = this.radius + sphere.radius;\n    return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n  },\n  intersectsBox: function (box) {\n    return box.intersectsSphere(this);\n  },\n  intersectsPlane: function (plane) {\n    // We use the following equation to compute the signed distance from\n    // the center of the sphere to the plane.\n    //\n    // distance = q * n - d\n    //\n    // If this distance is greater than the radius of the sphere,\n    // then there is no intersection.\n    return Math.abs(this.center.dot(plane.normal) - plane.constant) <= this.radius;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var deltaLengthSq = this.center.distanceToSquared(point);\n    var result = optionalTarget || new THREE.Vector3();\n    result.copy(point);\n\n    if (deltaLengthSq > this.radius * this.radius) {\n      result.sub(this.center).normalize();\n      result.multiplyScalar(this.radius).add(this.center);\n    }\n\n    return result;\n  },\n  getBoundingBox: function (optionalTarget) {\n    var box = optionalTarget || new THREE.Box3();\n    box.set(this.center, this.center);\n    box.expandByScalar(this.radius);\n    return box;\n  },\n  applyMatrix4: function (matrix) {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n    return this;\n  },\n  translate: function (offset) {\n    this.center.add(offset);\n    return this;\n  },\n  equals: function (sphere) {\n    return sphere.center.equals(this.center) && sphere.radius === this.radius;\n  }\n}; // File:src/math/Frustum.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Frustum = function (p0, p1, p2, p3, p4, p5) {\n  this.planes = [p0 !== undefined ? p0 : new THREE.Plane(), p1 !== undefined ? p1 : new THREE.Plane(), p2 !== undefined ? p2 : new THREE.Plane(), p3 !== undefined ? p3 : new THREE.Plane(), p4 !== undefined ? p4 : new THREE.Plane(), p5 !== undefined ? p5 : new THREE.Plane()];\n};\n\nTHREE.Frustum.prototype = {\n  constructor: THREE.Frustum,\n  set: function (p0, p1, p2, p3, p4, p5) {\n    var planes = this.planes;\n    planes[0].copy(p0);\n    planes[1].copy(p1);\n    planes[2].copy(p2);\n    planes[3].copy(p3);\n    planes[4].copy(p4);\n    planes[5].copy(p5);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (frustum) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      planes[i].copy(frustum.planes[i]);\n    }\n\n    return this;\n  },\n  setFromMatrix: function (m) {\n    var planes = this.planes;\n    var me = m.elements;\n    var me0 = me[0],\n        me1 = me[1],\n        me2 = me[2],\n        me3 = me[3];\n    var me4 = me[4],\n        me5 = me[5],\n        me6 = me[6],\n        me7 = me[7];\n    var me8 = me[8],\n        me9 = me[9],\n        me10 = me[10],\n        me11 = me[11];\n    var me12 = me[12],\n        me13 = me[13],\n        me14 = me[14],\n        me15 = me[15];\n    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n    planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n    planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n    return this;\n  },\n  intersectsObject: function () {\n    var sphere = new THREE.Sphere();\n    return function (object) {\n      var geometry = object.geometry;\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n      return this.intersectsSphere(sphere);\n    };\n  }(),\n  intersectsSprite: function () {\n    var sphere = new THREE.Sphere();\n    return function (sprite) {\n      sphere.center.set(0, 0, 0);\n      sphere.radius = 0.7071067811865476;\n      sphere.applyMatrix4(sprite.matrixWorld);\n      return this.intersectsSphere(sphere);\n    };\n  }(),\n  intersectsSphere: function (sphere) {\n    var planes = this.planes;\n    var center = sphere.center;\n    var negRadius = -sphere.radius;\n\n    for (var i = 0; i < 6; i++) {\n      var distance = planes[i].distanceToPoint(center);\n\n      if (distance < negRadius) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  intersectsBox: function () {\n    var p1 = new THREE.Vector3(),\n        p2 = new THREE.Vector3();\n    return function (box) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        var plane = planes[i];\n        p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n        p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n        p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n        p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n        p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n        p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n        var d1 = plane.distanceToPoint(p1);\n        var d2 = plane.distanceToPoint(p2); // if both outside plane, no intersection\n\n        if (d1 < 0 && d2 < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }(),\n  containsPoint: function (point) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      if (planes[i].distanceToPoint(point) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}; // File:src/math/Plane.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Plane = function (normal, constant) {\n  this.normal = normal !== undefined ? normal : new THREE.Vector3(1, 0, 0);\n  this.constant = constant !== undefined ? constant : 0;\n};\n\nTHREE.Plane.prototype = {\n  constructor: THREE.Plane,\n  set: function (normal, constant) {\n    this.normal.copy(normal);\n    this.constant = constant;\n    return this;\n  },\n  setComponents: function (x, y, z, w) {\n    this.normal.set(x, y, z);\n    this.constant = w;\n    return this;\n  },\n  setFromNormalAndCoplanarPoint: function (normal, point) {\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal); // must be this.normal, not normal, as this.normal is normalized\n\n    return this;\n  },\n  setFromCoplanarPoints: function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    return function (a, b, c) {\n      var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (plane) {\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n    return this;\n  },\n  normalize: function () {\n    // Note: will lead to a divide by zero if the plane is invalid.\n    var inverseNormalLength = 1.0 / this.normal.length();\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n    return this;\n  },\n  negate: function () {\n    this.constant *= -1;\n    this.normal.negate();\n    return this;\n  },\n  distanceToPoint: function (point) {\n    return this.normal.dot(point) + this.constant;\n  },\n  distanceToSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  },\n  projectPoint: function (point, optionalTarget) {\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\n  },\n  orthoPoint: function (point, optionalTarget) {\n    var perpendicularMagnitude = this.distanceToPoint(point);\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n  },\n  intersectLine: function () {\n    var v1 = new THREE.Vector3();\n    return function (line, optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      var direction = line.delta(v1);\n      var denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n          return result.copy(line.start);\n        } // Unsure if this is the correct method to handle this case.\n\n\n        return undefined;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n        return undefined;\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n    };\n  }(),\n  intersectsLine: function (line) {\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n    var startSign = this.distanceToPoint(line.start);\n    var endSign = this.distanceToPoint(line.end);\n    return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n  },\n  intersectsBox: function (box) {\n    return box.intersectsPlane(this);\n  },\n  intersectsSphere: function (sphere) {\n    return sphere.intersectsPlane(this);\n  },\n  coplanarPoint: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n  },\n  applyMatrix4: function () {\n    var v1 = new THREE.Vector3();\n    var m1 = new THREE.Matrix3();\n    return function (matrix, optionalNormalMatrix) {\n      var referencePoint = this.coplanarPoint(v1).applyMatrix4(matrix); // transform normal based on theory here:\n      // http://www.songho.ca/opengl/gl_normaltransform.html\n\n      var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n      var normal = this.normal.applyMatrix3(normalMatrix).normalize(); // recalculate constant (like in setFromNormalAndCoplanarPoint)\n\n      this.constant = -referencePoint.dot(normal);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.constant = this.constant - offset.dot(this.normal);\n    return this;\n  },\n  equals: function (plane) {\n    return plane.normal.equals(this.normal) && plane.constant === this.constant;\n  }\n}; // File:src/math/Spherical.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n *\r\n * The poles (phi) are at the positive and negative y axis.\r\n * The equator starts at positive z.\r\n */\n\nTHREE.Spherical = function (radius, phi, theta) {\n  this.radius = radius !== undefined ? radius : 1.0;\n  this.phi = phi !== undefined ? phi : 0; // up / down towards top and bottom pole\n\n  this.theta = theta !== undefined ? theta : 0; // around the equator of the sphere\n\n  return this;\n};\n\nTHREE.Spherical.prototype = {\n  constructor: THREE.Spherical,\n  set: function (radius, phi, theta) {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (other) {\n    this.radius.copy(other.radius);\n    this.phi.copy(other.phi);\n    this.theta.copy(other.theta);\n    return this;\n  },\n  // restrict phi to be betwee EPS and PI-EPS\n  makeSafe: function () {\n    var EPS = 0.000001;\n    this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n    return this;\n  },\n  setFromVector3: function (vec3) {\n    this.radius = vec3.length();\n\n    if (this.radius === 0) {\n      this.theta = 0;\n      this.phi = 0;\n    } else {\n      this.theta = Math.atan2(vec3.x, vec3.z); // equator angle around y-up axis\n\n      this.phi = Math.acos(THREE.Math.clamp(vec3.y / this.radius, -1, 1)); // polar angle\n    }\n\n    return this;\n  }\n}; // File:src/math/Math.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Math = {\n  DEG2RAD: Math.PI / 180,\n  RAD2DEG: 180 / Math.PI,\n  generateUUID: function () {\n    // http://www.broofa.com/Tools/Math.uuid.htm\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n    var uuid = new Array(36);\n    var rnd = 0,\n        r;\n    return function () {\n      for (var i = 0; i < 36; i++) {\n        if (i === 8 || i === 13 || i === 18 || i === 23) {\n          uuid[i] = '-';\n        } else if (i === 14) {\n          uuid[i] = '4';\n        } else {\n          if (rnd <= 0x02) rnd = 0x2000000 + Math.random() * 0x1000000 | 0;\n          r = rnd & 0xf;\n          rnd = rnd >> 4;\n          uuid[i] = chars[i === 19 ? r & 0x3 | 0x8 : r];\n        }\n      }\n\n      return uuid.join('');\n    };\n  }(),\n  clamp: function (value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  },\n  // compute euclidian modulo of m % n\n  // https://en.wikipedia.org/wiki/Modulo_operation\n  euclideanModulo: function (n, m) {\n    return (n % m + m) % m;\n  },\n  // Linear mapping from range <a1, a2> to range <b1, b2>\n  mapLinear: function (x, a1, a2, b1, b2) {\n    return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n  },\n  // http://en.wikipedia.org/wiki/Smoothstep\n  smoothstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * (3 - 2 * x);\n  },\n  smootherstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * x * (x * (x * 6 - 15) + 10);\n  },\n  random16: function () {\n    console.warn('THREE.Math.random16() has been deprecated. Use Math.random() instead.');\n    return Math.random();\n  },\n  // Random integer from <low, high> interval\n  randInt: function (low, high) {\n    return low + Math.floor(Math.random() * (high - low + 1));\n  },\n  // Random float from <low, high> interval\n  randFloat: function (low, high) {\n    return low + Math.random() * (high - low);\n  },\n  // Random float from <-range/2, range/2> interval\n  randFloatSpread: function (range) {\n    return range * (0.5 - Math.random());\n  },\n  degToRad: function (degrees) {\n    return degrees * THREE.Math.DEG2RAD;\n  },\n  radToDeg: function (radians) {\n    return radians * THREE.Math.RAD2DEG;\n  },\n  isPowerOfTwo: function (value) {\n    return (value & value - 1) === 0 && value !== 0;\n  },\n  nearestPowerOfTwo: function (value) {\n    return Math.pow(2, Math.round(Math.log(value) / Math.LN2));\n  },\n  nextPowerOfTwo: function (value) {\n    value--;\n    value |= value >> 1;\n    value |= value >> 2;\n    value |= value >> 4;\n    value |= value >> 8;\n    value |= value >> 16;\n    value++;\n    return value;\n  }\n}; // File:src/math/Spline.js\n\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Spline = function (points) {\n  this.points = points;\n  var c = [],\n      v3 = {\n    x: 0,\n    y: 0,\n    z: 0\n  },\n      point,\n      intPoint,\n      weight,\n      w2,\n      w3,\n      pa,\n      pb,\n      pc,\n      pd;\n\n  this.initFromArray = function (a) {\n    this.points = [];\n\n    for (var i = 0; i < a.length; i++) {\n      this.points[i] = {\n        x: a[i][0],\n        y: a[i][1],\n        z: a[i][2]\n      };\n    }\n  };\n\n  this.getPoint = function (k) {\n    point = (this.points.length - 1) * k;\n    intPoint = Math.floor(point);\n    weight = point - intPoint;\n    c[0] = intPoint === 0 ? intPoint : intPoint - 1;\n    c[1] = intPoint;\n    c[2] = intPoint > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n    c[3] = intPoint > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n    pa = this.points[c[0]];\n    pb = this.points[c[1]];\n    pc = this.points[c[2]];\n    pd = this.points[c[3]];\n    w2 = weight * weight;\n    w3 = weight * w2;\n    v3.x = interpolate(pa.x, pb.x, pc.x, pd.x, weight, w2, w3);\n    v3.y = interpolate(pa.y, pb.y, pc.y, pd.y, weight, w2, w3);\n    v3.z = interpolate(pa.z, pb.z, pc.z, pd.z, weight, w2, w3);\n    return v3;\n  };\n\n  this.getControlPointsArray = function () {\n    var i,\n        p,\n        l = this.points.length,\n        coords = [];\n\n    for (i = 0; i < l; i++) {\n      p = this.points[i];\n      coords[i] = [p.x, p.y, p.z];\n    }\n\n    return coords;\n  }; // approximate length by summing linear segments\n\n\n  this.getLength = function (nSubDivisions) {\n    var i,\n        index,\n        nSamples,\n        position,\n        point = 0,\n        intPoint = 0,\n        oldIntPoint = 0,\n        oldPosition = new THREE.Vector3(),\n        tmpVec = new THREE.Vector3(),\n        chunkLengths = [],\n        totalLength = 0; // first point has 0 length\n\n    chunkLengths[0] = 0;\n    if (!nSubDivisions) nSubDivisions = 100;\n    nSamples = this.points.length * nSubDivisions;\n    oldPosition.copy(this.points[0]);\n\n    for (i = 1; i < nSamples; i++) {\n      index = i / nSamples;\n      position = this.getPoint(index);\n      tmpVec.copy(position);\n      totalLength += tmpVec.distanceTo(oldPosition);\n      oldPosition.copy(position);\n      point = (this.points.length - 1) * index;\n      intPoint = Math.floor(point);\n\n      if (intPoint !== oldIntPoint) {\n        chunkLengths[intPoint] = totalLength;\n        oldIntPoint = intPoint;\n      }\n    } // last point ends with total length\n\n\n    chunkLengths[chunkLengths.length] = totalLength;\n    return {\n      chunks: chunkLengths,\n      total: totalLength\n    };\n  };\n\n  this.reparametrizeByArcLength = function (samplingCoef) {\n    var i,\n        j,\n        index,\n        indexCurrent,\n        indexNext,\n        realDistance,\n        sampling,\n        position,\n        newpoints = [],\n        tmpVec = new THREE.Vector3(),\n        sl = this.getLength();\n    newpoints.push(tmpVec.copy(this.points[0]).clone());\n\n    for (i = 1; i < this.points.length; i++) {\n      //tmpVec.copy( this.points[ i - 1 ] );\n      //linearDistance = tmpVec.distanceTo( this.points[ i ] );\n      realDistance = sl.chunks[i] - sl.chunks[i - 1];\n      sampling = Math.ceil(samplingCoef * realDistance / sl.total);\n      indexCurrent = (i - 1) / (this.points.length - 1);\n      indexNext = i / (this.points.length - 1);\n\n      for (j = 1; j < sampling - 1; j++) {\n        index = indexCurrent + j * (1 / sampling) * (indexNext - indexCurrent);\n        position = this.getPoint(index);\n        newpoints.push(tmpVec.copy(position).clone());\n      }\n\n      newpoints.push(tmpVec.copy(this.points[i]).clone());\n    }\n\n    this.points = newpoints;\n  }; // Catmull-Rom\n\n\n  function interpolate(p0, p1, p2, p3, t, t2, t3) {\n    var v0 = (p2 - p0) * 0.5,\n        v1 = (p3 - p1) * 0.5;\n    return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n  }\n}; // File:src/math/Triangle.js\n\n/**\r\n * @author bhouston / http://clara.io\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.Triangle = function (a, b, c) {\n  this.a = a !== undefined ? a : new THREE.Vector3();\n  this.b = b !== undefined ? b : new THREE.Vector3();\n  this.c = c !== undefined ? c : new THREE.Vector3();\n};\n\nTHREE.Triangle.normal = function () {\n  var v0 = new THREE.Vector3();\n  return function (a, b, c, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors(c, b);\n    v0.subVectors(a, b);\n    result.cross(v0);\n    var resultLengthSq = result.lengthSq();\n\n    if (resultLengthSq > 0) {\n      return result.multiplyScalar(1 / Math.sqrt(resultLengthSq));\n    }\n\n    return result.set(0, 0, 0);\n  };\n}(); // static/instance method to calculate barycentric coordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\nTHREE.Triangle.barycoordFromPoint = function () {\n  var v0 = new THREE.Vector3();\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  return function (point, a, b, c, optionalTarget) {\n    v0.subVectors(c, a);\n    v1.subVectors(b, a);\n    v2.subVectors(point, a);\n    var dot00 = v0.dot(v0);\n    var dot01 = v0.dot(v1);\n    var dot02 = v0.dot(v2);\n    var dot11 = v1.dot(v1);\n    var dot12 = v1.dot(v2);\n    var denom = dot00 * dot11 - dot01 * dot01;\n    var result = optionalTarget || new THREE.Vector3(); // collinear or singular triangle\n\n    if (denom === 0) {\n      // arbitrary location outside of triangle?\n      // not sure if this is the best idea, maybe should be returning undefined\n      return result.set(-2, -1, -1);\n    }\n\n    var invDenom = 1 / denom;\n    var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n    return result.set(1 - u - v, v, u);\n  };\n}();\n\nTHREE.Triangle.containsPoint = function () {\n  var v1 = new THREE.Vector3();\n  return function (point, a, b, c) {\n    var result = THREE.Triangle.barycoordFromPoint(point, a, b, c, v1);\n    return result.x >= 0 && result.y >= 0 && result.x + result.y <= 1;\n  };\n}();\n\nTHREE.Triangle.prototype = {\n  constructor: THREE.Triangle,\n  set: function (a, b, c) {\n    this.a.copy(a);\n    this.b.copy(b);\n    this.c.copy(c);\n    return this;\n  },\n  setFromPointsAndIndices: function (points, i0, i1, i2) {\n    this.a.copy(points[i0]);\n    this.b.copy(points[i1]);\n    this.c.copy(points[i2]);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (triangle) {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n    return this;\n  },\n  area: function () {\n    var v0 = new THREE.Vector3();\n    var v1 = new THREE.Vector3();\n    return function () {\n      v0.subVectors(this.c, this.b);\n      v1.subVectors(this.a, this.b);\n      return v0.cross(v1).length() * 0.5;\n    };\n  }(),\n  midpoint: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n  },\n  normal: function (optionalTarget) {\n    return THREE.Triangle.normal(this.a, this.b, this.c, optionalTarget);\n  },\n  plane: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Plane();\n    return result.setFromCoplanarPoints(this.a, this.b, this.c);\n  },\n  barycoordFromPoint: function (point, optionalTarget) {\n    return THREE.Triangle.barycoordFromPoint(point, this.a, this.b, this.c, optionalTarget);\n  },\n  containsPoint: function (point) {\n    return THREE.Triangle.containsPoint(point, this.a, this.b, this.c);\n  },\n  closestPointToPoint: function () {\n    var plane, edgeList, projectedPoint, closestPoint;\n    return function closestPointToPoint(point, optionalTarget) {\n      if (plane === undefined) {\n        plane = new THREE.Plane();\n        edgeList = [new THREE.Line3(), new THREE.Line3(), new THREE.Line3()];\n        projectedPoint = new THREE.Vector3();\n        closestPoint = new THREE.Vector3();\n      }\n\n      var result = optionalTarget || new THREE.Vector3();\n      var minDistance = Infinity; // project the point onto the plane of the triangle\n\n      plane.setFromCoplanarPoints(this.a, this.b, this.c);\n      plane.projectPoint(point, projectedPoint); // check if the projection lies within the triangle\n\n      if (this.containsPoint(projectedPoint) === true) {\n        // if so, this is the closest point\n        result.copy(projectedPoint);\n      } else {\n        // if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n        edgeList[0].set(this.a, this.b);\n        edgeList[1].set(this.b, this.c);\n        edgeList[2].set(this.c, this.a);\n\n        for (var i = 0; i < edgeList.length; i++) {\n          edgeList[i].closestPointToPoint(projectedPoint, true, closestPoint);\n          var distance = projectedPoint.distanceToSquared(closestPoint);\n\n          if (distance < minDistance) {\n            minDistance = distance;\n            result.copy(closestPoint);\n          }\n        }\n      }\n\n      return result;\n    };\n  }(),\n  equals: function (triangle) {\n    return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n  }\n}; // File:src/math/Interpolant.js\n\n/**\r\n * Abstract base class of interpolants over parametric samples.\r\n *\r\n * The parameter domain is one dimensional, typically the time or a path\r\n * along a curve defined by the data.\r\n *\r\n * The sample values can have any dimensionality and derived classes may\r\n * apply special interpretations to the data.\r\n *\r\n * This class provides the interval seek in a Template Method, deferring\r\n * the actual interpolation to derived classes.\r\n *\r\n * Time complexity is O(1) for linear access crossing at most two points\r\n * and O(log N) for random access, where N is the number of positions.\r\n *\r\n * References:\r\n *\r\n * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n *\r\n * @author tschw\r\n */\n\nTHREE.Interpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  this.parameterPositions = parameterPositions;\n  this._cachedIndex = 0;\n  this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n  this.sampleValues = sampleValues;\n  this.valueSize = sampleSize;\n};\n\nTHREE.Interpolant.prototype = {\n  constructor: THREE.Interpolant,\n  evaluate: function (t) {\n    var pp = this.parameterPositions,\n        i1 = this._cachedIndex,\n        t1 = pp[i1],\n        t0 = pp[i1 - 1];\n\n    validate_interval: {\n      seek: {\n        var right;\n\n        linear_scan: {\n          //- See http://jsperf.com/comparison-to-undefined/3\n          //- slower code:\n          //-\n          //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n          forward_scan: if (!(t < t1)) {\n            for (var giveUpAt = i1 + 2;;) {\n              if (t1 === undefined) {\n                if (t < t0) break forward_scan; // after end\n\n                i1 = pp.length;\n                this._cachedIndex = i1;\n                return this.afterEnd_(i1 - 1, t, t0);\n              }\n\n              if (i1 === giveUpAt) break; // this loop\n\n              t0 = t1;\n              t1 = pp[++i1];\n\n              if (t < t1) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            } // prepare binary search on the right side of the index\n\n\n            right = pp.length;\n            break linear_scan;\n          } //- slower code:\n          //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n          if (!(t >= t0)) {\n            // looping?\n            var t1global = pp[1];\n\n            if (t < t1global) {\n              i1 = 2; // + 1, using the scan for the details\n\n              t0 = t1global;\n            } // linear reverse scan\n\n\n            for (var giveUpAt = i1 - 2;;) {\n              if (t0 === undefined) {\n                // before start\n                this._cachedIndex = 0;\n                return this.beforeStart_(0, t, t1);\n              }\n\n              if (i1 === giveUpAt) break; // this loop\n\n              t1 = t0;\n              t0 = pp[--i1 - 1];\n\n              if (t >= t0) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            } // prepare binary search on the left side of the index\n\n\n            right = i1;\n            i1 = 0;\n            break linear_scan;\n          } // the interval is valid\n\n\n          break validate_interval;\n        } // linear scan\n        // binary search\n\n\n        while (i1 < right) {\n          var mid = i1 + right >>> 1;\n\n          if (t < pp[mid]) {\n            right = mid;\n          } else {\n            i1 = mid + 1;\n          }\n        }\n\n        t1 = pp[i1];\n        t0 = pp[i1 - 1]; // check boundary cases, again\n\n        if (t0 === undefined) {\n          this._cachedIndex = 0;\n          return this.beforeStart_(0, t, t1);\n        }\n\n        if (t1 === undefined) {\n          i1 = pp.length;\n          this._cachedIndex = i1;\n          return this.afterEnd_(i1 - 1, t0, t);\n        }\n      } // seek\n\n\n      this._cachedIndex = i1;\n      this.intervalChanged_(i1, t0, t1);\n    } // validate_interval\n\n\n    return this.interpolate_(i1, t0, t, t1);\n  },\n  settings: null,\n  // optional, subclass-specific settings structure\n  // Note: The indirection allows central control of many interpolants.\n  // --- Protected interface\n  DefaultSettings_: {},\n  getSettings_: function () {\n    return this.settings || this.DefaultSettings_;\n  },\n  copySampleValue_: function (index) {\n    // copies a sample value to the result buffer\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        offset = index * stride;\n\n    for (var i = 0; i !== stride; ++i) {\n      result[i] = values[offset + i];\n    }\n\n    return result;\n  },\n  // Template methods for derived classes:\n  interpolate_: function (i1, t0, t, t1) {\n    throw new Error(\"call to abstract method\"); // implementations shall return this.resultBuffer\n  },\n  intervalChanged_: function (i1, t0, t1) {// empty\n  }\n};\nObject.assign(THREE.Interpolant.prototype, {\n  beforeStart_: //( 0, t, t0 ), returns this.resultBuffer\n  THREE.Interpolant.prototype.copySampleValue_,\n  afterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\n  THREE.Interpolant.prototype.copySampleValue_\n}); // File:src/math/interpolants/CubicInterpolant.js\n\n/**\r\n * Fast and simple cubic spline interpolant.\r\n *\r\n * It was derived from a Hermitian construction setting the first derivative\r\n * at each sample position to the linear slope between neighboring positions\r\n * over their parameter interval.\r\n *\r\n * @author tschw\r\n */\n\nTHREE.CubicInterpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  this._weightPrev = -0;\n  this._offsetPrev = -0;\n  this._weightNext = -0;\n  this._offsetNext = -0;\n};\n\nTHREE.CubicInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {\n  constructor: THREE.CubicInterpolant,\n  DefaultSettings_: {\n    endingStart: THREE.ZeroCurvatureEnding,\n    endingEnd: THREE.ZeroCurvatureEnding\n  },\n  intervalChanged_: function (i1, t0, t1) {\n    var pp = this.parameterPositions,\n        iPrev = i1 - 2,\n        iNext = i1 + 1,\n        tPrev = pp[iPrev],\n        tNext = pp[iNext];\n\n    if (tPrev === undefined) {\n      switch (this.getSettings_().endingStart) {\n        case THREE.ZeroSlopeEnding:\n          // f'(t0) = 0\n          iPrev = i1;\n          tPrev = 2 * t0 - t1;\n          break;\n\n        case THREE.WrapAroundEnding:\n          // use the other end of the curve\n          iPrev = pp.length - 2;\n          tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n          break;\n\n        default:\n          // ZeroCurvatureEnding\n          // f''(t0) = 0 a.k.a. Natural Spline\n          iPrev = i1;\n          tPrev = t1;\n      }\n    }\n\n    if (tNext === undefined) {\n      switch (this.getSettings_().endingEnd) {\n        case THREE.ZeroSlopeEnding:\n          // f'(tN) = 0\n          iNext = i1;\n          tNext = 2 * t1 - t0;\n          break;\n\n        case THREE.WrapAroundEnding:\n          // use the other end of the curve\n          iNext = 1;\n          tNext = t1 + pp[1] - pp[0];\n          break;\n\n        default:\n          // ZeroCurvatureEnding\n          // f''(tN) = 0, a.k.a. Natural Spline\n          iNext = i1 - 1;\n          tNext = t0;\n      }\n    }\n\n    var halfDt = (t1 - t0) * 0.5,\n        stride = this.valueSize;\n    this._weightPrev = halfDt / (t0 - tPrev);\n    this._weightNext = halfDt / (tNext - t1);\n    this._offsetPrev = iPrev * stride;\n    this._offsetNext = iNext * stride;\n  },\n  interpolate_: function (i1, t0, t, t1) {\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        o1 = i1 * stride,\n        o0 = o1 - stride,\n        oP = this._offsetPrev,\n        oN = this._offsetNext,\n        wP = this._weightPrev,\n        wN = this._weightNext,\n        p = (t - t0) / (t1 - t0),\n        pp = p * p,\n        ppp = pp * p; // evaluate polynomials\n\n    var sP = -wP * ppp + 2 * wP * pp - wP * p;\n    var s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n    var s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n    var sN = wN * ppp - wN * pp; // combine data linearly\n\n    for (var i = 0; i !== stride; ++i) {\n      result[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n    }\n\n    return result;\n  }\n}); // File:src/math/interpolants/DiscreteInterpolant.js\n\n/**\r\n *\r\n * Interpolant that evaluates to the sample value at the position preceeding\r\n * the parameter.\r\n *\r\n * @author tschw\r\n */\n\nTHREE.DiscreteInterpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n};\n\nTHREE.DiscreteInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {\n  constructor: THREE.DiscreteInterpolant,\n  interpolate_: function (i1, t0, t, t1) {\n    return this.copySampleValue_(i1 - 1);\n  }\n}); // File:src/math/interpolants/LinearInterpolant.js\n\n/**\r\n * @author tschw\r\n */\n\nTHREE.LinearInterpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n};\n\nTHREE.LinearInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {\n  constructor: THREE.LinearInterpolant,\n  interpolate_: function (i1, t0, t, t1) {\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        offset1 = i1 * stride,\n        offset0 = offset1 - stride,\n        weight1 = (t - t0) / (t1 - t0),\n        weight0 = 1 - weight1;\n\n    for (var i = 0; i !== stride; ++i) {\n      result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n    }\n\n    return result;\n  }\n}); // File:src/math/interpolants/QuaternionLinearInterpolant.js\n\n/**\r\n * Spherical linear unit quaternion interpolant.\r\n *\r\n * @author tschw\r\n */\n\nTHREE.QuaternionLinearInterpolant = function (parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n};\n\nTHREE.QuaternionLinearInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {\n  constructor: THREE.QuaternionLinearInterpolant,\n  interpolate_: function (i1, t0, t, t1) {\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        offset = i1 * stride,\n        alpha = (t - t0) / (t1 - t0);\n\n    for (var end = offset + stride; offset !== end; offset += 4) {\n      THREE.Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n    }\n\n    return result;\n  }\n}); // File:src/core/Clock.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Clock = function (autoStart) {\n  this.autoStart = autoStart !== undefined ? autoStart : true;\n  this.startTime = 0;\n  this.oldTime = 0;\n  this.elapsedTime = 0;\n  this.running = false;\n};\n\nTHREE.Clock.prototype = {\n  constructor: THREE.Clock,\n  start: function () {\n    this.startTime = (performance || Date).now();\n    this.oldTime = this.startTime;\n    this.running = true;\n  },\n  stop: function () {\n    this.getElapsedTime();\n    this.running = false;\n  },\n  getElapsedTime: function () {\n    this.getDelta();\n    return this.elapsedTime;\n  },\n  getDelta: function () {\n    var diff = 0;\n\n    if (this.autoStart && !this.running) {\n      this.start();\n    }\n\n    if (this.running) {\n      var newTime = (performance || Date).now();\n      diff = (newTime - this.oldTime) / 1000;\n      this.oldTime = newTime;\n      this.elapsedTime += diff;\n    }\n\n    return diff;\n  }\n}; // File:src/core/EventDispatcher.js\n\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\n\nTHREE.EventDispatcher = function () {};\n\nObject.assign(THREE.EventDispatcher.prototype, {\n  addEventListener: function (type, listener) {\n    if (this._listeners === undefined) this._listeners = {};\n    var listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  },\n  hasEventListener: function (type, listener) {\n    if (this._listeners === undefined) return false;\n    var listeners = this._listeners;\n\n    if (listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1) {\n      return true;\n    }\n\n    return false;\n  },\n  removeEventListener: function (type, listener) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[type];\n\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  },\n  dispatchEvent: function (event) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n      var array = [],\n          i = 0;\n      var length = listenerArray.length;\n\n      for (i = 0; i < length; i++) {\n        array[i] = listenerArray[i];\n      }\n\n      for (i = 0; i < length; i++) {\n        array[i].call(this, event);\n      }\n    }\n  }\n}); // File:src/core/Layers.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Layers = function () {\n  this.mask = 1;\n};\n\nTHREE.Layers.prototype = {\n  constructor: THREE.Layers,\n  set: function (channel) {\n    this.mask = 1 << channel;\n  },\n  enable: function (channel) {\n    this.mask |= 1 << channel;\n  },\n  toggle: function (channel) {\n    this.mask ^= 1 << channel;\n  },\n  disable: function (channel) {\n    this.mask &= ~(1 << channel);\n  },\n  test: function (layers) {\n    return (this.mask & layers.mask) !== 0;\n  }\n}; // File:src/core/Raycaster.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://clara.io/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\n\n(function (THREE) {\n  THREE.Raycaster = function (origin, direction, near, far) {\n    this.ray = new THREE.Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near || 0;\n    this.far = far || Infinity;\n    this.params = {\n      Mesh: {},\n      Line: {},\n      LOD: {},\n      Points: {\n        threshold: 1\n      },\n      Sprite: {}\n    };\n    Object.defineProperties(this.params, {\n      PointCloud: {\n        get: function () {\n          console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n          return this.Points;\n        }\n      }\n    });\n  };\n\n  function ascSort(a, b) {\n    return a.distance - b.distance;\n  }\n\n  function intersectObject(object, raycaster, intersects, recursive) {\n    if (object.visible === false) return;\n    object.raycast(raycaster, intersects);\n\n    if (recursive === true) {\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        intersectObject(children[i], raycaster, intersects, true);\n      }\n    }\n  } //\n\n\n  THREE.Raycaster.prototype = {\n    constructor: THREE.Raycaster,\n    linePrecision: 1,\n    set: function (origin, direction) {\n      // direction is assumed to be normalized (for accurate distance calculations)\n      this.ray.set(origin, direction);\n    },\n    setFromCamera: function (coords, camera) {\n      if (camera instanceof THREE.PerspectiveCamera) {\n        this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n        this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n      } else if (camera instanceof THREE.OrthographicCamera) {\n        this.ray.origin.set(coords.x, coords.y, -1).unproject(camera);\n        this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n      } else {\n        console.error('THREE.Raycaster: Unsupported camera type.');\n      }\n    },\n    intersectObject: function (object, recursive) {\n      var intersects = [];\n      intersectObject(object, this, intersects, recursive);\n      intersects.sort(ascSort);\n      return intersects;\n    },\n    intersectObjects: function (objects, recursive) {\n      var intersects = [];\n\n      if (Array.isArray(objects) === false) {\n        console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n        return intersects;\n      }\n\n      for (var i = 0, l = objects.length; i < l; i++) {\n        intersectObject(objects[i], this, intersects, recursive);\n      }\n\n      intersects.sort(ascSort);\n      return intersects;\n    }\n  };\n})(THREE); // File:src/core/Object3D.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\n\n\nTHREE.Object3D = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.Object3DIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Object3D';\n  this.parent = null;\n  this.children = [];\n  this.up = THREE.Object3D.DefaultUp.clone();\n  var position = new THREE.Vector3();\n  var rotation = new THREE.Euler();\n  var quaternion = new THREE.Quaternion();\n  var scale = new THREE.Vector3(1, 1, 1);\n\n  function onRotationChange() {\n    quaternion.setFromEuler(rotation, false);\n  }\n\n  function onQuaternionChange() {\n    rotation.setFromQuaternion(quaternion, undefined, false);\n  }\n\n  rotation.onChange(onRotationChange);\n  quaternion.onChange(onQuaternionChange);\n  Object.defineProperties(this, {\n    position: {\n      enumerable: true,\n      value: position\n    },\n    rotation: {\n      enumerable: true,\n      value: rotation\n    },\n    quaternion: {\n      enumerable: true,\n      value: quaternion\n    },\n    scale: {\n      enumerable: true,\n      value: scale\n    },\n    modelViewMatrix: {\n      value: new THREE.Matrix4()\n    },\n    normalMatrix: {\n      value: new THREE.Matrix3()\n    }\n  });\n  this.matrix = new THREE.Matrix4();\n  this.matrixWorld = new THREE.Matrix4();\n  this.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\n  this.matrixWorldNeedsUpdate = false;\n  this.layers = new THREE.Layers();\n  this.visible = true;\n  this.castShadow = false;\n  this.receiveShadow = false;\n  this.frustumCulled = true;\n  this.renderOrder = 0;\n  this.userData = {};\n};\n\nTHREE.Object3D.DefaultUp = new THREE.Vector3(0, 1, 0);\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\nObject.assign(THREE.Object3D.prototype, THREE.EventDispatcher.prototype, {\n  applyMatrix: function (matrix) {\n    this.matrix.multiplyMatrices(matrix, this.matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  },\n  setRotationFromAxisAngle: function (axis, angle) {\n    // assumes axis is normalized\n    this.quaternion.setFromAxisAngle(axis, angle);\n  },\n  setRotationFromEuler: function (euler) {\n    this.quaternion.setFromEuler(euler, true);\n  },\n  setRotationFromMatrix: function (m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    this.quaternion.setFromRotationMatrix(m);\n  },\n  setRotationFromQuaternion: function (q) {\n    // assumes q is normalized\n    this.quaternion.copy(q);\n  },\n  rotateOnAxis: function () {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n    var q1 = new THREE.Quaternion();\n    return function (axis, angle) {\n      q1.setFromAxisAngle(axis, angle);\n      this.quaternion.multiply(q1);\n      return this;\n    };\n  }(),\n  rotateX: function () {\n    var v1 = new THREE.Vector3(1, 0, 0);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateY: function () {\n    var v1 = new THREE.Vector3(0, 1, 0);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateZ: function () {\n    var v1 = new THREE.Vector3(0, 0, 1);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  translateOnAxis: function () {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n    var v1 = new THREE.Vector3();\n    return function (axis, distance) {\n      v1.copy(axis).applyQuaternion(this.quaternion);\n      this.position.add(v1.multiplyScalar(distance));\n      return this;\n    };\n  }(),\n  translateX: function () {\n    var v1 = new THREE.Vector3(1, 0, 0);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateY: function () {\n    var v1 = new THREE.Vector3(0, 1, 0);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateZ: function () {\n    var v1 = new THREE.Vector3(0, 0, 1);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  localToWorld: function (vector) {\n    return vector.applyMatrix4(this.matrixWorld);\n  },\n  worldToLocal: function () {\n    var m1 = new THREE.Matrix4();\n    return function (vector) {\n      return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n    };\n  }(),\n  lookAt: function () {\n    // This routine does not support objects with rotated and/or translated parent(s)\n    var m1 = new THREE.Matrix4();\n    return function (vector) {\n      m1.lookAt(vector, this.position, this.up);\n      this.quaternion.setFromRotationMatrix(m1);\n    };\n  }(),\n  add: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    if (object === this) {\n      console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\n      return this;\n    }\n\n    if (object instanceof THREE.Object3D) {\n      if (object.parent !== null) {\n        object.parent.remove(object);\n      }\n\n      object.parent = this;\n      object.dispatchEvent({\n        type: 'added'\n      });\n      this.children.push(object);\n    } else {\n      console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object);\n    }\n\n    return this;\n  },\n  remove: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n    }\n\n    var index = this.children.indexOf(object);\n\n    if (index !== -1) {\n      object.parent = null;\n      object.dispatchEvent({\n        type: 'removed'\n      });\n      this.children.splice(index, 1);\n    }\n  },\n  getObjectById: function (id) {\n    return this.getObjectByProperty('id', id);\n  },\n  getObjectByName: function (name) {\n    return this.getObjectByProperty('name', name);\n  },\n  getObjectByProperty: function (name, value) {\n    if (this[name] === value) return this;\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var child = this.children[i];\n      var object = child.getObjectByProperty(name, value);\n\n      if (object !== undefined) {\n        return object;\n      }\n    }\n\n    return undefined;\n  },\n  getWorldPosition: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    this.updateMatrixWorld(true);\n    return result.setFromMatrixPosition(this.matrixWorld);\n  },\n  getWorldQuaternion: function () {\n    var position = new THREE.Vector3();\n    var scale = new THREE.Vector3();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Quaternion();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, result, scale);\n      return result;\n    };\n  }(),\n  getWorldRotation: function () {\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Euler();\n      this.getWorldQuaternion(quaternion);\n      return result.setFromQuaternion(quaternion, this.rotation.order, false);\n    };\n  }(),\n  getWorldScale: function () {\n    var position = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, quaternion, result);\n      return result;\n    };\n  }(),\n  getWorldDirection: function () {\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.getWorldQuaternion(quaternion);\n      return result.set(0, 0, 1).applyQuaternion(quaternion);\n    };\n  }(),\n  raycast: function () {},\n  traverse: function (callback) {\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverse(callback);\n    }\n  },\n  traverseVisible: function (callback) {\n    if (this.visible === false) return;\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverseVisible(callback);\n    }\n  },\n  traverseAncestors: function (callback) {\n    var parent = this.parent;\n\n    if (parent !== null) {\n      callback(parent);\n      parent.traverseAncestors(callback);\n    }\n  },\n  updateMatrix: function () {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  },\n  updateMatrixWorld: function (force) {\n    if (this.matrixAutoUpdate === true) this.updateMatrix();\n\n    if (this.matrixWorldNeedsUpdate === true || force === true) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    } // update children\n\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      this.children[i].updateMatrixWorld(force);\n    }\n  },\n  toJSON: function (meta) {\n    // meta is '' when called from JSON.stringify\n    var isRootObject = meta === undefined || meta === '';\n    var output = {}; // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {}\n      };\n      output.metadata = {\n        version: 4.4,\n        type: 'Object',\n        generator: 'Object3D.toJSON'\n      };\n    } // standard Object3D serialization\n\n\n    var object = {};\n    object.uuid = this.uuid;\n    object.type = this.type;\n    if (this.name !== '') object.name = this.name;\n    if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n    if (this.castShadow === true) object.castShadow = true;\n    if (this.receiveShadow === true) object.receiveShadow = true;\n    if (this.visible === false) object.visible = false;\n    object.matrix = this.matrix.toArray(); //\n\n    if (this.geometry !== undefined) {\n      if (meta.geometries[this.geometry.uuid] === undefined) {\n        meta.geometries[this.geometry.uuid] = this.geometry.toJSON(meta);\n      }\n\n      object.geometry = this.geometry.uuid;\n    }\n\n    if (this.material !== undefined) {\n      if (meta.materials[this.material.uuid] === undefined) {\n        meta.materials[this.material.uuid] = this.material.toJSON(meta);\n      }\n\n      object.material = this.material.uuid;\n    } //\n\n\n    if (this.children.length > 0) {\n      object.children = [];\n\n      for (var i = 0; i < this.children.length; i++) {\n        object.children.push(this.children[i].toJSON(meta).object);\n      }\n    }\n\n    if (isRootObject) {\n      var geometries = extractFromCache(meta.geometries);\n      var materials = extractFromCache(meta.materials);\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n    }\n\n    output.object = object;\n    return output; // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  },\n  clone: function (recursive) {\n    return new this.constructor().copy(this, recursive);\n  },\n  copy: function (source, recursive) {\n    if (recursive === undefined) recursive = true;\n    this.name = source.name;\n    this.up.copy(source.up);\n    this.position.copy(source.position);\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    this.visible = source.visible;\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n\n    if (recursive === true) {\n      for (var i = 0; i < source.children.length; i++) {\n        var child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n\n    return this;\n  }\n});\nTHREE.Object3DIdCount = 0; // File:src/core/Face3.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Face3 = function (a, b, c, normal, color, materialIndex) {\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\n  this.vertexNormals = Array.isArray(normal) ? normal : [];\n  this.color = color instanceof THREE.Color ? color : new THREE.Color();\n  this.vertexColors = Array.isArray(color) ? color : [];\n  this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n};\n\nTHREE.Face3.prototype = {\n  constructor: THREE.Face3,\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.a = source.a;\n    this.b = source.b;\n    this.c = source.c;\n    this.normal.copy(source.normal);\n    this.color.copy(source.color);\n    this.materialIndex = source.materialIndex;\n\n    for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n      this.vertexNormals[i] = source.vertexNormals[i].clone();\n    }\n\n    for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n      this.vertexColors[i] = source.vertexColors[i].clone();\n    }\n\n    return this;\n  }\n}; // File:src/core/BufferAttribute.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.BufferAttribute = function (array, itemSize, normalized) {\n  this.uuid = THREE.Math.generateUUID();\n  this.array = array;\n  this.itemSize = itemSize;\n  this.dynamic = false;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n  this.version = 0;\n  this.normalized = normalized === true;\n};\n\nTHREE.BufferAttribute.prototype = {\n  constructor: THREE.BufferAttribute,\n\n  get count() {\n    return this.array.length / this.itemSize;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  setDynamic: function (value) {\n    this.dynamic = value;\n    return this;\n  },\n  copy: function (source) {\n    this.array = new source.array.constructor(source.array);\n    this.itemSize = source.itemSize;\n    this.dynamic = source.dynamic;\n    return this;\n  },\n  copyAt: function (index1, attribute, index2) {\n    index1 *= this.itemSize;\n    index2 *= attribute.itemSize;\n\n    for (var i = 0, l = this.itemSize; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  copyArray: function (array) {\n    this.array.set(array);\n    return this;\n  },\n  copyColorsArray: function (colors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = colors.length; i < l; i++) {\n      var color = colors[i];\n\n      if (color === undefined) {\n        console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n        color = new THREE.Color();\n      }\n\n      array[offset++] = color.r;\n      array[offset++] = color.g;\n      array[offset++] = color.b;\n    }\n\n    return this;\n  },\n  copyIndicesArray: function (indices) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = indices.length; i < l; i++) {\n      var index = indices[i];\n      array[offset++] = index.a;\n      array[offset++] = index.b;\n      array[offset++] = index.c;\n    }\n\n    return this;\n  },\n  copyVector2sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n        vector = new THREE.Vector2();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n    }\n\n    return this;\n  },\n  copyVector3sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n        vector = new THREE.Vector3();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n    }\n\n    return this;\n  },\n  copyVector4sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n        vector = new THREE.Vector4();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n      array[offset++] = vector.w;\n    }\n\n    return this;\n  },\n  set: function (value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  getX: function (index) {\n    return this.array[index * this.itemSize];\n  },\n  setX: function (index, x) {\n    this.array[index * this.itemSize] = x;\n    return this;\n  },\n  getY: function (index) {\n    return this.array[index * this.itemSize + 1];\n  },\n  setY: function (index, y) {\n    this.array[index * this.itemSize + 1] = y;\n    return this;\n  },\n  getZ: function (index) {\n    return this.array[index * this.itemSize + 2];\n  },\n  setZ: function (index, z) {\n    this.array[index * this.itemSize + 2] = z;\n    return this;\n  },\n  getW: function (index) {\n    return this.array[index * this.itemSize + 3];\n  },\n  setW: function (index, w) {\n    this.array[index * this.itemSize + 3] = w;\n    return this;\n  },\n  setXY: function (index, x, y) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    this.array[index + 3] = w;\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  }\n}; //\n\nTHREE.Int8Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int8Array(array), itemSize);\n};\n\nTHREE.Uint8Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint8Array(array), itemSize);\n};\n\nTHREE.Uint8ClampedAttribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint8ClampedArray(array), itemSize);\n};\n\nTHREE.Int16Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int16Array(array), itemSize);\n};\n\nTHREE.Uint16Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint16Array(array), itemSize);\n};\n\nTHREE.Int32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int32Array(array), itemSize);\n};\n\nTHREE.Uint32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint32Array(array), itemSize);\n};\n\nTHREE.Float32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Float32Array(array), itemSize);\n};\n\nTHREE.Float64Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Float64Array(array), itemSize);\n}; // Deprecated\n\n\nTHREE.DynamicBufferAttribute = function (array, itemSize) {\n  console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.');\n  return new THREE.BufferAttribute(array, itemSize).setDynamic(true);\n}; // File:src/core/InstancedBufferAttribute.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\n\nTHREE.InstancedBufferAttribute = function (array, itemSize, meshPerAttribute) {\n  THREE.BufferAttribute.call(this, array, itemSize);\n  this.meshPerAttribute = meshPerAttribute || 1;\n};\n\nTHREE.InstancedBufferAttribute.prototype = Object.create(THREE.BufferAttribute.prototype);\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\n\nTHREE.InstancedBufferAttribute.prototype.copy = function (source) {\n  THREE.BufferAttribute.prototype.copy.call(this, source);\n  this.meshPerAttribute = source.meshPerAttribute;\n  return this;\n}; // File:src/core/InterleavedBuffer.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\n\nTHREE.InterleavedBuffer = function (array, stride) {\n  this.uuid = THREE.Math.generateUUID();\n  this.array = array;\n  this.stride = stride;\n  this.dynamic = false;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n  this.version = 0;\n};\n\nTHREE.InterleavedBuffer.prototype = {\n  constructor: THREE.InterleavedBuffer,\n\n  get length() {\n    return this.array.length;\n  },\n\n  get count() {\n    return this.array.length / this.stride;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  setDynamic: function (value) {\n    this.dynamic = value;\n    return this;\n  },\n  copy: function (source) {\n    this.array = new source.array.constructor(source.array);\n    this.stride = source.stride;\n    this.dynamic = source.dynamic;\n    return this;\n  },\n  copyAt: function (index1, attribute, index2) {\n    index1 *= this.stride;\n    index2 *= attribute.stride;\n\n    for (var i = 0, l = this.stride; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  set: function (value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  }\n}; // File:src/core/InstancedInterleavedBuffer.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\nTHREE.InstancedInterleavedBuffer = function (array, stride, meshPerAttribute) {\n  THREE.InterleavedBuffer.call(this, array, stride);\n  this.meshPerAttribute = meshPerAttribute || 1;\n};\n\nTHREE.InstancedInterleavedBuffer.prototype = Object.create(THREE.InterleavedBuffer.prototype);\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\n\nTHREE.InstancedInterleavedBuffer.prototype.copy = function (source) {\n  THREE.InterleavedBuffer.prototype.copy.call(this, source);\n  this.meshPerAttribute = source.meshPerAttribute;\n  return this;\n}; // File:src/core/InterleavedBufferAttribute.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\n\nTHREE.InterleavedBufferAttribute = function (interleavedBuffer, itemSize, offset) {\n  this.uuid = THREE.Math.generateUUID();\n  this.data = interleavedBuffer;\n  this.itemSize = itemSize;\n  this.offset = offset;\n};\n\nTHREE.InterleavedBufferAttribute.prototype = {\n  constructor: THREE.InterleavedBufferAttribute,\n\n  get length() {\n    console.warn('THREE.BufferAttribute: .length has been deprecated. Please use .count.');\n    return this.array.length;\n  },\n\n  get count() {\n    return this.data.count;\n  },\n\n  setX: function (index, x) {\n    this.data.array[index * this.data.stride + this.offset] = x;\n    return this;\n  },\n  setY: function (index, y) {\n    this.data.array[index * this.data.stride + this.offset + 1] = y;\n    return this;\n  },\n  setZ: function (index, z) {\n    this.data.array[index * this.data.stride + this.offset + 2] = z;\n    return this;\n  },\n  setW: function (index, w) {\n    this.data.array[index * this.data.stride + this.offset + 3] = w;\n    return this;\n  },\n  getX: function (index) {\n    return this.data.array[index * this.data.stride + this.offset];\n  },\n  getY: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 1];\n  },\n  getZ: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 2];\n  },\n  getW: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 3];\n  },\n  setXY: function (index, x, y) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    this.data.array[index + 3] = w;\n    return this;\n  }\n}; // File:src/core/Geometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://clara.io\r\n */\n\nTHREE.Geometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Geometry';\n  this.vertices = [];\n  this.colors = [];\n  this.faces = [];\n  this.faceVertexUvs = [[]];\n  this.morphTargets = [];\n  this.morphNormals = [];\n  this.skinWeights = [];\n  this.skinIndices = [];\n  this.lineDistances = [];\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.verticesNeedUpdate = false;\n  this.elementsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.lineDistancesNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n};\n\nObject.assign(THREE.Geometry.prototype, THREE.EventDispatcher.prototype, {\n  applyMatrix: function (matrix) {\n    var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n\n    for (var i = 0, il = this.vertices.length; i < il; i++) {\n      var vertex = this.vertices[i];\n      vertex.applyMatrix4(matrix);\n    }\n\n    for (var i = 0, il = this.faces.length; i < il; i++) {\n      var face = this.faces[i];\n      face.normal.applyMatrix3(normalMatrix).normalize();\n\n      for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n        face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n      }\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    this.verticesNeedUpdate = true;\n    this.normalsNeedUpdate = true;\n    return this;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1;\n    return function rotateX(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1;\n    return function rotateY(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1;\n    return function rotateZ(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1;\n    return function translate(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1;\n    return function scale(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj;\n    return function lookAt(vector) {\n      if (obj === undefined) obj = new THREE.Object3D();\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  fromBufferGeometry: function (geometry) {\n    var scope = this;\n    var indices = geometry.index !== null ? geometry.index.array : undefined;\n    var attributes = geometry.attributes;\n    var positions = attributes.position.array;\n    var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n    var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n    var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n    var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n    if (uvs2 !== undefined) this.faceVertexUvs[1] = [];\n    var tempNormals = [];\n    var tempUVs = [];\n    var tempUVs2 = [];\n\n    for (var i = 0, j = 0; i < positions.length; i += 3, j += 2) {\n      scope.vertices.push(new THREE.Vector3(positions[i], positions[i + 1], positions[i + 2]));\n\n      if (normals !== undefined) {\n        tempNormals.push(new THREE.Vector3(normals[i], normals[i + 1], normals[i + 2]));\n      }\n\n      if (colors !== undefined) {\n        scope.colors.push(new THREE.Color(colors[i], colors[i + 1], colors[i + 2]));\n      }\n\n      if (uvs !== undefined) {\n        tempUVs.push(new THREE.Vector2(uvs[j], uvs[j + 1]));\n      }\n\n      if (uvs2 !== undefined) {\n        tempUVs2.push(new THREE.Vector2(uvs2[j], uvs2[j + 1]));\n      }\n    }\n\n    function addFace(a, b, c, materialIndex) {\n      var vertexNormals = normals !== undefined ? [tempNormals[a].clone(), tempNormals[b].clone(), tempNormals[c].clone()] : [];\n      var vertexColors = colors !== undefined ? [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()] : [];\n      var face = new THREE.Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n      scope.faces.push(face);\n\n      if (uvs !== undefined) {\n        scope.faceVertexUvs[0].push([tempUVs[a].clone(), tempUVs[b].clone(), tempUVs[c].clone()]);\n      }\n\n      if (uvs2 !== undefined) {\n        scope.faceVertexUvs[1].push([tempUVs2[a].clone(), tempUVs2[b].clone(), tempUVs2[c].clone()]);\n      }\n    }\n\n    if (indices !== undefined) {\n      var groups = geometry.groups;\n\n      if (groups.length > 0) {\n        for (var i = 0; i < groups.length; i++) {\n          var group = groups[i];\n          var start = group.start;\n          var count = group.count;\n\n          for (var j = start, jl = start + count; j < jl; j += 3) {\n            addFace(indices[j], indices[j + 1], indices[j + 2], group.materialIndex);\n          }\n        }\n      } else {\n        for (var i = 0; i < indices.length; i += 3) {\n          addFace(indices[i], indices[i + 1], indices[i + 2]);\n        }\n      }\n    } else {\n      for (var i = 0; i < positions.length / 3; i += 3) {\n        addFace(i, i + 1, i + 2);\n      }\n    }\n\n    this.computeFaceNormals();\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    return this;\n  },\n  center: function () {\n    this.computeBoundingBox();\n    var offset = this.boundingBox.center().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  },\n  normalize: function () {\n    this.computeBoundingSphere();\n    var center = this.boundingSphere.center;\n    var radius = this.boundingSphere.radius;\n    var s = radius === 0 ? 1 : 1.0 / radius;\n    var matrix = new THREE.Matrix4();\n    matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n    this.applyMatrix(matrix);\n    return this;\n  },\n  computeFaceNormals: function () {\n    var cb = new THREE.Vector3(),\n        ab = new THREE.Vector3();\n\n    for (var f = 0, fl = this.faces.length; f < fl; f++) {\n      var face = this.faces[f];\n      var vA = this.vertices[face.a];\n      var vB = this.vertices[face.b];\n      var vC = this.vertices[face.c];\n      cb.subVectors(vC, vB);\n      ab.subVectors(vA, vB);\n      cb.cross(ab);\n      cb.normalize();\n      face.normal.copy(cb);\n    }\n  },\n  computeVertexNormals: function (areaWeighted) {\n    if (areaWeighted === undefined) areaWeighted = true;\n    var v, vl, f, fl, face, vertices;\n    vertices = new Array(this.vertices.length);\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v] = new THREE.Vector3();\n    }\n\n    if (areaWeighted) {\n      // vertex normals weighted by triangle areas\n      // http://www.iquilezles.org/www/articles/normals/normals.htm\n      var vA, vB, vC;\n      var cb = new THREE.Vector3(),\n          ab = new THREE.Vector3();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vA = this.vertices[face.a];\n        vB = this.vertices[face.b];\n        vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        vertices[face.a].add(cb);\n        vertices[face.b].add(cb);\n        vertices[face.c].add(cb);\n      }\n    } else {\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vertices[face.a].add(face.normal);\n        vertices[face.b].add(face.normal);\n        vertices[face.c].add(face.normal);\n      }\n    }\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v].normalize();\n    }\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        vertexNormals[0].copy(vertices[face.a]);\n        vertexNormals[1].copy(vertices[face.b]);\n        vertexNormals[2].copy(vertices[face.c]);\n      } else {\n        vertexNormals[0] = vertices[face.a].clone();\n        vertexNormals[1] = vertices[face.b].clone();\n        vertexNormals[2] = vertices[face.c].clone();\n      }\n    }\n\n    if (this.faces.length > 0) {\n      this.normalsNeedUpdate = true;\n    }\n  },\n  computeMorphNormals: function () {\n    var i, il, f, fl, face; // save original normals\n    // - create temp variables on first access\n    //   otherwise just copy (for faster repeated calls)\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n\n      if (!face.__originalFaceNormal) {\n        face.__originalFaceNormal = face.normal.clone();\n      } else {\n        face.__originalFaceNormal.copy(face.normal);\n      }\n\n      if (!face.__originalVertexNormals) face.__originalVertexNormals = [];\n\n      for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n        if (!face.__originalVertexNormals[i]) {\n          face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n        } else {\n          face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n        }\n      }\n    } // use temp geometry to compute face and vertex normals for each morph\n\n\n    var tmpGeo = new THREE.Geometry();\n    tmpGeo.faces = this.faces;\n\n    for (i = 0, il = this.morphTargets.length; i < il; i++) {\n      // create on first access\n      if (!this.morphNormals[i]) {\n        this.morphNormals[i] = {};\n        this.morphNormals[i].faceNormals = [];\n        this.morphNormals[i].vertexNormals = [];\n        var dstNormalsFace = this.morphNormals[i].faceNormals;\n        var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          faceNormal = new THREE.Vector3();\n          vertexNormals = {\n            a: new THREE.Vector3(),\n            b: new THREE.Vector3(),\n            c: new THREE.Vector3()\n          };\n          dstNormalsFace.push(faceNormal);\n          dstNormalsVertex.push(vertexNormals);\n        }\n      }\n\n      var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n      tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n      tmpGeo.computeFaceNormals();\n      tmpGeo.computeVertexNormals(); // store morph normals\n\n      var faceNormal, vertexNormals;\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        faceNormal = morphNormals.faceNormals[f];\n        vertexNormals = morphNormals.vertexNormals[f];\n        faceNormal.copy(face.normal);\n        vertexNormals.a.copy(face.vertexNormals[0]);\n        vertexNormals.b.copy(face.vertexNormals[1]);\n        vertexNormals.c.copy(face.vertexNormals[2]);\n      }\n    } // restore original normals\n\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      face.normal = face.__originalFaceNormal;\n      face.vertexNormals = face.__originalVertexNormals;\n    }\n  },\n  computeTangents: function () {\n    console.warn('THREE.Geometry: .computeTangents() has been removed.');\n  },\n  computeLineDistances: function () {\n    var d = 0;\n    var vertices = this.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      if (i > 0) {\n        d += vertices[i].distanceTo(vertices[i - 1]);\n      }\n\n      this.lineDistances[i] = d;\n    }\n  },\n  computeBoundingBox: function () {\n    if (this.boundingBox === null) {\n      this.boundingBox = new THREE.Box3();\n    }\n\n    this.boundingBox.setFromPoints(this.vertices);\n  },\n  computeBoundingSphere: function () {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new THREE.Sphere();\n    }\n\n    this.boundingSphere.setFromPoints(this.vertices);\n  },\n  merge: function (geometry, matrix, materialIndexOffset) {\n    if (geometry instanceof THREE.Geometry === false) {\n      console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n      return;\n    }\n\n    var normalMatrix,\n        vertexOffset = this.vertices.length,\n        vertices1 = this.vertices,\n        vertices2 = geometry.vertices,\n        faces1 = this.faces,\n        faces2 = geometry.faces,\n        uvs1 = this.faceVertexUvs[0],\n        uvs2 = geometry.faceVertexUvs[0];\n    if (materialIndexOffset === undefined) materialIndexOffset = 0;\n\n    if (matrix !== undefined) {\n      normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n    } // vertices\n\n\n    for (var i = 0, il = vertices2.length; i < il; i++) {\n      var vertex = vertices2[i];\n      var vertexCopy = vertex.clone();\n      if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n      vertices1.push(vertexCopy);\n    } // faces\n\n\n    for (i = 0, il = faces2.length; i < il; i++) {\n      var face = faces2[i],\n          faceCopy,\n          normal,\n          color,\n          faceVertexNormals = face.vertexNormals,\n          faceVertexColors = face.vertexColors;\n      faceCopy = new THREE.Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n      faceCopy.normal.copy(face.normal);\n\n      if (normalMatrix !== undefined) {\n        faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n      }\n\n      for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n        normal = faceVertexNormals[j].clone();\n\n        if (normalMatrix !== undefined) {\n          normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        faceCopy.vertexNormals.push(normal);\n      }\n\n      faceCopy.color.copy(face.color);\n\n      for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n        color = faceVertexColors[j];\n        faceCopy.vertexColors.push(color.clone());\n      }\n\n      faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n      faces1.push(faceCopy);\n    } // uvs\n\n\n    for (i = 0, il = uvs2.length; i < il; i++) {\n      var uv = uvs2[i],\n          uvCopy = [];\n\n      if (uv === undefined) {\n        continue;\n      }\n\n      for (var j = 0, jl = uv.length; j < jl; j++) {\n        uvCopy.push(uv[j].clone());\n      }\n\n      uvs1.push(uvCopy);\n    }\n  },\n  mergeMesh: function (mesh) {\n    if (mesh instanceof THREE.Mesh === false) {\n      console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n      return;\n    }\n\n    mesh.matrixAutoUpdate && mesh.updateMatrix();\n    this.merge(mesh.geometry, mesh.matrix);\n  },\n\n  /*\r\n   * Checks for duplicate vertices with hashmap.\r\n   * Duplicated vertices are removed\r\n   * and faces' vertices are updated.\r\n   */\n  mergeVertices: function () {\n    var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\n    var unique = [],\n        changes = [];\n    var v, key;\n    var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\n    var precision = Math.pow(10, precisionPoints);\n    var i, il, face;\n    var indices, j, jl;\n\n    for (i = 0, il = this.vertices.length; i < il; i++) {\n      v = this.vertices[i];\n      key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n      if (verticesMap[key] === undefined) {\n        verticesMap[key] = i;\n        unique.push(this.vertices[i]);\n        changes[i] = unique.length - 1;\n      } else {\n        //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n        changes[i] = changes[verticesMap[key]];\n      }\n    } // if faces are completely degenerate after merging vertices, we\n    // have to remove them from the geometry.\n\n\n    var faceIndicesToRemove = [];\n\n    for (i = 0, il = this.faces.length; i < il; i++) {\n      face = this.faces[i];\n      face.a = changes[face.a];\n      face.b = changes[face.b];\n      face.c = changes[face.c];\n      indices = [face.a, face.b, face.c];\n      var dupIndex = -1; // if any duplicate vertices are found in a Face3\n      // we have to remove the face as nothing can be saved\n\n      for (var n = 0; n < 3; n++) {\n        if (indices[n] === indices[(n + 1) % 3]) {\n          dupIndex = n;\n          faceIndicesToRemove.push(i);\n          break;\n        }\n      }\n    }\n\n    for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n      var idx = faceIndicesToRemove[i];\n      this.faces.splice(idx, 1);\n\n      for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n        this.faceVertexUvs[j].splice(idx, 1);\n      }\n    } // Use unique set of vertices\n\n\n    var diff = this.vertices.length - unique.length;\n    this.vertices = unique;\n    return diff;\n  },\n  sortFacesByMaterialIndex: function () {\n    var faces = this.faces;\n    var length = faces.length; // tag faces\n\n    for (var i = 0; i < length; i++) {\n      faces[i]._id = i;\n    } // sort faces\n\n\n    function materialIndexSort(a, b) {\n      return a.materialIndex - b.materialIndex;\n    }\n\n    faces.sort(materialIndexSort); // sort uvs\n\n    var uvs1 = this.faceVertexUvs[0];\n    var uvs2 = this.faceVertexUvs[1];\n    var newUvs1, newUvs2;\n    if (uvs1 && uvs1.length === length) newUvs1 = [];\n    if (uvs2 && uvs2.length === length) newUvs2 = [];\n\n    for (var i = 0; i < length; i++) {\n      var id = faces[i]._id;\n      if (newUvs1) newUvs1.push(uvs1[id]);\n      if (newUvs2) newUvs2.push(uvs2[id]);\n    }\n\n    if (newUvs1) this.faceVertexUvs[0] = newUvs1;\n    if (newUvs2) this.faceVertexUvs[1] = newUvs2;\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'Geometry',\n        generator: 'Geometry.toJSON'\n      }\n    }; // standard Geometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    var vertices = [];\n\n    for (var i = 0; i < this.vertices.length; i++) {\n      var vertex = this.vertices[i];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    var faces = [];\n    var normals = [];\n    var normalsHash = {};\n    var colors = [];\n    var colorsHash = {};\n    var uvs = [];\n    var uvsHash = {};\n\n    for (var i = 0; i < this.faces.length; i++) {\n      var face = this.faces[i];\n      var hasMaterial = true;\n      var hasFaceUv = false; // deprecated\n\n      var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n      var hasFaceNormal = face.normal.length() > 0;\n      var hasFaceVertexNormal = face.vertexNormals.length > 0;\n      var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n      var hasFaceVertexColor = face.vertexColors.length > 0;\n      var faceType = 0;\n      faceType = setBit(faceType, 0, 0); // isQuad\n\n      faceType = setBit(faceType, 1, hasMaterial);\n      faceType = setBit(faceType, 2, hasFaceUv);\n      faceType = setBit(faceType, 3, hasFaceVertexUv);\n      faceType = setBit(faceType, 4, hasFaceNormal);\n      faceType = setBit(faceType, 5, hasFaceVertexNormal);\n      faceType = setBit(faceType, 6, hasFaceColor);\n      faceType = setBit(faceType, 7, hasFaceVertexColor);\n      faces.push(faceType);\n      faces.push(face.a, face.b, face.c);\n      faces.push(face.materialIndex);\n\n      if (hasFaceVertexUv) {\n        var faceVertexUvs = this.faceVertexUvs[0][i];\n        faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n      }\n\n      if (hasFaceNormal) {\n        faces.push(getNormalIndex(face.normal));\n      }\n\n      if (hasFaceVertexNormal) {\n        var vertexNormals = face.vertexNormals;\n        faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n      }\n\n      if (hasFaceColor) {\n        faces.push(getColorIndex(face.color));\n      }\n\n      if (hasFaceVertexColor) {\n        var vertexColors = face.vertexColors;\n        faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n      }\n    }\n\n    function setBit(value, position, enabled) {\n      return enabled ? value | 1 << position : value & ~(1 << position);\n    }\n\n    function getNormalIndex(normal) {\n      var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n      if (normalsHash[hash] !== undefined) {\n        return normalsHash[hash];\n      }\n\n      normalsHash[hash] = normals.length / 3;\n      normals.push(normal.x, normal.y, normal.z);\n      return normalsHash[hash];\n    }\n\n    function getColorIndex(color) {\n      var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n      if (colorsHash[hash] !== undefined) {\n        return colorsHash[hash];\n      }\n\n      colorsHash[hash] = colors.length;\n      colors.push(color.getHex());\n      return colorsHash[hash];\n    }\n\n    function getUvIndex(uv) {\n      var hash = uv.x.toString() + uv.y.toString();\n\n      if (uvsHash[hash] !== undefined) {\n        return uvsHash[hash];\n      }\n\n      uvsHash[hash] = uvs.length / 2;\n      uvs.push(uv.x, uv.y);\n      return uvsHash[hash];\n    }\n\n    data.data = {};\n    data.data.vertices = vertices;\n    data.data.normals = normals;\n    if (colors.length > 0) data.data.colors = colors;\n    if (uvs.length > 0) data.data.uvs = [uvs]; // temporal backward compatibility\n\n    data.data.faces = faces;\n    return data;\n  },\n  clone: function () {\n    /*\r\n    // Handle primitives\r\n    \t\tvar parameters = this.parameters;\r\n    \t\tif ( parameters !== undefined ) {\r\n    \t\t\tvar values = [];\r\n    \t\t\tfor ( var key in parameters ) {\r\n    \t\t\t\tvalues.push( parameters[ key ] );\r\n    \t\t\t}\r\n    \t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n    \tthis.constructor.apply( geometry, values );\r\n    \treturn geometry;\r\n    \t\t}\r\n    \t\treturn new this.constructor().copy( this );\r\n    */\n    return new THREE.Geometry().copy(this);\n  },\n  copy: function (source) {\n    this.vertices = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    var vertices = source.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      this.vertices.push(vertices[i].clone());\n    }\n\n    var faces = source.faces;\n\n    for (var i = 0, il = faces.length; i < il; i++) {\n      this.faces.push(faces[i].clone());\n    }\n\n    for (var i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n      var faceVertexUvs = source.faceVertexUvs[i];\n\n      if (this.faceVertexUvs[i] === undefined) {\n        this.faceVertexUvs[i] = [];\n      }\n\n      for (var j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n        var uvs = faceVertexUvs[j],\n            uvsCopy = [];\n\n        for (var k = 0, kl = uvs.length; k < kl; k++) {\n          var uv = uvs[k];\n          uvsCopy.push(uv.clone());\n        }\n\n        this.faceVertexUvs[i].push(uvsCopy);\n      }\n    }\n\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\nTHREE.GeometryIdCount = 0; // File:src/core/DirectGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.DirectGeometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'DirectGeometry';\n  this.indices = [];\n  this.vertices = [];\n  this.normals = [];\n  this.colors = [];\n  this.uvs = [];\n  this.uvs2 = [];\n  this.groups = [];\n  this.morphTargets = {};\n  this.skinWeights = [];\n  this.skinIndices = []; // this.lineDistances = [];\n\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.verticesNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n};\n\nObject.assign(THREE.DirectGeometry.prototype, THREE.EventDispatcher.prototype, {\n  computeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\n  computeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\n  computeFaceNormals: function () {\n    console.warn('THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.');\n  },\n  computeVertexNormals: function () {\n    console.warn('THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.');\n  },\n  computeGroups: function (geometry) {\n    var group;\n    var groups = [];\n    var materialIndex;\n    var faces = geometry.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i]; // materials\n\n      if (face.materialIndex !== materialIndex) {\n        materialIndex = face.materialIndex;\n\n        if (group !== undefined) {\n          group.count = i * 3 - group.start;\n          groups.push(group);\n        }\n\n        group = {\n          start: i * 3,\n          materialIndex: materialIndex\n        };\n      }\n    }\n\n    if (group !== undefined) {\n      group.count = i * 3 - group.start;\n      groups.push(group);\n    }\n\n    this.groups = groups;\n  },\n  fromGeometry: function (geometry) {\n    var faces = geometry.faces;\n    var vertices = geometry.vertices;\n    var faceVertexUvs = geometry.faceVertexUvs;\n    var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n    var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0; // morphs\n\n    var morphTargets = geometry.morphTargets;\n    var morphTargetsLength = morphTargets.length;\n    var morphTargetsPosition;\n\n    if (morphTargetsLength > 0) {\n      morphTargetsPosition = [];\n\n      for (var i = 0; i < morphTargetsLength; i++) {\n        morphTargetsPosition[i] = [];\n      }\n\n      this.morphTargets.position = morphTargetsPosition;\n    }\n\n    var morphNormals = geometry.morphNormals;\n    var morphNormalsLength = morphNormals.length;\n    var morphTargetsNormal;\n\n    if (morphNormalsLength > 0) {\n      morphTargetsNormal = [];\n\n      for (var i = 0; i < morphNormalsLength; i++) {\n        morphTargetsNormal[i] = [];\n      }\n\n      this.morphTargets.normal = morphTargetsNormal;\n    } // skins\n\n\n    var skinIndices = geometry.skinIndices;\n    var skinWeights = geometry.skinWeights;\n    var hasSkinIndices = skinIndices.length === vertices.length;\n    var hasSkinWeights = skinWeights.length === vertices.length; //\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n      } else {\n        var normal = face.normal;\n        this.normals.push(normal, normal, normal);\n      }\n\n      var vertexColors = face.vertexColors;\n\n      if (vertexColors.length === 3) {\n        this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n      } else {\n        var color = face.color;\n        this.colors.push(color, color, color);\n      }\n\n      if (hasFaceVertexUv === true) {\n        var vertexUvs = faceVertexUvs[0][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n          this.uvs.push(new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2());\n        }\n      }\n\n      if (hasFaceVertexUv2 === true) {\n        var vertexUvs = faceVertexUvs[1][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n          this.uvs2.push(new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2());\n        }\n      } // morphs\n\n\n      for (var j = 0; j < morphTargetsLength; j++) {\n        var morphTarget = morphTargets[j].vertices;\n        morphTargetsPosition[j].push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n      }\n\n      for (var j = 0; j < morphNormalsLength; j++) {\n        var morphNormal = morphNormals[j].vertexNormals[i];\n        morphTargetsNormal[j].push(morphNormal.a, morphNormal.b, morphNormal.c);\n      } // skins\n\n\n      if (hasSkinIndices) {\n        this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n      }\n\n      if (hasSkinWeights) {\n        this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n      }\n    }\n\n    this.computeGroups(geometry);\n    this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n    this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n    this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n    this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n    this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n}); // File:src/core/BufferGeometry.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.BufferGeometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'BufferGeometry';\n  this.index = null;\n  this.attributes = {};\n  this.morphAttributes = {};\n  this.groups = [];\n  this.boundingBox = null;\n  this.boundingSphere = null;\n  this.drawRange = {\n    start: 0,\n    count: Infinity\n  };\n};\n\nObject.assign(THREE.BufferGeometry.prototype, THREE.EventDispatcher.prototype, {\n  getIndex: function () {\n    return this.index;\n  },\n  setIndex: function (index) {\n    this.index = index;\n  },\n  addAttribute: function (name, attribute) {\n    if (attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false) {\n      console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n      this.addAttribute(name, new THREE.BufferAttribute(arguments[1], arguments[2]));\n      return;\n    }\n\n    if (name === 'index') {\n      console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n      this.setIndex(attribute);\n      return;\n    }\n\n    this.attributes[name] = attribute;\n    return this;\n  },\n  getAttribute: function (name) {\n    return this.attributes[name];\n  },\n  removeAttribute: function (name) {\n    delete this.attributes[name];\n    return this;\n  },\n  addGroup: function (start, count, materialIndex) {\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex !== undefined ? materialIndex : 0\n    });\n  },\n  clearGroups: function () {\n    this.groups = [];\n  },\n  setDrawRange: function (start, count) {\n    this.drawRange.start = start;\n    this.drawRange.count = count;\n  },\n  applyMatrix: function (matrix) {\n    var position = this.attributes.position;\n\n    if (position !== undefined) {\n      matrix.applyToVector3Array(position.array);\n      position.needsUpdate = true;\n    }\n\n    var normal = this.attributes.normal;\n\n    if (normal !== undefined) {\n      var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n      normalMatrix.applyToVector3Array(normal.array);\n      normal.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    return this;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1;\n    return function rotateX(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1;\n    return function rotateY(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1;\n    return function rotateZ(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1;\n    return function translate(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1;\n    return function scale(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj;\n    return function lookAt(vector) {\n      if (obj === undefined) obj = new THREE.Object3D();\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  center: function () {\n    this.computeBoundingBox();\n    var offset = this.boundingBox.center().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  },\n  setFromObject: function (object) {\n    // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n    var geometry = object.geometry;\n\n    if (object instanceof THREE.Points || object instanceof THREE.Line) {\n      var positions = new THREE.Float32Attribute(geometry.vertices.length * 3, 3);\n      var colors = new THREE.Float32Attribute(geometry.colors.length * 3, 3);\n      this.addAttribute('position', positions.copyVector3sArray(geometry.vertices));\n      this.addAttribute('color', colors.copyColorsArray(geometry.colors));\n\n      if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n        var lineDistances = new THREE.Float32Attribute(geometry.lineDistances.length, 1);\n        this.addAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n      }\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n    } else if (object instanceof THREE.Mesh) {\n      if (geometry instanceof THREE.Geometry) {\n        this.fromGeometry(geometry);\n      }\n    }\n\n    return this;\n  },\n  updateFromObject: function (object) {\n    var geometry = object.geometry;\n\n    if (object instanceof THREE.Mesh) {\n      var direct = geometry.__directGeometry;\n\n      if (direct === undefined) {\n        return this.fromGeometry(geometry);\n      }\n\n      direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\n      geometry.verticesNeedUpdate = false;\n      geometry.normalsNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      geometry.uvsNeedUpdate = false;\n      geometry.groupsNeedUpdate = false;\n      geometry = direct;\n    }\n\n    if (geometry.verticesNeedUpdate === true) {\n      var attribute = this.attributes.position;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.vertices);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.verticesNeedUpdate = false;\n    }\n\n    if (geometry.normalsNeedUpdate === true) {\n      var attribute = this.attributes.normal;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.normals);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.normalsNeedUpdate = false;\n    }\n\n    if (geometry.colorsNeedUpdate === true) {\n      var attribute = this.attributes.color;\n\n      if (attribute !== undefined) {\n        attribute.copyColorsArray(geometry.colors);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.colorsNeedUpdate = false;\n    }\n\n    if (geometry.uvsNeedUpdate) {\n      var attribute = this.attributes.uv;\n\n      if (attribute !== undefined) {\n        attribute.copyVector2sArray(geometry.uvs);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.uvsNeedUpdate = false;\n    }\n\n    if (geometry.lineDistancesNeedUpdate) {\n      var attribute = this.attributes.lineDistance;\n\n      if (attribute !== undefined) {\n        attribute.copyArray(geometry.lineDistances);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.lineDistancesNeedUpdate = false;\n    }\n\n    if (geometry.groupsNeedUpdate) {\n      geometry.computeGroups(object.geometry);\n      this.groups = geometry.groups;\n      geometry.groupsNeedUpdate = false;\n    }\n\n    return this;\n  },\n  fromGeometry: function (geometry) {\n    geometry.__directGeometry = new THREE.DirectGeometry().fromGeometry(geometry);\n    return this.fromDirectGeometry(geometry.__directGeometry);\n  },\n  fromDirectGeometry: function (geometry) {\n    var positions = new Float32Array(geometry.vertices.length * 3);\n    this.addAttribute('position', new THREE.BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n\n    if (geometry.normals.length > 0) {\n      var normals = new Float32Array(geometry.normals.length * 3);\n      this.addAttribute('normal', new THREE.BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n    }\n\n    if (geometry.colors.length > 0) {\n      var colors = new Float32Array(geometry.colors.length * 3);\n      this.addAttribute('color', new THREE.BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n    }\n\n    if (geometry.uvs.length > 0) {\n      var uvs = new Float32Array(geometry.uvs.length * 2);\n      this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n    }\n\n    if (geometry.uvs2.length > 0) {\n      var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n      this.addAttribute('uv2', new THREE.BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n    }\n\n    if (geometry.indices.length > 0) {\n      var TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n      var indices = new TypeArray(geometry.indices.length * 3);\n      this.setIndex(new THREE.BufferAttribute(indices, 1).copyIndicesArray(geometry.indices));\n    } // groups\n\n\n    this.groups = geometry.groups; // morphs\n\n    for (var name in geometry.morphTargets) {\n      var array = [];\n      var morphTargets = geometry.morphTargets[name];\n\n      for (var i = 0, l = morphTargets.length; i < l; i++) {\n        var morphTarget = morphTargets[i];\n        var attribute = new THREE.Float32Attribute(morphTarget.length * 3, 3);\n        array.push(attribute.copyVector3sArray(morphTarget));\n      }\n\n      this.morphAttributes[name] = array;\n    } // skinning\n\n\n    if (geometry.skinIndices.length > 0) {\n      var skinIndices = new THREE.Float32Attribute(geometry.skinIndices.length * 4, 4);\n      this.addAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n    }\n\n    if (geometry.skinWeights.length > 0) {\n      var skinWeights = new THREE.Float32Attribute(geometry.skinWeights.length * 4, 4);\n      this.addAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n    } //\n\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    return this;\n  },\n  computeBoundingBox: function () {\n    if (this.boundingBox === null) {\n      this.boundingBox = new THREE.Box3();\n    }\n\n    var positions = this.attributes.position.array;\n\n    if (positions !== undefined) {\n      this.boundingBox.setFromArray(positions);\n    } else {\n      this.boundingBox.makeEmpty();\n    }\n\n    if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n      console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n    }\n  },\n  computeBoundingSphere: function () {\n    var box = new THREE.Box3();\n    var vector = new THREE.Vector3();\n    return function computeBoundingSphere() {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new THREE.Sphere();\n      }\n\n      var positions = this.attributes.position.array;\n\n      if (positions) {\n        var center = this.boundingSphere.center;\n        box.setFromArray(positions);\n        box.center(center); // hoping to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = positions.length; i < il; i += 3) {\n          vector.fromArray(positions, i);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n        }\n      }\n    };\n  }(),\n  computeFaceNormals: function () {// backwards compatibility\n  },\n  computeVertexNormals: function () {\n    var index = this.index;\n    var attributes = this.attributes;\n    var groups = this.groups;\n\n    if (attributes.position) {\n      var positions = attributes.position.array;\n\n      if (attributes.normal === undefined) {\n        this.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(positions.length), 3));\n      } else {\n        // reset existing normals to zero\n        var array = attributes.normal.array;\n\n        for (var i = 0, il = array.length; i < il; i++) {\n          array[i] = 0;\n        }\n      }\n\n      var normals = attributes.normal.array;\n      var vA,\n          vB,\n          vC,\n          pA = new THREE.Vector3(),\n          pB = new THREE.Vector3(),\n          pC = new THREE.Vector3(),\n          cb = new THREE.Vector3(),\n          ab = new THREE.Vector3(); // indexed elements\n\n      if (index) {\n        var indices = index.array;\n\n        if (groups.length === 0) {\n          this.addGroup(0, indices.length);\n        }\n\n        for (var j = 0, jl = groups.length; j < jl; ++j) {\n          var group = groups[j];\n          var start = group.start;\n          var count = group.count;\n\n          for (var i = start, il = start + count; i < il; i += 3) {\n            vA = indices[i + 0] * 3;\n            vB = indices[i + 1] * 3;\n            vC = indices[i + 2] * 3;\n            pA.fromArray(positions, vA);\n            pB.fromArray(positions, vB);\n            pC.fromArray(positions, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[vA] += cb.x;\n            normals[vA + 1] += cb.y;\n            normals[vA + 2] += cb.z;\n            normals[vB] += cb.x;\n            normals[vB + 1] += cb.y;\n            normals[vB + 2] += cb.z;\n            normals[vC] += cb.x;\n            normals[vC + 1] += cb.y;\n            normals[vC + 2] += cb.z;\n          }\n        }\n      } else {\n        // non-indexed elements (unconnected triangle soup)\n        for (var i = 0, il = positions.length; i < il; i += 9) {\n          pA.fromArray(positions, i);\n          pB.fromArray(positions, i + 3);\n          pC.fromArray(positions, i + 6);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          normals[i] = cb.x;\n          normals[i + 1] = cb.y;\n          normals[i + 2] = cb.z;\n          normals[i + 3] = cb.x;\n          normals[i + 4] = cb.y;\n          normals[i + 5] = cb.z;\n          normals[i + 6] = cb.x;\n          normals[i + 7] = cb.y;\n          normals[i + 8] = cb.z;\n        }\n      }\n\n      this.normalizeNormals();\n      attributes.normal.needsUpdate = true;\n    }\n  },\n  merge: function (geometry, offset) {\n    if (geometry instanceof THREE.BufferGeometry === false) {\n      console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n      return;\n    }\n\n    if (offset === undefined) offset = 0;\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      if (geometry.attributes[key] === undefined) continue;\n      var attribute1 = attributes[key];\n      var attributeArray1 = attribute1.array;\n      var attribute2 = geometry.attributes[key];\n      var attributeArray2 = attribute2.array;\n      var attributeSize = attribute2.itemSize;\n\n      for (var i = 0, j = attributeSize * offset; i < attributeArray2.length; i++, j++) {\n        attributeArray1[j] = attributeArray2[i];\n      }\n    }\n\n    return this;\n  },\n  normalizeNormals: function () {\n    var normals = this.attributes.normal.array;\n    var x, y, z, n;\n\n    for (var i = 0, il = normals.length; i < il; i += 3) {\n      x = normals[i];\n      y = normals[i + 1];\n      z = normals[i + 2];\n      n = 1.0 / Math.sqrt(x * x + y * y + z * z);\n      normals[i] *= n;\n      normals[i + 1] *= n;\n      normals[i + 2] *= n;\n    }\n  },\n  toNonIndexed: function () {\n    if (this.index === null) {\n      console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');\n      return this;\n    }\n\n    var geometry2 = new THREE.BufferGeometry();\n    var indices = this.index.array;\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      var array = attribute.array;\n      var itemSize = attribute.itemSize;\n      var array2 = new array.constructor(indices.length * itemSize);\n      var index = 0,\n          index2 = 0;\n\n      for (var i = 0, l = indices.length; i < l; i++) {\n        index = indices[i] * itemSize;\n\n        for (var j = 0; j < itemSize; j++) {\n          array2[index2++] = array[index++];\n        }\n      }\n\n      geometry2.addAttribute(name, new THREE.BufferAttribute(array2, itemSize));\n    }\n\n    return geometry2;\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'BufferGeometry',\n        generator: 'BufferGeometry.toJSON'\n      }\n    }; // standard BufferGeometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    data.data = {\n      attributes: {}\n    };\n    var index = this.index;\n\n    if (index !== null) {\n      var array = Array.prototype.slice.call(index.array);\n      data.data.index = {\n        type: index.array.constructor.name,\n        array: array\n      };\n    }\n\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var array = Array.prototype.slice.call(attribute.array);\n      data.data.attributes[key] = {\n        itemSize: attribute.itemSize,\n        type: attribute.array.constructor.name,\n        array: array,\n        normalized: attribute.normalized\n      };\n    }\n\n    var groups = this.groups;\n\n    if (groups.length > 0) {\n      data.data.groups = JSON.parse(JSON.stringify(groups));\n    }\n\n    var boundingSphere = this.boundingSphere;\n\n    if (boundingSphere !== null) {\n      data.data.boundingSphere = {\n        center: boundingSphere.center.toArray(),\n        radius: boundingSphere.radius\n      };\n    }\n\n    return data;\n  },\n  clone: function () {\n    /*\r\n    // Handle primitives\r\n    \t\tvar parameters = this.parameters;\r\n    \t\tif ( parameters !== undefined ) {\r\n    \t\t\tvar values = [];\r\n    \t\t\tfor ( var key in parameters ) {\r\n    \t\t\t\tvalues.push( parameters[ key ] );\r\n    \t\t\t}\r\n    \t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n    \tthis.constructor.apply( geometry, values );\r\n    \treturn geometry;\r\n    \t\t}\r\n    \t\treturn new this.constructor().copy( this );\r\n    */\n    return new THREE.BufferGeometry().copy(this);\n  },\n  copy: function (source) {\n    var index = source.index;\n\n    if (index !== null) {\n      this.setIndex(index.clone());\n    }\n\n    var attributes = source.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      this.addAttribute(name, attribute.clone());\n    }\n\n    var groups = source.groups;\n\n    for (var i = 0, l = groups.length; i < l; i++) {\n      var group = groups[i];\n      this.addGroup(group.start, group.count, group.materialIndex);\n    }\n\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\nTHREE.BufferGeometry.MaxIndex = 65535; // File:src/core/InstancedBufferGeometry.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\nTHREE.InstancedBufferGeometry = function () {\n  THREE.BufferGeometry.call(this);\n  this.type = 'InstancedBufferGeometry';\n  this.maxInstancedCount = undefined;\n};\n\nTHREE.InstancedBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\n\nTHREE.InstancedBufferGeometry.prototype.addGroup = function (start, count, instances) {\n  this.groups.push({\n    start: start,\n    count: count,\n    instances: instances\n  });\n};\n\nTHREE.InstancedBufferGeometry.prototype.copy = function (source) {\n  var index = source.index;\n\n  if (index !== null) {\n    this.setIndex(index.clone());\n  }\n\n  var attributes = source.attributes;\n\n  for (var name in attributes) {\n    var attribute = attributes[name];\n    this.addAttribute(name, attribute.clone());\n  }\n\n  var groups = source.groups;\n\n  for (var i = 0, l = groups.length; i < l; i++) {\n    var group = groups[i];\n    this.addGroup(group.start, group.count, group.instances);\n  }\n\n  return this;\n}; // File:src/core/Uniform.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.Uniform = function (value) {\n  if (typeof value === 'string') {\n    console.warn('THREE.Uniform: Type parameter is no longer needed.');\n    value = arguments[1];\n  }\n\n  this.value = value;\n  this.dynamic = false;\n};\n\nTHREE.Uniform.prototype = {\n  constructor: THREE.Uniform,\n  onUpdate: function (callback) {\n    this.dynamic = true;\n    this.onUpdateCallback = callback;\n    return this;\n  }\n}; // File:src/animation/AnimationAction.js\n\n/**\r\n *\r\n * Action provided by AnimationMixer for scheduling clip playback on specific\r\n * objects.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n *\r\n */\n\nTHREE.AnimationAction = function () {\n  throw new Error(\"THREE.AnimationAction: \" + \"Use mixer.clipAction for construction.\");\n};\n\nTHREE.AnimationAction._new = function AnimationAction(mixer, clip, localRoot) {\n  this._mixer = mixer;\n  this._clip = clip;\n  this._localRoot = localRoot || null;\n  var tracks = clip.tracks,\n      nTracks = tracks.length,\n      interpolants = new Array(nTracks);\n  var interpolantSettings = {\n    endingStart: THREE.ZeroCurvatureEnding,\n    endingEnd: THREE.ZeroCurvatureEnding\n  };\n\n  for (var i = 0; i !== nTracks; ++i) {\n    var interpolant = tracks[i].createInterpolant(null);\n    interpolants[i] = interpolant;\n    interpolant.settings = interpolantSettings;\n  }\n\n  this._interpolantSettings = interpolantSettings;\n  this._interpolants = interpolants; // bound by the mixer\n  // inside: PropertyMixer (managed by the mixer)\n\n  this._propertyBindings = new Array(nTracks);\n  this._cacheIndex = null; // for the memory manager\n\n  this._byClipCacheIndex = null; // for the memory manager\n\n  this._timeScaleInterpolant = null;\n  this._weightInterpolant = null;\n  this.loop = THREE.LoopRepeat;\n  this._loopCount = -1; // global mixer time when the action is to be started\n  // it's set back to 'null' upon start of the action\n\n  this._startTime = null; // scaled local time of the action\n  // gets clamped or wrapped to 0..clip.duration according to loop\n\n  this.time = 0;\n  this.timeScale = 1;\n  this._effectiveTimeScale = 1;\n  this.weight = 1;\n  this._effectiveWeight = 1;\n  this.repetitions = Infinity; // no. of repetitions when looping\n\n  this.paused = false; // false -> zero effective time scale\n\n  this.enabled = true; // true -> zero effective weight\n\n  this.clampWhenFinished = false; // keep feeding the last frame?\n\n  this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n  this.zeroSlopeAtEnd = true; // clips for start, loop and end\n};\n\nTHREE.AnimationAction._new.prototype = {\n  constructor: THREE.AnimationAction._new,\n  // State & Scheduling\n  play: function () {\n    this._mixer._activateAction(this);\n\n    return this;\n  },\n  stop: function () {\n    this._mixer._deactivateAction(this);\n\n    return this.reset();\n  },\n  reset: function () {\n    this.paused = false;\n    this.enabled = true;\n    this.time = 0; // restart clip\n\n    this._loopCount = -1; // forget previous loops\n\n    this._startTime = null; // forget scheduling\n\n    return this.stopFading().stopWarping();\n  },\n  isRunning: function () {\n    var start = this._startTime;\n    return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n  },\n  // return true when play has been called\n  isScheduled: function () {\n    return this._mixer._isActiveAction(this);\n  },\n  startAt: function (time) {\n    this._startTime = time;\n    return this;\n  },\n  setLoop: function (mode, repetitions) {\n    this.loop = mode;\n    this.repetitions = repetitions;\n    return this;\n  },\n  // Weight\n  // set the weight stopping any scheduled fading\n  // although .enabled = false yields an effective weight of zero, this\n  // method does *not* change .enabled, because it would be confusing\n  setEffectiveWeight: function (weight) {\n    this.weight = weight; // note: same logic as when updated at runtime\n\n    this._effectiveWeight = this.enabled ? weight : 0;\n    return this.stopFading();\n  },\n  // return the weight considering fading and .enabled\n  getEffectiveWeight: function () {\n    return this._effectiveWeight;\n  },\n  fadeIn: function (duration) {\n    return this._scheduleFading(duration, 0, 1);\n  },\n  fadeOut: function (duration) {\n    return this._scheduleFading(duration, 1, 0);\n  },\n  crossFadeFrom: function (fadeOutAction, duration, warp) {\n    var mixer = this._mixer;\n    fadeOutAction.fadeOut(duration);\n    this.fadeIn(duration);\n\n    if (warp) {\n      var fadeInDuration = this._clip.duration,\n          fadeOutDuration = fadeOutAction._clip.duration,\n          startEndRatio = fadeOutDuration / fadeInDuration,\n          endStartRatio = fadeInDuration / fadeOutDuration;\n      fadeOutAction.warp(1.0, startEndRatio, duration);\n      this.warp(endStartRatio, 1.0, duration);\n    }\n\n    return this;\n  },\n  crossFadeTo: function (fadeInAction, duration, warp) {\n    return fadeInAction.crossFadeFrom(this, duration, warp);\n  },\n  stopFading: function () {\n    var weightInterpolant = this._weightInterpolant;\n\n    if (weightInterpolant !== null) {\n      this._weightInterpolant = null;\n\n      this._mixer._takeBackControlInterpolant(weightInterpolant);\n    }\n\n    return this;\n  },\n  // Time Scale Control\n  // set the weight stopping any scheduled warping\n  // although .paused = true yields an effective time scale of zero, this\n  // method does *not* change .paused, because it would be confusing\n  setEffectiveTimeScale: function (timeScale) {\n    this.timeScale = timeScale;\n    this._effectiveTimeScale = this.paused ? 0 : timeScale;\n    return this.stopWarping();\n  },\n  // return the time scale considering warping and .paused\n  getEffectiveTimeScale: function () {\n    return this._effectiveTimeScale;\n  },\n  setDuration: function (duration) {\n    this.timeScale = this._clip.duration / duration;\n    return this.stopWarping();\n  },\n  syncWith: function (action) {\n    this.time = action.time;\n    this.timeScale = action.timeScale;\n    return this.stopWarping();\n  },\n  halt: function (duration) {\n    return this.warp(this._effectiveTimeScale, 0, duration);\n  },\n  warp: function (startTimeScale, endTimeScale, duration) {\n    var mixer = this._mixer,\n        now = mixer.time,\n        interpolant = this._timeScaleInterpolant,\n        timeScale = this.timeScale;\n\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant(), this._timeScaleInterpolant = interpolant;\n    }\n\n    var times = interpolant.parameterPositions,\n        values = interpolant.sampleValues;\n    times[0] = now;\n    times[1] = now + duration;\n    values[0] = startTimeScale / timeScale;\n    values[1] = endTimeScale / timeScale;\n    return this;\n  },\n  stopWarping: function () {\n    var timeScaleInterpolant = this._timeScaleInterpolant;\n\n    if (timeScaleInterpolant !== null) {\n      this._timeScaleInterpolant = null;\n\n      this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n    }\n\n    return this;\n  },\n  // Object Accessors\n  getMixer: function () {\n    return this._mixer;\n  },\n  getClip: function () {\n    return this._clip;\n  },\n  getRoot: function () {\n    return this._localRoot || this._mixer._root;\n  },\n  // Interna\n  _update: function (time, deltaTime, timeDirection, accuIndex) {\n    // called by the mixer\n    var startTime = this._startTime;\n\n    if (startTime !== null) {\n      // check for scheduled start of action\n      var timeRunning = (time - startTime) * timeDirection;\n\n      if (timeRunning < 0 || timeDirection === 0) {\n        return; // yet to come / don't decide when delta = 0\n      } // start\n\n\n      this._startTime = null; // unschedule\n\n      deltaTime = timeDirection * timeRunning;\n    } // apply time scale and advance time\n\n\n    deltaTime *= this._updateTimeScale(time);\n\n    var clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n    // an effective weight of 0\n\n\n    var weight = this._updateWeight(time);\n\n    if (weight > 0) {\n      var interpolants = this._interpolants;\n      var propertyMixers = this._propertyBindings;\n\n      for (var j = 0, m = interpolants.length; j !== m; ++j) {\n        interpolants[j].evaluate(clipTime);\n        propertyMixers[j].accumulate(accuIndex, weight);\n      }\n    }\n  },\n  _updateWeight: function (time) {\n    var weight = 0;\n\n    if (this.enabled) {\n      weight = this.weight;\n      var interpolant = this._weightInterpolant;\n\n      if (interpolant !== null) {\n        var interpolantValue = interpolant.evaluate(time)[0];\n        weight *= interpolantValue;\n\n        if (time > interpolant.parameterPositions[1]) {\n          this.stopFading();\n\n          if (interpolantValue === 0) {\n            // faded out, disable\n            this.enabled = false;\n          }\n        }\n      }\n    }\n\n    this._effectiveWeight = weight;\n    return weight;\n  },\n  _updateTimeScale: function (time) {\n    var timeScale = 0;\n\n    if (!this.paused) {\n      timeScale = this.timeScale;\n      var interpolant = this._timeScaleInterpolant;\n\n      if (interpolant !== null) {\n        var interpolantValue = interpolant.evaluate(time)[0];\n        timeScale *= interpolantValue;\n\n        if (time > interpolant.parameterPositions[1]) {\n          this.stopWarping();\n\n          if (timeScale === 0) {\n            // motion has halted, pause\n            this.paused = true;\n          } else {\n            // warp done - apply final time scale\n            this.timeScale = timeScale;\n          }\n        }\n      }\n    }\n\n    this._effectiveTimeScale = timeScale;\n    return timeScale;\n  },\n  _updateTime: function (deltaTime) {\n    var time = this.time + deltaTime;\n    if (deltaTime === 0) return time;\n    var duration = this._clip.duration,\n        loop = this.loop,\n        loopCount = this._loopCount;\n\n    if (loop === THREE.LoopOnce) {\n      if (loopCount === -1) {\n        // just started\n        this.loopCount = 0;\n\n        this._setEndings(true, true, false);\n      }\n\n      handle_stop: {\n        if (time >= duration) {\n          time = duration;\n        } else if (time < 0) {\n          time = 0;\n        } else break handle_stop;\n\n        if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\n        this._mixer.dispatchEvent({\n          type: 'finished',\n          action: this,\n          direction: deltaTime < 0 ? -1 : 1\n        });\n      }\n    } else {\n      // repetitive Repeat or PingPong\n      var pingPong = loop === THREE.LoopPingPong;\n\n      if (loopCount === -1) {\n        // just started\n        if (deltaTime >= 0) {\n          loopCount = 0;\n\n          this._setEndings(true, this.repetitions === 0, pingPong);\n        } else {\n          // when looping in reverse direction, the initial\n          // transition through zero counts as a repetition,\n          // so leave loopCount at -1\n          this._setEndings(this.repetitions === 0, true, pingPong);\n        }\n      }\n\n      if (time >= duration || time < 0) {\n        // wrap around\n        var loopDelta = Math.floor(time / duration); // signed\n\n        time -= duration * loopDelta;\n        loopCount += Math.abs(loopDelta);\n        var pending = this.repetitions - loopCount;\n\n        if (pending < 0) {\n          // have to stop (switch state, clamp time, fire event)\n          if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n          time = deltaTime > 0 ? duration : 0;\n\n          this._mixer.dispatchEvent({\n            type: 'finished',\n            action: this,\n            direction: deltaTime > 0 ? 1 : -1\n          });\n        } else {\n          // keep running\n          if (pending === 0) {\n            // entering the last round\n            var atStart = deltaTime < 0;\n\n            this._setEndings(atStart, !atStart, pingPong);\n          } else {\n            this._setEndings(false, false, pingPong);\n          }\n\n          this._loopCount = loopCount;\n\n          this._mixer.dispatchEvent({\n            type: 'loop',\n            action: this,\n            loopDelta: loopDelta\n          });\n        }\n      }\n\n      if (pingPong && (loopCount & 1) === 1) {\n        // invert time for the \"pong round\"\n        this.time = time;\n        return duration - time;\n      }\n    }\n\n    this.time = time;\n    return time;\n  },\n  _setEndings: function (atStart, atEnd, pingPong) {\n    var settings = this._interpolantSettings;\n\n    if (pingPong) {\n      settings.endingStart = THREE.ZeroSlopeEnding;\n      settings.endingEnd = THREE.ZeroSlopeEnding;\n    } else {\n      // assuming for LoopOnce atStart == atEnd == true\n      if (atStart) {\n        settings.endingStart = this.zeroSlopeAtStart ? THREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\n      } else {\n        settings.endingStart = THREE.WrapAroundEnding;\n      }\n\n      if (atEnd) {\n        settings.endingEnd = this.zeroSlopeAtEnd ? THREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\n      } else {\n        settings.endingEnd = THREE.WrapAroundEnding;\n      }\n    }\n  },\n  _scheduleFading: function (duration, weightNow, weightThen) {\n    var mixer = this._mixer,\n        now = mixer.time,\n        interpolant = this._weightInterpolant;\n\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant(), this._weightInterpolant = interpolant;\n    }\n\n    var times = interpolant.parameterPositions,\n        values = interpolant.sampleValues;\n    times[0] = now;\n    values[0] = weightNow;\n    times[1] = now + duration;\n    values[1] = weightThen;\n    return this;\n  }\n}; // File:src/animation/AnimationClip.js\n\n/**\r\n *\r\n * Reusable set of Tracks that represent an animation.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\n\nTHREE.AnimationClip = function (name, duration, tracks) {\n  this.name = name;\n  this.tracks = tracks;\n  this.duration = duration !== undefined ? duration : -1;\n  this.uuid = THREE.Math.generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n  if (this.duration < 0) {\n    this.resetDuration();\n  } // maybe only do these on demand, as doing them here could potentially slow down loading\n  // but leaving these here during development as this ensures a lot of testing of these functions\n\n\n  this.trim();\n  this.optimize();\n};\n\nTHREE.AnimationClip.prototype = {\n  constructor: THREE.AnimationClip,\n  resetDuration: function () {\n    var tracks = this.tracks,\n        duration = 0;\n\n    for (var i = 0, n = tracks.length; i !== n; ++i) {\n      var track = this.tracks[i];\n      duration = Math.max(duration, track.times[track.times.length - 1]);\n    }\n\n    this.duration = duration;\n  },\n  trim: function () {\n    for (var i = 0; i < this.tracks.length; i++) {\n      this.tracks[i].trim(0, this.duration);\n    }\n\n    return this;\n  },\n  optimize: function () {\n    for (var i = 0; i < this.tracks.length; i++) {\n      this.tracks[i].optimize();\n    }\n\n    return this;\n  }\n}; // Static methods:\n\nObject.assign(THREE.AnimationClip, {\n  parse: function (json) {\n    var tracks = [],\n        jsonTracks = json.tracks,\n        frameTime = 1.0 / (json.fps || 1.0);\n\n    for (var i = 0, n = jsonTracks.length; i !== n; ++i) {\n      tracks.push(THREE.KeyframeTrack.parse(jsonTracks[i]).scale(frameTime));\n    }\n\n    return new THREE.AnimationClip(json.name, json.duration, tracks);\n  },\n  toJSON: function (clip) {\n    var tracks = [],\n        clipTracks = clip.tracks;\n    var json = {\n      'name': clip.name,\n      'duration': clip.duration,\n      'tracks': tracks\n    };\n\n    for (var i = 0, n = clipTracks.length; i !== n; ++i) {\n      tracks.push(THREE.KeyframeTrack.toJSON(clipTracks[i]));\n    }\n\n    return json;\n  },\n  CreateFromMorphTargetSequence: function (name, morphTargetSequence, fps, noLoop) {\n    var numMorphTargets = morphTargetSequence.length;\n    var tracks = [];\n\n    for (var i = 0; i < numMorphTargets; i++) {\n      var times = [];\n      var values = [];\n      times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n      values.push(0, 1, 0);\n      var order = THREE.AnimationUtils.getKeyframeOrder(times);\n      times = THREE.AnimationUtils.sortedArray(times, 1, order);\n      values = THREE.AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n      // last frame as well for perfect loop.\n\n      if (!noLoop && times[0] === 0) {\n        times.push(numMorphTargets);\n        values.push(values[0]);\n      }\n\n      tracks.push(new THREE.NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n    }\n\n    return new THREE.AnimationClip(name, -1, tracks);\n  },\n  findByName: function (objectOrClipArray, name) {\n    var clipArray = objectOrClipArray;\n\n    if (!Array.isArray(objectOrClipArray)) {\n      var o = objectOrClipArray;\n      clipArray = o.geometry && o.geometry.animations || o.animations;\n    }\n\n    for (var i = 0; i < clipArray.length; i++) {\n      if (clipArray[i].name === name) {\n        return clipArray[i];\n      }\n    }\n\n    return null;\n  },\n  CreateClipsFromMorphTargetSequences: function (morphTargets, fps, noLoop) {\n    var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n    // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n    var pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n    // patterns like Walk_001, Walk_002, Run_001, Run_002\n\n    for (var i = 0, il = morphTargets.length; i < il; i++) {\n      var morphTarget = morphTargets[i];\n      var parts = morphTarget.name.match(pattern);\n\n      if (parts && parts.length > 1) {\n        var name = parts[1];\n        var animationMorphTargets = animationToMorphTargets[name];\n\n        if (!animationMorphTargets) {\n          animationToMorphTargets[name] = animationMorphTargets = [];\n        }\n\n        animationMorphTargets.push(morphTarget);\n      }\n    }\n\n    var clips = [];\n\n    for (var name in animationToMorphTargets) {\n      clips.push(THREE.AnimationClip.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n    }\n\n    return clips;\n  },\n  // parse the animation.hierarchy format\n  parseAnimation: function (animation, bones, nodeName) {\n    if (!animation) {\n      console.error(\"  no animation in JSONLoader data\");\n      return null;\n    }\n\n    var addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n      // only return track if there are actually keys.\n      if (animationKeys.length !== 0) {\n        var times = [];\n        var values = [];\n        THREE.AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n        if (times.length !== 0) {\n          destTracks.push(new trackType(trackName, times, values));\n        }\n      }\n    };\n\n    var tracks = [];\n    var clipName = animation.name || 'default'; // automatic length determination in AnimationClip.\n\n    var duration = animation.length || -1;\n    var fps = animation.fps || 30;\n    var hierarchyTracks = animation.hierarchy || [];\n\n    for (var h = 0; h < hierarchyTracks.length; h++) {\n      var animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n      if (!animationKeys || animationKeys.length === 0) continue; // process morph targets in a way exactly compatible\n      // with AnimationHandler.init( animation )\n\n      if (animationKeys[0].morphTargets) {\n        // figure out all morph targets used in this track\n        var morphTargetNames = {};\n\n        for (var k = 0; k < animationKeys.length; k++) {\n          if (animationKeys[k].morphTargets) {\n            for (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n              morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n            }\n          }\n        } // create a track for each morph target with all zero\n        // morphTargetInfluences except for the keys in which\n        // the morphTarget is named.\n\n\n        for (var morphTargetName in morphTargetNames) {\n          var times = [];\n          var values = [];\n\n          for (var m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n            var animationKey = animationKeys[k];\n            times.push(animationKey.time);\n            values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n          }\n\n          tracks.push(new THREE.NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n        }\n\n        duration = morphTargetNames.length * (fps || 1.0);\n      } else {\n        // ...assume skeletal animation\n        var boneName = '.bones[' + bones[h].name + ']';\n        addNonemptyTrack(THREE.VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n        addNonemptyTrack(THREE.QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n        addNonemptyTrack(THREE.VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n      }\n    }\n\n    if (tracks.length === 0) {\n      return null;\n    }\n\n    var clip = new THREE.AnimationClip(clipName, duration, tracks);\n    return clip;\n  }\n}); // File:src/animation/AnimationMixer.js\n\n/**\r\n *\r\n * Player for AnimationClips.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.AnimationMixer = function (root) {\n  this._root = root;\n\n  this._initMemoryManager();\n\n  this._accuIndex = 0;\n  this.time = 0;\n  this.timeScale = 1.0;\n};\n\nObject.assign(THREE.AnimationMixer.prototype, THREE.EventDispatcher.prototype, {\n  // return an action for a clip optionally using a custom root target\n  // object (this method allocates a lot of dynamic memory in case a\n  // previously unknown clip/root combination is specified)\n  clipAction: function (clip, optionalRoot) {\n    var root = optionalRoot || this._root,\n        rootUuid = root.uuid,\n        clipObject = typeof clip === 'string' ? THREE.AnimationClip.findByName(root, clip) : clip,\n        clipUuid = clipObject !== null ? clipObject.uuid : clip,\n        actionsForClip = this._actionsByClip[clipUuid],\n        prototypeAction = null;\n\n    if (actionsForClip !== undefined) {\n      var existingAction = actionsForClip.actionByRoot[rootUuid];\n\n      if (existingAction !== undefined) {\n        return existingAction;\n      } // we know the clip, so we don't have to parse all\n      // the bindings again but can just copy\n\n\n      prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n      if (clipObject === null) clipObject = prototypeAction._clip;\n    } // clip must be known when specified via string\n\n\n    if (clipObject === null) return null; // allocate all resources required to run it\n\n    var newAction = new THREE.AnimationMixer._Action(this, clipObject, optionalRoot);\n\n    this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n    this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n    return newAction;\n  },\n  // get an existing action\n  existingAction: function (clip, optionalRoot) {\n    var root = optionalRoot || this._root,\n        rootUuid = root.uuid,\n        clipObject = typeof clip === 'string' ? THREE.AnimationClip.findByName(root, clip) : clip,\n        clipUuid = clipObject ? clipObject.uuid : clip,\n        actionsForClip = this._actionsByClip[clipUuid];\n\n    if (actionsForClip !== undefined) {\n      return actionsForClip.actionByRoot[rootUuid] || null;\n    }\n\n    return null;\n  },\n  // deactivates all previously scheduled actions\n  stopAllAction: function () {\n    var actions = this._actions,\n        nActions = this._nActiveActions,\n        bindings = this._bindings,\n        nBindings = this._nActiveBindings;\n    this._nActiveActions = 0;\n    this._nActiveBindings = 0;\n\n    for (var i = 0; i !== nActions; ++i) {\n      actions[i].reset();\n    }\n\n    for (var i = 0; i !== nBindings; ++i) {\n      bindings[i].useCount = 0;\n    }\n\n    return this;\n  },\n  // advance the time and update apply the animation\n  update: function (deltaTime) {\n    deltaTime *= this.timeScale;\n    var actions = this._actions,\n        nActions = this._nActiveActions,\n        time = this.time += deltaTime,\n        timeDirection = Math.sign(deltaTime),\n        accuIndex = this._accuIndex ^= 1; // run active actions\n\n    for (var i = 0; i !== nActions; ++i) {\n      var action = actions[i];\n\n      if (action.enabled) {\n        action._update(time, deltaTime, timeDirection, accuIndex);\n      }\n    } // update scene graph\n\n\n    var bindings = this._bindings,\n        nBindings = this._nActiveBindings;\n\n    for (var i = 0; i !== nBindings; ++i) {\n      bindings[i].apply(accuIndex);\n    }\n\n    return this;\n  },\n  // return this mixer's root target object\n  getRoot: function () {\n    return this._root;\n  },\n  // free all resources specific to a particular clip\n  uncacheClip: function (clip) {\n    var actions = this._actions,\n        clipUuid = clip.uuid,\n        actionsByClip = this._actionsByClip,\n        actionsForClip = actionsByClip[clipUuid];\n\n    if (actionsForClip !== undefined) {\n      // note: just calling _removeInactiveAction would mess up the\n      // iteration state and also require updating the state we can\n      // just throw away\n      var actionsToRemove = actionsForClip.knownActions;\n\n      for (var i = 0, n = actionsToRemove.length; i !== n; ++i) {\n        var action = actionsToRemove[i];\n\n        this._deactivateAction(action);\n\n        var cacheIndex = action._cacheIndex,\n            lastInactiveAction = actions[actions.length - 1];\n        action._cacheIndex = null;\n        action._byClipCacheIndex = null;\n        lastInactiveAction._cacheIndex = cacheIndex;\n        actions[cacheIndex] = lastInactiveAction;\n        actions.pop();\n\n        this._removeInactiveBindingsForAction(action);\n      }\n\n      delete actionsByClip[clipUuid];\n    }\n  },\n  // free all resources specific to a particular root target object\n  uncacheRoot: function (root) {\n    var rootUuid = root.uuid,\n        actionsByClip = this._actionsByClip;\n\n    for (var clipUuid in actionsByClip) {\n      var actionByRoot = actionsByClip[clipUuid].actionByRoot,\n          action = actionByRoot[rootUuid];\n\n      if (action !== undefined) {\n        this._deactivateAction(action);\n\n        this._removeInactiveAction(action);\n      }\n    }\n\n    var bindingsByRoot = this._bindingsByRootAndName,\n        bindingByName = bindingsByRoot[rootUuid];\n\n    if (bindingByName !== undefined) {\n      for (var trackName in bindingByName) {\n        var binding = bindingByName[trackName];\n        binding.restoreOriginalState();\n\n        this._removeInactiveBinding(binding);\n      }\n    }\n  },\n  // remove a targeted clip from the cache\n  uncacheAction: function (clip, optionalRoot) {\n    var action = this.existingAction(clip, optionalRoot);\n\n    if (action !== null) {\n      this._deactivateAction(action);\n\n      this._removeInactiveAction(action);\n    }\n  }\n});\nTHREE.AnimationMixer._Action = THREE.AnimationAction._new; // Implementation details:\n\nObject.assign(THREE.AnimationMixer.prototype, {\n  _bindAction: function (action, prototypeAction) {\n    var root = action._localRoot || this._root,\n        tracks = action._clip.tracks,\n        nTracks = tracks.length,\n        bindings = action._propertyBindings,\n        interpolants = action._interpolants,\n        rootUuid = root.uuid,\n        bindingsByRoot = this._bindingsByRootAndName,\n        bindingsByName = bindingsByRoot[rootUuid];\n\n    if (bindingsByName === undefined) {\n      bindingsByName = {};\n      bindingsByRoot[rootUuid] = bindingsByName;\n    }\n\n    for (var i = 0; i !== nTracks; ++i) {\n      var track = tracks[i],\n          trackName = track.name,\n          binding = bindingsByName[trackName];\n\n      if (binding !== undefined) {\n        bindings[i] = binding;\n      } else {\n        binding = bindings[i];\n\n        if (binding !== undefined) {\n          // existing binding, make sure the cache knows\n          if (binding._cacheIndex === null) {\n            ++binding.referenceCount;\n\n            this._addInactiveBinding(binding, rootUuid, trackName);\n          }\n\n          continue;\n        }\n\n        var path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n        binding = new THREE.PropertyMixer(THREE.PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n        ++binding.referenceCount;\n\n        this._addInactiveBinding(binding, rootUuid, trackName);\n\n        bindings[i] = binding;\n      }\n\n      interpolants[i].resultBuffer = binding.buffer;\n    }\n  },\n  _activateAction: function (action) {\n    if (!this._isActiveAction(action)) {\n      if (action._cacheIndex === null) {\n        // this action has been forgotten by the cache, but the user\n        // appears to be still using it -> rebind\n        var rootUuid = (action._localRoot || this._root).uuid,\n            clipUuid = action._clip.uuid,\n            actionsForClip = this._actionsByClip[clipUuid];\n\n        this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n        this._addInactiveAction(action, clipUuid, rootUuid);\n      }\n\n      var bindings = action._propertyBindings; // increment reference counts / sort out state\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (binding.useCount++ === 0) {\n          this._lendBinding(binding);\n\n          binding.saveOriginalState();\n        }\n      }\n\n      this._lendAction(action);\n    }\n  },\n  _deactivateAction: function (action) {\n    if (this._isActiveAction(action)) {\n      var bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (--binding.useCount === 0) {\n          binding.restoreOriginalState();\n\n          this._takeBackBinding(binding);\n        }\n      }\n\n      this._takeBackAction(action);\n    }\n  },\n  // Memory manager\n  _initMemoryManager: function () {\n    this._actions = []; // 'nActiveActions' followed by inactive ones\n\n    this._nActiveActions = 0;\n    this._actionsByClip = {}; // inside:\n    // {\n    // \t\tknownActions: Array< _Action >\t- used as prototypes\n    // \t\tactionByRoot: _Action\t\t\t- lookup\n    // }\n\n    this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n    this._nActiveBindings = 0;\n    this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n    this._controlInterpolants = []; // same game as above\n\n    this._nActiveControlInterpolants = 0;\n    var scope = this;\n    this.stats = {\n      actions: {\n        get total() {\n          return scope._actions.length;\n        },\n\n        get inUse() {\n          return scope._nActiveActions;\n        }\n\n      },\n      bindings: {\n        get total() {\n          return scope._bindings.length;\n        },\n\n        get inUse() {\n          return scope._nActiveBindings;\n        }\n\n      },\n      controlInterpolants: {\n        get total() {\n          return scope._controlInterpolants.length;\n        },\n\n        get inUse() {\n          return scope._nActiveControlInterpolants;\n        }\n\n      }\n    };\n  },\n  // Memory management for _Action objects\n  _isActiveAction: function (action) {\n    var index = action._cacheIndex;\n    return index !== null && index < this._nActiveActions;\n  },\n  _addInactiveAction: function (action, clipUuid, rootUuid) {\n    var actions = this._actions,\n        actionsByClip = this._actionsByClip,\n        actionsForClip = actionsByClip[clipUuid];\n\n    if (actionsForClip === undefined) {\n      actionsForClip = {\n        knownActions: [action],\n        actionByRoot: {}\n      };\n      action._byClipCacheIndex = 0;\n      actionsByClip[clipUuid] = actionsForClip;\n    } else {\n      var knownActions = actionsForClip.knownActions;\n      action._byClipCacheIndex = knownActions.length;\n      knownActions.push(action);\n    }\n\n    action._cacheIndex = actions.length;\n    actions.push(action);\n    actionsForClip.actionByRoot[rootUuid] = action;\n  },\n  _removeInactiveAction: function (action) {\n    var actions = this._actions,\n        lastInactiveAction = actions[actions.length - 1],\n        cacheIndex = action._cacheIndex;\n    lastInactiveAction._cacheIndex = cacheIndex;\n    actions[cacheIndex] = lastInactiveAction;\n    actions.pop();\n    action._cacheIndex = null;\n    var clipUuid = action._clip.uuid,\n        actionsByClip = this._actionsByClip,\n        actionsForClip = actionsByClip[clipUuid],\n        knownActionsForClip = actionsForClip.knownActions,\n        lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n        byClipCacheIndex = action._byClipCacheIndex;\n    lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n    knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n    knownActionsForClip.pop();\n    action._byClipCacheIndex = null;\n    var actionByRoot = actionsForClip.actionByRoot,\n        rootUuid = (actions._localRoot || this._root).uuid;\n    delete actionByRoot[rootUuid];\n\n    if (knownActionsForClip.length === 0) {\n      delete actionsByClip[clipUuid];\n    }\n\n    this._removeInactiveBindingsForAction(action);\n  },\n  _removeInactiveBindingsForAction: function (action) {\n    var bindings = action._propertyBindings;\n\n    for (var i = 0, n = bindings.length; i !== n; ++i) {\n      var binding = bindings[i];\n\n      if (--binding.referenceCount === 0) {\n        this._removeInactiveBinding(binding);\n      }\n    }\n  },\n  _lendAction: function (action) {\n    // [ active actions |  inactive actions  ]\n    // [  active actions >| inactive actions ]\n    //                 s        a\n    //                  <-swap->\n    //                 a        s\n    var actions = this._actions,\n        prevIndex = action._cacheIndex,\n        lastActiveIndex = this._nActiveActions++,\n        firstInactiveAction = actions[lastActiveIndex];\n    action._cacheIndex = lastActiveIndex;\n    actions[lastActiveIndex] = action;\n    firstInactiveAction._cacheIndex = prevIndex;\n    actions[prevIndex] = firstInactiveAction;\n  },\n  _takeBackAction: function (action) {\n    // [  active actions  | inactive actions ]\n    // [ active actions |< inactive actions  ]\n    //        a        s\n    //         <-swap->\n    //        s        a\n    var actions = this._actions,\n        prevIndex = action._cacheIndex,\n        firstInactiveIndex = --this._nActiveActions,\n        lastActiveAction = actions[firstInactiveIndex];\n    action._cacheIndex = firstInactiveIndex;\n    actions[firstInactiveIndex] = action;\n    lastActiveAction._cacheIndex = prevIndex;\n    actions[prevIndex] = lastActiveAction;\n  },\n  // Memory management for PropertyMixer objects\n  _addInactiveBinding: function (binding, rootUuid, trackName) {\n    var bindingsByRoot = this._bindingsByRootAndName,\n        bindingByName = bindingsByRoot[rootUuid],\n        bindings = this._bindings;\n\n    if (bindingByName === undefined) {\n      bindingByName = {};\n      bindingsByRoot[rootUuid] = bindingByName;\n    }\n\n    bindingByName[trackName] = binding;\n    binding._cacheIndex = bindings.length;\n    bindings.push(binding);\n  },\n  _removeInactiveBinding: function (binding) {\n    var bindings = this._bindings,\n        propBinding = binding.binding,\n        rootUuid = propBinding.rootNode.uuid,\n        trackName = propBinding.path,\n        bindingsByRoot = this._bindingsByRootAndName,\n        bindingByName = bindingsByRoot[rootUuid],\n        lastInactiveBinding = bindings[bindings.length - 1],\n        cacheIndex = binding._cacheIndex;\n    lastInactiveBinding._cacheIndex = cacheIndex;\n    bindings[cacheIndex] = lastInactiveBinding;\n    bindings.pop();\n    delete bindingByName[trackName];\n\n    remove_empty_map: {\n      for (var _ in bindingByName) break remove_empty_map;\n\n      delete bindingsByRoot[rootUuid];\n    }\n  },\n  _lendBinding: function (binding) {\n    var bindings = this._bindings,\n        prevIndex = binding._cacheIndex,\n        lastActiveIndex = this._nActiveBindings++,\n        firstInactiveBinding = bindings[lastActiveIndex];\n    binding._cacheIndex = lastActiveIndex;\n    bindings[lastActiveIndex] = binding;\n    firstInactiveBinding._cacheIndex = prevIndex;\n    bindings[prevIndex] = firstInactiveBinding;\n  },\n  _takeBackBinding: function (binding) {\n    var bindings = this._bindings,\n        prevIndex = binding._cacheIndex,\n        firstInactiveIndex = --this._nActiveBindings,\n        lastActiveBinding = bindings[firstInactiveIndex];\n    binding._cacheIndex = firstInactiveIndex;\n    bindings[firstInactiveIndex] = binding;\n    lastActiveBinding._cacheIndex = prevIndex;\n    bindings[prevIndex] = lastActiveBinding;\n  },\n  // Memory management of Interpolants for weight and time scale\n  _lendControlInterpolant: function () {\n    var interpolants = this._controlInterpolants,\n        lastActiveIndex = this._nActiveControlInterpolants++,\n        interpolant = interpolants[lastActiveIndex];\n\n    if (interpolant === undefined) {\n      interpolant = new THREE.LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n      interpolant.__cacheIndex = lastActiveIndex;\n      interpolants[lastActiveIndex] = interpolant;\n    }\n\n    return interpolant;\n  },\n  _takeBackControlInterpolant: function (interpolant) {\n    var interpolants = this._controlInterpolants,\n        prevIndex = interpolant.__cacheIndex,\n        firstInactiveIndex = --this._nActiveControlInterpolants,\n        lastActiveInterpolant = interpolants[firstInactiveIndex];\n    interpolant.__cacheIndex = firstInactiveIndex;\n    interpolants[firstInactiveIndex] = interpolant;\n    lastActiveInterpolant.__cacheIndex = prevIndex;\n    interpolants[prevIndex] = lastActiveInterpolant;\n  },\n  _controlInterpolantsResultBuffer: new Float32Array(1)\n}); // File:src/animation/AnimationObjectGroup.js\n\n/**\r\n *\r\n * A group of objects that receives a shared animation state.\r\n *\r\n * Usage:\r\n *\r\n * \t-\tAdd objects you would otherwise pass as 'root' to the\r\n * \t\tconstructor or the .clipAction method of AnimationMixer.\r\n *\r\n * \t-\tInstead pass this object as 'root'.\r\n *\r\n * \t-\tYou can also add and remove objects later when the mixer\r\n * \t\tis running.\r\n *\r\n * Note:\r\n *\r\n *  \tObjects of this class appear as one object to the mixer,\r\n *  \tso cache control of the individual objects must be done\r\n *  \ton the group.\r\n *\r\n * Limitation:\r\n *\r\n * \t- \tThe animated properties must be compatible among the\r\n * \t\tall objects in the group.\r\n *\r\n *  -\tA single property can either be controlled through a\r\n *  \ttarget group or directly, but not both.\r\n *\r\n * @author tschw\r\n */\n\nTHREE.AnimationObjectGroup = function (var_args) {\n  this.uuid = THREE.Math.generateUUID(); // cached objects followed by the active ones\n\n  this._objects = Array.prototype.slice.call(arguments);\n  this.nCachedObjects_ = 0; // threshold\n  // note: read by PropertyBinding.Composite\n\n  var indices = {};\n  this._indicesByUUID = indices; // for bookkeeping\n\n  for (var i = 0, n = arguments.length; i !== n; ++i) {\n    indices[arguments[i].uuid] = i;\n  }\n\n  this._paths = []; // inside: string\n\n  this._parsedPaths = []; // inside: { we don't care, here }\n\n  this._bindings = []; // inside: Array< PropertyBinding >\n\n  this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n  var scope = this;\n  this.stats = {\n    objects: {\n      get total() {\n        return scope._objects.length;\n      },\n\n      get inUse() {\n        return this.total - scope.nCachedObjects_;\n      }\n\n    },\n\n    get bindingsPerObject() {\n      return scope._bindings.length;\n    }\n\n  };\n};\n\nTHREE.AnimationObjectGroup.prototype = {\n  constructor: THREE.AnimationObjectGroup,\n  add: function (var_args) {\n    var objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        indicesByUUID = this._indicesByUUID,\n        paths = this._paths,\n        parsedPaths = this._parsedPaths,\n        bindings = this._bindings,\n        nBindings = bindings.length;\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      var object = arguments[i],\n          uuid = object.uuid,\n          index = indicesByUUID[uuid];\n\n      if (index === undefined) {\n        // unknown object -> add it to the ACTIVE region\n        index = nObjects++;\n        indicesByUUID[uuid] = index;\n        objects.push(object); // accounting is done, now do the same for all bindings\n\n        for (var j = 0, m = nBindings; j !== m; ++j) {\n          bindings[j].push(new THREE.PropertyBinding(object, paths[j], parsedPaths[j]));\n        }\n      } else if (index < nCachedObjects) {\n        var knownObject = objects[index]; // move existing object to the ACTIVE region\n\n        var firstActiveIndex = --nCachedObjects,\n            lastCachedObject = objects[firstActiveIndex];\n        indicesByUUID[lastCachedObject.uuid] = index;\n        objects[index] = lastCachedObject;\n        indicesByUUID[uuid] = firstActiveIndex;\n        objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n        for (var j = 0, m = nBindings; j !== m; ++j) {\n          var bindingsForPath = bindings[j],\n              lastCached = bindingsForPath[firstActiveIndex],\n              binding = bindingsForPath[index];\n          bindingsForPath[index] = lastCached;\n\n          if (binding === undefined) {\n            // since we do not bother to create new bindings\n            // for objects that are cached, the binding may\n            // or may not exist\n            binding = new THREE.PropertyBinding(object, paths[j], parsedPaths[j]);\n          }\n\n          bindingsForPath[firstActiveIndex] = binding;\n        }\n      } else if (objects[index] !== knownObject) {\n        console.error(\"Different objects with the same UUID \" + \"detected. Clean the caches or recreate your \" + \"infrastructure when reloading scenes...\");\n      } // else the object is already where we want it to be\n\n    } // for arguments\n\n\n    this.nCachedObjects_ = nCachedObjects;\n  },\n  remove: function (var_args) {\n    var objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        indicesByUUID = this._indicesByUUID,\n        bindings = this._bindings,\n        nBindings = bindings.length;\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      var object = arguments[i],\n          uuid = object.uuid,\n          index = indicesByUUID[uuid];\n\n      if (index !== undefined && index >= nCachedObjects) {\n        // move existing object into the CACHED region\n        var lastCachedIndex = nCachedObjects++,\n            firstActiveObject = objects[lastCachedIndex];\n        indicesByUUID[firstActiveObject.uuid] = index;\n        objects[index] = firstActiveObject;\n        indicesByUUID[uuid] = lastCachedIndex;\n        objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n        for (var j = 0, m = nBindings; j !== m; ++j) {\n          var bindingsForPath = bindings[j],\n              firstActive = bindingsForPath[lastCachedIndex],\n              binding = bindingsForPath[index];\n          bindingsForPath[index] = firstActive;\n          bindingsForPath[lastCachedIndex] = binding;\n        }\n      }\n    } // for arguments\n\n\n    this.nCachedObjects_ = nCachedObjects;\n  },\n  // remove & forget\n  uncache: function (var_args) {\n    var objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        indicesByUUID = this._indicesByUUID,\n        bindings = this._bindings,\n        nBindings = bindings.length;\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      var object = arguments[i],\n          uuid = object.uuid,\n          index = indicesByUUID[uuid];\n\n      if (index !== undefined) {\n        delete indicesByUUID[uuid];\n\n        if (index < nCachedObjects) {\n          // object is cached, shrink the CACHED region\n          var firstActiveIndex = --nCachedObjects,\n              lastCachedObject = objects[firstActiveIndex],\n              lastIndex = --nObjects,\n              lastObject = objects[lastIndex]; // last cached object takes this object's place\n\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n          indicesByUUID[lastObject.uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = lastObject;\n          objects.pop(); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                lastCached = bindingsForPath[firstActiveIndex],\n                last = bindingsForPath[lastIndex];\n            bindingsForPath[index] = lastCached;\n            bindingsForPath[firstActiveIndex] = last;\n            bindingsForPath.pop();\n          }\n        } else {\n          // object is active, just swap with the last and pop\n          var lastIndex = --nObjects,\n              lastObject = objects[lastIndex];\n          indicesByUUID[lastObject.uuid] = index;\n          objects[index] = lastObject;\n          objects.pop(); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j];\n            bindingsForPath[index] = bindingsForPath[lastIndex];\n            bindingsForPath.pop();\n          }\n        } // cached or active\n\n      } // if object is known\n\n    } // for arguments\n\n\n    this.nCachedObjects_ = nCachedObjects;\n  },\n  // Internal interface used by befriended PropertyBinding.Composite:\n  subscribe_: function (path, parsedPath) {\n    // returns an array of bindings for the given path that is changed\n    // according to the contained objects in the group\n    var indicesByPath = this._bindingsIndicesByPath,\n        index = indicesByPath[path],\n        bindings = this._bindings;\n    if (index !== undefined) return bindings[index];\n    var paths = this._paths,\n        parsedPaths = this._parsedPaths,\n        objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        bindingsForPath = new Array(nObjects);\n    index = bindings.length;\n    indicesByPath[path] = index;\n    paths.push(path);\n    parsedPaths.push(parsedPath);\n    bindings.push(bindingsForPath);\n\n    for (var i = nCachedObjects, n = objects.length; i !== n; ++i) {\n      var object = objects[i];\n      bindingsForPath[i] = new THREE.PropertyBinding(object, path, parsedPath);\n    }\n\n    return bindingsForPath;\n  },\n  unsubscribe_: function (path) {\n    // tells the group to forget about a property path and no longer\n    // update the array previously obtained with 'subscribe_'\n    var indicesByPath = this._bindingsIndicesByPath,\n        index = indicesByPath[path];\n\n    if (index !== undefined) {\n      var paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          bindings = this._bindings,\n          lastBindingsIndex = bindings.length - 1,\n          lastBindings = bindings[lastBindingsIndex],\n          lastBindingsPath = path[lastBindingsIndex];\n      indicesByPath[lastBindingsPath] = index;\n      bindings[index] = lastBindings;\n      bindings.pop();\n      parsedPaths[index] = parsedPaths[lastBindingsIndex];\n      parsedPaths.pop();\n      paths[index] = paths[lastBindingsIndex];\n      paths.pop();\n    }\n  }\n}; // File:src/animation/AnimationUtils.js\n\n/**\r\n * @author tschw\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\n\nTHREE.AnimationUtils = {\n  // same as Array.prototype.slice, but also works on typed arrays\n  arraySlice: function (array, from, to) {\n    if (THREE.AnimationUtils.isTypedArray(array)) {\n      return new array.constructor(array.subarray(from, to));\n    }\n\n    return array.slice(from, to);\n  },\n  // converts an array to a specific type\n  convertArray: function (array, type, forceClone) {\n    if (!array || // let 'undefined' and 'null' pass\n    !forceClone && array.constructor === type) return array;\n\n    if (typeof type.BYTES_PER_ELEMENT === 'number') {\n      return new type(array); // create typed array\n    }\n\n    return Array.prototype.slice.call(array); // create Array\n  },\n  isTypedArray: function (object) {\n    return ArrayBuffer.isView(object) && !(object instanceof DataView);\n  },\n  // returns an array by which times and values can be sorted\n  getKeyframeOrder: function (times) {\n    function compareTime(i, j) {\n      return times[i] - times[j];\n    }\n\n    var n = times.length;\n    var result = new Array(n);\n\n    for (var i = 0; i !== n; ++i) result[i] = i;\n\n    result.sort(compareTime);\n    return result;\n  },\n  // uses the array previously returned by 'getKeyframeOrder' to sort data\n  sortedArray: function (values, stride, order) {\n    var nValues = values.length;\n    var result = new values.constructor(nValues);\n\n    for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n      var srcOffset = order[i] * stride;\n\n      for (var j = 0; j !== stride; ++j) {\n        result[dstOffset++] = values[srcOffset + j];\n      }\n    }\n\n    return result;\n  },\n  // function for parsing AOS keyframe formats\n  flattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n    var i = 1,\n        key = jsonKeys[0];\n\n    while (key !== undefined && key[valuePropertyName] === undefined) {\n      key = jsonKeys[i++];\n    }\n\n    if (key === undefined) return; // no data\n\n    var value = key[valuePropertyName];\n    if (value === undefined) return; // no data\n\n    if (Array.isArray(value)) {\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push.apply(values, value); // push all elements\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else if (value.toArray !== undefined) {\n      // ...assume THREE.Math-ish\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          value.toArray(values, values.length);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else {\n      // otherwise push as-is\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push(value);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    }\n  }\n}; // File:src/animation/KeyframeTrack.js\n\n/**\r\n *\r\n * A timed sequence of keyframes for a specific property.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.KeyframeTrack = function (name, times, values, interpolation) {\n  if (name === undefined) throw new Error(\"track name is undefined\");\n\n  if (times === undefined || times.length === 0) {\n    throw new Error(\"no keyframes in track named \" + name);\n  }\n\n  this.name = name;\n  this.times = THREE.AnimationUtils.convertArray(times, this.TimeBufferType);\n  this.values = THREE.AnimationUtils.convertArray(values, this.ValueBufferType);\n  this.setInterpolation(interpolation || this.DefaultInterpolation);\n  this.validate();\n  this.optimize();\n};\n\nTHREE.KeyframeTrack.prototype = {\n  constructor: THREE.KeyframeTrack,\n  TimeBufferType: Float32Array,\n  ValueBufferType: Float32Array,\n  DefaultInterpolation: THREE.InterpolateLinear,\n  InterpolantFactoryMethodDiscrete: function (result) {\n    return new THREE.DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodLinear: function (result) {\n    return new THREE.LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodSmooth: function (result) {\n    return new THREE.CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  setInterpolation: function (interpolation) {\n    var factoryMethod;\n\n    switch (interpolation) {\n      case THREE.InterpolateDiscrete:\n        factoryMethod = this.InterpolantFactoryMethodDiscrete;\n        break;\n\n      case THREE.InterpolateLinear:\n        factoryMethod = this.InterpolantFactoryMethodLinear;\n        break;\n\n      case THREE.InterpolateSmooth:\n        factoryMethod = this.InterpolantFactoryMethodSmooth;\n        break;\n    }\n\n    if (factoryMethod === undefined) {\n      var message = \"unsupported interpolation for \" + this.ValueTypeName + \" keyframe track named \" + this.name;\n\n      if (this.createInterpolant === undefined) {\n        // fall back to default, unless the default itself is messed up\n        if (interpolation !== this.DefaultInterpolation) {\n          this.setInterpolation(this.DefaultInterpolation);\n        } else {\n          throw new Error(message); // fatal, in this case\n        }\n      }\n\n      console.warn(message);\n      return;\n    }\n\n    this.createInterpolant = factoryMethod;\n  },\n  getInterpolation: function () {\n    switch (this.createInterpolant) {\n      case this.InterpolantFactoryMethodDiscrete:\n        return THREE.InterpolateDiscrete;\n\n      case this.InterpolantFactoryMethodLinear:\n        return THREE.InterpolateLinear;\n\n      case this.InterpolantFactoryMethodSmooth:\n        return THREE.InterpolateSmooth;\n    }\n  },\n  getValueSize: function () {\n    return this.values.length / this.times.length;\n  },\n  // move all keyframes either forwards or backwards in time\n  shift: function (timeOffset) {\n    if (timeOffset !== 0.0) {\n      var times = this.times;\n\n      for (var i = 0, n = times.length; i !== n; ++i) {\n        times[i] += timeOffset;\n      }\n    }\n\n    return this;\n  },\n  // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n  scale: function (timeScale) {\n    if (timeScale !== 1.0) {\n      var times = this.times;\n\n      for (var i = 0, n = times.length; i !== n; ++i) {\n        times[i] *= timeScale;\n      }\n    }\n\n    return this;\n  },\n  // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n  // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n  trim: function (startTime, endTime) {\n    var times = this.times,\n        nKeys = times.length,\n        from = 0,\n        to = nKeys - 1;\n\n    while (from !== nKeys && times[from] < startTime) ++from;\n\n    while (to !== -1 && times[to] > endTime) --to;\n\n    ++to; // inclusive -> exclusive bound\n\n    if (from !== 0 || to !== nKeys) {\n      // empty tracks are forbidden, so keep at least one keyframe\n      if (from >= to) to = Math.max(to, 1), from = to - 1;\n      var stride = this.getValueSize();\n      this.times = THREE.AnimationUtils.arraySlice(times, from, to);\n      this.values = THREE.AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n    }\n\n    return this;\n  },\n  // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n  validate: function () {\n    var valid = true;\n    var valueSize = this.getValueSize();\n\n    if (valueSize - Math.floor(valueSize) !== 0) {\n      console.error(\"invalid value size in track\", this);\n      valid = false;\n    }\n\n    var times = this.times,\n        values = this.values,\n        nKeys = times.length;\n\n    if (nKeys === 0) {\n      console.error(\"track is empty\", this);\n      valid = false;\n    }\n\n    var prevTime = null;\n\n    for (var i = 0; i !== nKeys; i++) {\n      var currTime = times[i];\n\n      if (typeof currTime === 'number' && isNaN(currTime)) {\n        console.error(\"time is not a valid number\", this, i, currTime);\n        valid = false;\n        break;\n      }\n\n      if (prevTime !== null && prevTime > currTime) {\n        console.error(\"out of order keys\", this, i, currTime, prevTime);\n        valid = false;\n        break;\n      }\n\n      prevTime = currTime;\n    }\n\n    if (values !== undefined) {\n      if (THREE.AnimationUtils.isTypedArray(values)) {\n        for (var i = 0, n = values.length; i !== n; ++i) {\n          var value = values[i];\n\n          if (isNaN(value)) {\n            console.error(\"value is not a valid number\", this, i, value);\n            valid = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return valid;\n  },\n  // removes equivalent sequential keys as common in morph target sequences\n  // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n  optimize: function () {\n    var times = this.times,\n        values = this.values,\n        stride = this.getValueSize(),\n        writeIndex = 1;\n\n    for (var i = 1, n = times.length - 1; i <= n; ++i) {\n      var keep = false;\n      var time = times[i];\n      var timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n      if (time !== timeNext && (i !== 1 || time !== time[0])) {\n        // remove unnecessary keyframes same as their neighbors\n        var offset = i * stride,\n            offsetP = offset - stride,\n            offsetN = offset + stride;\n\n        for (var j = 0; j !== stride; ++j) {\n          var value = values[offset + j];\n\n          if (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n            keep = true;\n            break;\n          }\n        }\n      } // in-place compaction\n\n\n      if (keep) {\n        if (i !== writeIndex) {\n          times[writeIndex] = times[i];\n          var readOffset = i * stride,\n              writeOffset = writeIndex * stride;\n\n          for (var j = 0; j !== stride; ++j) {\n            values[writeOffset + j] = values[readOffset + j];\n          }\n        }\n\n        ++writeIndex;\n      }\n    }\n\n    if (writeIndex !== times.length) {\n      this.times = THREE.AnimationUtils.arraySlice(times, 0, writeIndex);\n      this.values = THREE.AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n    }\n\n    return this;\n  }\n}; // Static methods:\n\nObject.assign(THREE.KeyframeTrack, {\n  // Serialization (in static context, because of constructor invocation\n  // and automatic invocation of .toJSON):\n  parse: function (json) {\n    if (json.type === undefined) {\n      throw new Error(\"track type undefined, can not parse\");\n    }\n\n    var trackType = THREE.KeyframeTrack._getTrackTypeForValueTypeName(json.type);\n\n    if (json.times === undefined) {\n      var times = [],\n          values = [];\n      THREE.AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n      json.times = times;\n      json.values = values;\n    } // derived classes can define a static parse method\n\n\n    if (trackType.parse !== undefined) {\n      return trackType.parse(json);\n    } else {\n      // by default, we asssume a constructor compatible with the base\n      return new trackType(json.name, json.times, json.values, json.interpolation);\n    }\n  },\n  toJSON: function (track) {\n    var trackType = track.constructor;\n    var json; // derived classes can define a static toJSON method\n\n    if (trackType.toJSON !== undefined) {\n      json = trackType.toJSON(track);\n    } else {\n      // by default, we assume the data can be serialized as-is\n      json = {\n        'name': track.name,\n        'times': THREE.AnimationUtils.convertArray(track.times, Array),\n        'values': THREE.AnimationUtils.convertArray(track.values, Array)\n      };\n      var interpolation = track.getInterpolation();\n\n      if (interpolation !== track.DefaultInterpolation) {\n        json.interpolation = interpolation;\n      }\n    }\n\n    json.type = track.ValueTypeName; // mandatory\n\n    return json;\n  },\n  _getTrackTypeForValueTypeName: function (typeName) {\n    switch (typeName.toLowerCase()) {\n      case \"scalar\":\n      case \"double\":\n      case \"float\":\n      case \"number\":\n      case \"integer\":\n        return THREE.NumberKeyframeTrack;\n\n      case \"vector\":\n      case \"vector2\":\n      case \"vector3\":\n      case \"vector4\":\n        return THREE.VectorKeyframeTrack;\n\n      case \"color\":\n        return THREE.ColorKeyframeTrack;\n\n      case \"quaternion\":\n        return THREE.QuaternionKeyframeTrack;\n\n      case \"bool\":\n      case \"boolean\":\n        return THREE.BooleanKeyframeTrack;\n\n      case \"string\":\n        return THREE.StringKeyframeTrack;\n    }\n\n    throw new Error(\"Unsupported typeName: \" + typeName);\n  }\n}); // File:src/animation/PropertyBinding.js\n\n/**\r\n *\r\n * A reference to a real property in the scene graph.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.PropertyBinding = function (rootNode, path, parsedPath) {\n  this.path = path;\n  this.parsedPath = parsedPath || THREE.PropertyBinding.parseTrackName(path);\n  this.node = THREE.PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n  this.rootNode = rootNode;\n};\n\nTHREE.PropertyBinding.prototype = {\n  constructor: THREE.PropertyBinding,\n  getValue: function getValue_unbound(targetArray, offset) {\n    this.bind();\n    this.getValue(targetArray, offset); // Note: This class uses a State pattern on a per-method basis:\n    // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n    // prototype version of these methods with one that represents\n    // the bound state. When the property is not found, the methods\n    // become no-ops.\n  },\n  setValue: function getValue_unbound(sourceArray, offset) {\n    this.bind();\n    this.setValue(sourceArray, offset);\n  },\n  // create getter / setter pair for a property in the scene graph\n  bind: function () {\n    var targetObject = this.node,\n        parsedPath = this.parsedPath,\n        objectName = parsedPath.objectName,\n        propertyName = parsedPath.propertyName,\n        propertyIndex = parsedPath.propertyIndex;\n\n    if (!targetObject) {\n      targetObject = THREE.PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n      this.node = targetObject;\n    } // set fail state so we can just 'return' on error\n\n\n    this.getValue = this._getValue_unavailable;\n    this.setValue = this._setValue_unavailable; // ensure there is a value node\n\n    if (!targetObject) {\n      console.error(\"  trying to update node for track: \" + this.path + \" but it wasn't found.\");\n      return;\n    }\n\n    if (objectName) {\n      var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n      switch (objectName) {\n        case 'materials':\n          if (!targetObject.material) {\n            console.error('  can not bind to material as node does not have a material', this);\n            return;\n          }\n\n          if (!targetObject.material.materials) {\n            console.error('  can not bind to material.materials as node.material does not have a materials array', this);\n            return;\n          }\n\n          targetObject = targetObject.material.materials;\n          break;\n\n        case 'bones':\n          if (!targetObject.skeleton) {\n            console.error('  can not bind to bones as node does not have a skeleton', this);\n            return;\n          } // potential future optimization: skip this if propertyIndex is already an integer\n          // and convert the integer string to a true integer.\n\n\n          targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n          for (var i = 0; i < targetObject.length; i++) {\n            if (targetObject[i].name === objectIndex) {\n              objectIndex = i;\n              break;\n            }\n          }\n\n          break;\n\n        default:\n          if (targetObject[objectName] === undefined) {\n            console.error('  can not bind to objectName of node, undefined', this);\n            return;\n          }\n\n          targetObject = targetObject[objectName];\n      }\n\n      if (objectIndex !== undefined) {\n        if (targetObject[objectIndex] === undefined) {\n          console.error(\"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject);\n          return;\n        }\n\n        targetObject = targetObject[objectIndex];\n      }\n    } // resolve property\n\n\n    var nodeProperty = targetObject[propertyName];\n\n    if (!nodeProperty) {\n      var nodeName = parsedPath.nodeName;\n      console.error(\"  trying to update property for track: \" + nodeName + '.' + propertyName + \" but it wasn't found.\", targetObject);\n      return;\n    } // determine versioning scheme\n\n\n    var versioning = this.Versioning.None;\n\n    if (targetObject.needsUpdate !== undefined) {\n      // material\n      versioning = this.Versioning.NeedsUpdate;\n      this.targetObject = targetObject;\n    } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n      // node transform\n      versioning = this.Versioning.MatrixWorldNeedsUpdate;\n      this.targetObject = targetObject;\n    } // determine how the property gets bound\n\n\n    var bindingType = this.BindingType.Direct;\n\n    if (propertyIndex !== undefined) {\n      // access a sub element of the property array (only primitives are supported right now)\n      if (propertyName === \"morphTargetInfluences\") {\n        // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n        // support resolving morphTarget names into indices.\n        if (!targetObject.geometry) {\n          console.error('  can not bind to morphTargetInfluences becasuse node does not have a geometry', this);\n          return;\n        }\n\n        if (!targetObject.geometry.morphTargets) {\n          console.error('  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this);\n          return;\n        }\n\n        for (var i = 0; i < this.node.geometry.morphTargets.length; i++) {\n          if (targetObject.geometry.morphTargets[i].name === propertyIndex) {\n            propertyIndex = i;\n            break;\n          }\n        }\n      }\n\n      bindingType = this.BindingType.ArrayElement;\n      this.resolvedProperty = nodeProperty;\n      this.propertyIndex = propertyIndex;\n    } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n      // must use copy for Object3D.Euler/Quaternion\n      bindingType = this.BindingType.HasFromToArray;\n      this.resolvedProperty = nodeProperty;\n    } else if (nodeProperty.length !== undefined) {\n      bindingType = this.BindingType.EntireArray;\n      this.resolvedProperty = nodeProperty;\n    } else {\n      this.propertyName = propertyName;\n    } // select getter / setter\n\n\n    this.getValue = this.GetterByBindingType[bindingType];\n    this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n  },\n  unbind: function () {\n    this.node = null; // back to the prototype version of getValue / setValue\n    // note: avoiding to mutate the shape of 'this' via 'delete'\n\n    this.getValue = this._getValue_unbound;\n    this.setValue = this._setValue_unbound;\n  }\n};\nObject.assign(THREE.PropertyBinding.prototype, {\n  // prototype, continued\n  // these are used to \"bind\" a nonexistent property\n  _getValue_unavailable: function () {},\n  _setValue_unavailable: function () {},\n  // initial state of these methods that calls 'bind'\n  _getValue_unbound: THREE.PropertyBinding.prototype.getValue,\n  _setValue_unbound: THREE.PropertyBinding.prototype.setValue,\n  BindingType: {\n    Direct: 0,\n    EntireArray: 1,\n    ArrayElement: 2,\n    HasFromToArray: 3\n  },\n  Versioning: {\n    None: 0,\n    NeedsUpdate: 1,\n    MatrixWorldNeedsUpdate: 2\n  },\n  GetterByBindingType: [function getValue_direct(buffer, offset) {\n    buffer[offset] = this.node[this.propertyName];\n  }, function getValue_array(buffer, offset) {\n    var source = this.resolvedProperty;\n\n    for (var i = 0, n = source.length; i !== n; ++i) {\n      buffer[offset++] = source[i];\n    }\n  }, function getValue_arrayElement(buffer, offset) {\n    buffer[offset] = this.resolvedProperty[this.propertyIndex];\n  }, function getValue_toArray(buffer, offset) {\n    this.resolvedProperty.toArray(buffer, offset);\n  }],\n  SetterByBindingTypeAndVersioning: [[// Direct\n  function setValue_direct(buffer, offset) {\n    this.node[this.propertyName] = buffer[offset];\n  }, function setValue_direct_setNeedsUpdate(buffer, offset) {\n    this.node[this.propertyName] = buffer[offset];\n    this.targetObject.needsUpdate = true;\n  }, function setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.node[this.propertyName] = buffer[offset];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }], [// EntireArray\n  function setValue_array(buffer, offset) {\n    var dest = this.resolvedProperty;\n\n    for (var i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n  }, function setValue_array_setNeedsUpdate(buffer, offset) {\n    var dest = this.resolvedProperty;\n\n    for (var i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n\n    this.targetObject.needsUpdate = true;\n  }, function setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n    var dest = this.resolvedProperty;\n\n    for (var i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }], [// ArrayElement\n  function setValue_arrayElement(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n  }, function setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    this.targetObject.needsUpdate = true;\n  }, function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }], [// HasToFromArray\n  function setValue_fromArray(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n  }, function setValue_fromArray_setNeedsUpdate(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.needsUpdate = true;\n  }, function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }]]\n});\n\nTHREE.PropertyBinding.Composite = function (targetGroup, path, optionalParsedPath) {\n  var parsedPath = optionalParsedPath || THREE.PropertyBinding.parseTrackName(path);\n  this._targetGroup = targetGroup;\n  this._bindings = targetGroup.subscribe_(path, parsedPath);\n};\n\nTHREE.PropertyBinding.Composite.prototype = {\n  constructor: THREE.PropertyBinding.Composite,\n  getValue: function (array, offset) {\n    this.bind(); // bind all binding\n\n    var firstValidIndex = this._targetGroup.nCachedObjects_,\n        binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n    if (binding !== undefined) binding.getValue(array, offset);\n  },\n  setValue: function (array, offset) {\n    var bindings = this._bindings;\n\n    for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].setValue(array, offset);\n    }\n  },\n  bind: function () {\n    var bindings = this._bindings;\n\n    for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].bind();\n    }\n  },\n  unbind: function () {\n    var bindings = this._bindings;\n\n    for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].unbind();\n    }\n  }\n};\n\nTHREE.PropertyBinding.create = function (root, path, parsedPath) {\n  if (!(root instanceof THREE.AnimationObjectGroup)) {\n    return new THREE.PropertyBinding(root, path, parsedPath);\n  } else {\n    return new THREE.PropertyBinding.Composite(root, path, parsedPath);\n  }\n};\n\nTHREE.PropertyBinding.parseTrackName = function (trackName) {\n  // matches strings in the form of:\n  //    nodeName.property\n  //    nodeName.property[accessor]\n  //    nodeName.material.property[accessor]\n  //    uuid.property[accessor]\n  //    uuid.objectName[objectIndex].propertyName[propertyIndex]\n  //    parentName/nodeName.property\n  //    parentName/parentName/nodeName.property[index]\n  //\t  .bone[Armature.DEF_cog].position\n  // created and tested via https://regex101.com/#javascript\n  var re = /^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/;\n  var matches = re.exec(trackName);\n\n  if (!matches) {\n    throw new Error(\"cannot parse trackName at all: \" + trackName);\n  }\n\n  if (matches.index === re.lastIndex) {\n    re.lastIndex++;\n  }\n\n  var results = {\n    // directoryName: matches[1], // (tschw) currently unused\n    nodeName: matches[3],\n    // allowed to be null, specified root node.\n    objectName: matches[5],\n    objectIndex: matches[7],\n    propertyName: matches[9],\n    propertyIndex: matches[11] // allowed to be null, specifies that the whole property is set.\n\n  };\n\n  if (results.propertyName === null || results.propertyName.length === 0) {\n    throw new Error(\"can not parse propertyName from trackName: \" + trackName);\n  }\n\n  return results;\n};\n\nTHREE.PropertyBinding.findNode = function (root, nodeName) {\n  if (!nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n    return root;\n  } // search into skeleton bones.\n\n\n  if (root.skeleton) {\n    var searchSkeleton = function (skeleton) {\n      for (var i = 0; i < skeleton.bones.length; i++) {\n        var bone = skeleton.bones[i];\n\n        if (bone.name === nodeName) {\n          return bone;\n        }\n      }\n\n      return null;\n    };\n\n    var bone = searchSkeleton(root.skeleton);\n\n    if (bone) {\n      return bone;\n    }\n  } // search into node subtree.\n\n\n  if (root.children) {\n    var searchNodeSubtree = function (children) {\n      for (var i = 0; i < children.length; i++) {\n        var childNode = children[i];\n\n        if (childNode.name === nodeName || childNode.uuid === nodeName) {\n          return childNode;\n        }\n\n        var result = searchNodeSubtree(childNode.children);\n        if (result) return result;\n      }\n\n      return null;\n    };\n\n    var subTreeNode = searchNodeSubtree(root.children);\n\n    if (subTreeNode) {\n      return subTreeNode;\n    }\n  }\n\n  return null;\n}; // File:src/animation/PropertyMixer.js\n\n/**\r\n *\r\n * Buffered scene graph property that allows weighted accumulation.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\n\nTHREE.PropertyMixer = function (binding, typeName, valueSize) {\n  this.binding = binding;\n  this.valueSize = valueSize;\n  var bufferType = Float64Array,\n      mixFunction;\n\n  switch (typeName) {\n    case 'quaternion':\n      mixFunction = this._slerp;\n      break;\n\n    case 'string':\n    case 'bool':\n      bufferType = Array, mixFunction = this._select;\n      break;\n\n    default:\n      mixFunction = this._lerp;\n  }\n\n  this.buffer = new bufferType(valueSize * 4); // layout: [ incoming | accu0 | accu1 | orig ]\n  //\n  // interpolators can use .buffer as their .result\n  // the data then goes to 'incoming'\n  //\n  // 'accu0' and 'accu1' are used frame-interleaved for\n  // the cumulative result and are compared to detect\n  // changes\n  //\n  // 'orig' stores the original state of the property\n\n  this._mixBufferRegion = mixFunction;\n  this.cumulativeWeight = 0;\n  this.useCount = 0;\n  this.referenceCount = 0;\n};\n\nTHREE.PropertyMixer.prototype = {\n  constructor: THREE.PropertyMixer,\n  // accumulate data in the 'incoming' region into 'accu<i>'\n  accumulate: function (accuIndex, weight) {\n    // note: happily accumulating nothing when weight = 0, the caller knows\n    // the weight and shouldn't have made the call in the first place\n    var buffer = this.buffer,\n        stride = this.valueSize,\n        offset = accuIndex * stride + stride,\n        currentWeight = this.cumulativeWeight;\n\n    if (currentWeight === 0) {\n      // accuN := incoming * weight\n      for (var i = 0; i !== stride; ++i) {\n        buffer[offset + i] = buffer[i];\n      }\n\n      currentWeight = weight;\n    } else {\n      // accuN := accuN + incoming * weight\n      currentWeight += weight;\n      var mix = weight / currentWeight;\n\n      this._mixBufferRegion(buffer, offset, 0, mix, stride);\n    }\n\n    this.cumulativeWeight = currentWeight;\n  },\n  // apply the state of 'accu<i>' to the binding when accus differ\n  apply: function (accuIndex) {\n    var stride = this.valueSize,\n        buffer = this.buffer,\n        offset = accuIndex * stride + stride,\n        weight = this.cumulativeWeight,\n        binding = this.binding;\n    this.cumulativeWeight = 0;\n\n    if (weight < 1) {\n      // accuN := accuN + original * ( 1 - cumulativeWeight )\n      var originalValueOffset = stride * 3;\n\n      this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n    }\n\n    for (var i = stride, e = stride + stride; i !== e; ++i) {\n      if (buffer[i] !== buffer[i + stride]) {\n        // value has changed -> update scene graph\n        binding.setValue(buffer, offset);\n        break;\n      }\n    }\n  },\n  // remember the state of the bound property and copy it to both accus\n  saveOriginalState: function () {\n    var binding = this.binding;\n    var buffer = this.buffer,\n        stride = this.valueSize,\n        originalValueOffset = stride * 3;\n    binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n    for (var i = stride, e = originalValueOffset; i !== e; ++i) {\n      buffer[i] = buffer[originalValueOffset + i % stride];\n    }\n\n    this.cumulativeWeight = 0;\n  },\n  // apply the state previously taken via 'saveOriginalState' to the binding\n  restoreOriginalState: function () {\n    var originalValueOffset = this.valueSize * 3;\n    this.binding.setValue(this.buffer, originalValueOffset);\n  },\n  // mix functions\n  _select: function (buffer, dstOffset, srcOffset, t, stride) {\n    if (t >= 0.5) {\n      for (var i = 0; i !== stride; ++i) {\n        buffer[dstOffset + i] = buffer[srcOffset + i];\n      }\n    }\n  },\n  _slerp: function (buffer, dstOffset, srcOffset, t, stride) {\n    THREE.Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n  },\n  _lerp: function (buffer, dstOffset, srcOffset, t, stride) {\n    var s = 1 - t;\n\n    for (var i = 0; i !== stride; ++i) {\n      var j = dstOffset + i;\n      buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n    }\n  }\n}; // File:src/animation/tracks/BooleanKeyframeTrack.js\n\n/**\r\n *\r\n * A Track of Boolean keyframe values.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.BooleanKeyframeTrack = function (name, times, values) {\n  THREE.KeyframeTrack.call(this, name, times, values);\n};\n\nTHREE.BooleanKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n  constructor: THREE.BooleanKeyframeTrack,\n  ValueTypeName: 'bool',\n  ValueBufferType: Array,\n  DefaultInterpolation: THREE.InterpolateDiscrete,\n  InterpolantFactoryMethodLinear: undefined,\n  InterpolantFactoryMethodSmooth: undefined // Note: Actually this track could have a optimized / compressed\n  // representation of a single value and a custom interpolant that\n  // computes \"firstValue ^ isOdd( index )\".\n\n}); // File:src/animation/tracks/ColorKeyframeTrack.js\n\n/**\r\n *\r\n * A Track of keyframe values that represent color.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.ColorKeyframeTrack = function (name, times, values, interpolation) {\n  THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n};\n\nTHREE.ColorKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n  constructor: THREE.ColorKeyframeTrack,\n  ValueTypeName: 'color' // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n  // Note: Very basic implementation and nothing special yet.\n  // However, this is the place for color space parameterization.\n\n}); // File:src/animation/tracks/NumberKeyframeTrack.js\n\n/**\r\n *\r\n * A Track of numeric keyframe values.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.NumberKeyframeTrack = function (name, times, values, interpolation) {\n  THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n};\n\nTHREE.NumberKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n  constructor: THREE.NumberKeyframeTrack,\n  ValueTypeName: 'number' // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n\n}); // File:src/animation/tracks/QuaternionKeyframeTrack.js\n\n/**\r\n *\r\n * A Track of quaternion keyframe values.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.QuaternionKeyframeTrack = function (name, times, values, interpolation) {\n  THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n};\n\nTHREE.QuaternionKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n  constructor: THREE.QuaternionKeyframeTrack,\n  ValueTypeName: 'quaternion',\n  // ValueBufferType is inherited\n  DefaultInterpolation: THREE.InterpolateLinear,\n  InterpolantFactoryMethodLinear: function (result) {\n    return new THREE.QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n}); // File:src/animation/tracks/StringKeyframeTrack.js\n\n/**\r\n *\r\n * A Track that interpolates Strings\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.StringKeyframeTrack = function (name, times, values, interpolation) {\n  THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n};\n\nTHREE.StringKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n  constructor: THREE.StringKeyframeTrack,\n  ValueTypeName: 'string',\n  ValueBufferType: Array,\n  DefaultInterpolation: THREE.InterpolateDiscrete,\n  InterpolantFactoryMethodLinear: undefined,\n  InterpolantFactoryMethodSmooth: undefined\n}); // File:src/animation/tracks/VectorKeyframeTrack.js\n\n/**\r\n *\r\n * A Track of vectored keyframe values.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\n\nTHREE.VectorKeyframeTrack = function (name, times, values, interpolation) {\n  THREE.KeyframeTrack.call(this, name, times, values, interpolation);\n};\n\nTHREE.VectorKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {\n  constructor: THREE.VectorKeyframeTrack,\n  ValueTypeName: 'vector' // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n\n}); // File:src/audio/Audio.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n */\n\nTHREE.Audio = function (listener) {\n  THREE.Object3D.call(this);\n  this.type = 'Audio';\n  this.context = listener.context;\n  this.source = this.context.createBufferSource();\n  this.source.onended = this.onEnded.bind(this);\n  this.gain = this.context.createGain();\n  this.gain.connect(listener.getInput());\n  this.autoplay = false;\n  this.startTime = 0;\n  this.playbackRate = 1;\n  this.isPlaying = false;\n  this.hasPlaybackControl = true;\n  this.sourceType = 'empty';\n  this.filters = [];\n};\n\nTHREE.Audio.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Audio,\n  getOutput: function () {\n    return this.gain;\n  },\n  setNodeSource: function (audioNode) {\n    this.hasPlaybackControl = false;\n    this.sourceType = 'audioNode';\n    this.source = audioNode;\n    this.connect();\n    return this;\n  },\n  setBuffer: function (audioBuffer) {\n    this.source.buffer = audioBuffer;\n    this.sourceType = 'buffer';\n    if (this.autoplay) this.play();\n    return this;\n  },\n  play: function () {\n    if (this.isPlaying === true) {\n      console.warn('THREE.Audio: Audio is already playing.');\n      return;\n    }\n\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    var source = this.context.createBufferSource();\n    source.buffer = this.source.buffer;\n    source.loop = this.source.loop;\n    source.onended = this.source.onended;\n    source.start(0, this.startTime);\n    source.playbackRate.value = this.playbackRate;\n    this.isPlaying = true;\n    this.source = source;\n    return this.connect();\n  },\n  pause: function () {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.source.stop();\n    this.startTime = this.context.currentTime;\n    return this;\n  },\n  stop: function () {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.source.stop();\n    this.startTime = 0;\n    return this;\n  },\n  connect: function () {\n    if (this.filters.length > 0) {\n      this.source.connect(this.filters[0]);\n\n      for (var i = 1, l = this.filters.length; i < l; i++) {\n        this.filters[i - 1].connect(this.filters[i]);\n      }\n\n      this.filters[this.filters.length - 1].connect(this.getOutput());\n    } else {\n      this.source.connect(this.getOutput());\n    }\n\n    return this;\n  },\n  disconnect: function () {\n    if (this.filters.length > 0) {\n      this.source.disconnect(this.filters[0]);\n\n      for (var i = 1, l = this.filters.length; i < l; i++) {\n        this.filters[i - 1].disconnect(this.filters[i]);\n      }\n\n      this.filters[this.filters.length - 1].disconnect(this.getOutput());\n    } else {\n      this.source.disconnect(this.getOutput());\n    }\n\n    return this;\n  },\n  getFilters: function () {\n    return this.filters;\n  },\n  setFilters: function (value) {\n    if (!value) value = [];\n\n    if (this.isPlaying === true) {\n      this.disconnect();\n      this.filters = value;\n      this.connect();\n    } else {\n      this.filters = value;\n    }\n\n    return this;\n  },\n  getFilter: function () {\n    return this.getFilters()[0];\n  },\n  setFilter: function (filter) {\n    return this.setFilters(filter ? [filter] : []);\n  },\n  setPlaybackRate: function (value) {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.playbackRate = value;\n\n    if (this.isPlaying === true) {\n      this.source.playbackRate.value = this.playbackRate;\n    }\n\n    return this;\n  },\n  getPlaybackRate: function () {\n    return this.playbackRate;\n  },\n  onEnded: function () {\n    this.isPlaying = false;\n  },\n  getLoop: function () {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return false;\n    }\n\n    return this.source.loop;\n  },\n  setLoop: function (value) {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.source.loop = value;\n  },\n  getVolume: function () {\n    return this.gain.gain.value;\n  },\n  setVolume: function (value) {\n    this.gain.gain.value = value;\n    return this;\n  }\n}); // File:src/audio/AudioAnalyser.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.AudioAnalyser = function (audio, fftSize) {\n  this.analyser = audio.context.createAnalyser();\n  this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n  this.data = new Uint8Array(this.analyser.frequencyBinCount);\n  audio.getOutput().connect(this.analyser);\n};\n\nObject.assign(THREE.AudioAnalyser.prototype, {\n  getFrequencyData: function () {\n    this.analyser.getByteFrequencyData(this.data);\n    return this.data;\n  },\n  getAverageFrequency: function () {\n    var value = 0,\n        data = this.getFrequencyData();\n\n    for (var i = 0; i < data.length; i++) {\n      value += data[i];\n    }\n\n    return value / data.length;\n  }\n}); // File:src/audio/AudioContext.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nObject.defineProperty(THREE, 'AudioContext', {\n  get: function () {\n    var context;\n    return function () {\n      if (context === undefined) {\n        context = new (window.AudioContext || window.webkitAudioContext)();\n      }\n\n      return context;\n    };\n  }()\n}); // File:src/audio/PositionalAudio.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.PositionalAudio = function (listener) {\n  THREE.Audio.call(this, listener);\n  this.panner = this.context.createPanner();\n  this.panner.connect(this.gain);\n};\n\nTHREE.PositionalAudio.prototype = Object.assign(Object.create(THREE.Audio.prototype), {\n  constructor: THREE.PositionalAudio,\n  getOutput: function () {\n    return this.panner;\n  },\n  getRefDistance: function () {\n    return this.panner.refDistance;\n  },\n  setRefDistance: function (value) {\n    this.panner.refDistance = value;\n  },\n  getRolloffFactor: function () {\n    return this.panner.rolloffFactor;\n  },\n  setRolloffFactor: function (value) {\n    this.panner.rolloffFactor = value;\n  },\n  getDistanceModel: function () {\n    return this.panner.distanceModel;\n  },\n  setDistanceModel: function (value) {\n    this.panner.distanceModel = value;\n  },\n  getMaxDistance: function () {\n    return this.panner.maxDistance;\n  },\n  setMaxDistance: function (value) {\n    this.panner.maxDistance = value;\n  },\n  updateMatrixWorld: function () {\n    var position = new THREE.Vector3();\n    return function updateMatrixWorld(force) {\n      THREE.Object3D.prototype.updateMatrixWorld.call(this, force);\n      position.setFromMatrixPosition(this.matrixWorld);\n      this.panner.setPosition(position.x, position.y, position.z);\n    };\n  }()\n}); // File:src/audio/AudioListener.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.AudioListener = function () {\n  THREE.Object3D.call(this);\n  this.type = 'AudioListener';\n  this.context = THREE.AudioContext;\n  this.gain = this.context.createGain();\n  this.gain.connect(this.context.destination);\n  this.filter = null;\n};\n\nTHREE.AudioListener.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.AudioListener,\n  getInput: function () {\n    return this.gain;\n  },\n  removeFilter: function () {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n      this.gain.connect(this.context.destination);\n      this.filter = null;\n    }\n  },\n  getFilter: function () {\n    return this.filter;\n  },\n  setFilter: function (value) {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n    } else {\n      this.gain.disconnect(this.context.destination);\n    }\n\n    this.filter = value;\n    this.gain.connect(this.filter);\n    this.filter.connect(this.context.destination);\n  },\n  getMasterVolume: function () {\n    return this.gain.gain.value;\n  },\n  setMasterVolume: function (value) {\n    this.gain.gain.value = value;\n  },\n  updateMatrixWorld: function () {\n    var position = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n    var scale = new THREE.Vector3();\n    var orientation = new THREE.Vector3();\n    return function updateMatrixWorld(force) {\n      THREE.Object3D.prototype.updateMatrixWorld.call(this, force);\n      var listener = this.context.listener;\n      var up = this.up;\n      this.matrixWorld.decompose(position, quaternion, scale);\n      orientation.set(0, 0, -1).applyQuaternion(quaternion);\n      listener.setPosition(position.x, position.y, position.z);\n      listener.setOrientation(orientation.x, orientation.y, orientation.z, up.x, up.y, up.z);\n    };\n  }()\n}); // File:src/cameras/Camera.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\nTHREE.Camera = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Camera';\n  this.matrixWorldInverse = new THREE.Matrix4();\n  this.projectionMatrix = new THREE.Matrix4();\n};\n\nTHREE.Camera.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Camera.prototype.constructor = THREE.Camera;\n\nTHREE.Camera.prototype.getWorldDirection = function () {\n  var quaternion = new THREE.Quaternion();\n  return function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    this.getWorldQuaternion(quaternion);\n    return result.set(0, 0, -1).applyQuaternion(quaternion);\n  };\n}();\n\nTHREE.Camera.prototype.lookAt = function () {\n  // This routine does not support cameras with rotated and/or translated parent(s)\n  var m1 = new THREE.Matrix4();\n  return function (vector) {\n    m1.lookAt(this.position, vector, this.up);\n    this.quaternion.setFromRotationMatrix(m1);\n  };\n}();\n\nTHREE.Camera.prototype.clone = function () {\n  return new this.constructor().copy(this);\n};\n\nTHREE.Camera.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.matrixWorldInverse.copy(source.matrixWorldInverse);\n  this.projectionMatrix.copy(source.projectionMatrix);\n  return this;\n}; // File:src/cameras/CubeCamera.js\n\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.CubeCamera = function (near, far, cubeResolution) {\n  THREE.Object3D.call(this);\n  this.type = 'CubeCamera';\n  var fov = 90,\n      aspect = 1;\n  var cameraPX = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraPX.up.set(0, -1, 0);\n  cameraPX.lookAt(new THREE.Vector3(1, 0, 0));\n  this.add(cameraPX);\n  var cameraNX = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraNX.up.set(0, -1, 0);\n  cameraNX.lookAt(new THREE.Vector3(-1, 0, 0));\n  this.add(cameraNX);\n  var cameraPY = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraPY.up.set(0, 0, 1);\n  cameraPY.lookAt(new THREE.Vector3(0, 1, 0));\n  this.add(cameraPY);\n  var cameraNY = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraNY.up.set(0, 0, -1);\n  cameraNY.lookAt(new THREE.Vector3(0, -1, 0));\n  this.add(cameraNY);\n  var cameraPZ = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraPZ.up.set(0, -1, 0);\n  cameraPZ.lookAt(new THREE.Vector3(0, 0, 1));\n  this.add(cameraPZ);\n  var cameraNZ = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraNZ.up.set(0, -1, 0);\n  cameraNZ.lookAt(new THREE.Vector3(0, 0, -1));\n  this.add(cameraNZ);\n  var options = {\n    format: THREE.RGBFormat,\n    magFilter: THREE.LinearFilter,\n    minFilter: THREE.LinearFilter\n  };\n  this.renderTarget = new THREE.WebGLRenderTargetCube(cubeResolution, cubeResolution, options);\n\n  this.updateCubeMap = function (renderer, scene) {\n    if (this.parent === null) this.updateMatrixWorld();\n    var renderTarget = this.renderTarget;\n    var generateMipmaps = renderTarget.texture.generateMipmaps;\n    renderTarget.texture.generateMipmaps = false;\n    renderTarget.activeCubeFace = 0;\n    renderer.render(scene, cameraPX, renderTarget);\n    renderTarget.activeCubeFace = 1;\n    renderer.render(scene, cameraNX, renderTarget);\n    renderTarget.activeCubeFace = 2;\n    renderer.render(scene, cameraPY, renderTarget);\n    renderTarget.activeCubeFace = 3;\n    renderer.render(scene, cameraNY, renderTarget);\n    renderTarget.activeCubeFace = 4;\n    renderer.render(scene, cameraPZ, renderTarget);\n    renderTarget.texture.generateMipmaps = generateMipmaps;\n    renderTarget.activeCubeFace = 5;\n    renderer.render(scene, cameraNZ, renderTarget);\n    renderer.setRenderTarget(null);\n  };\n};\n\nTHREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera; // File:src/cameras/OrthographicCamera.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.OrthographicCamera = function (left, right, top, bottom, near, far) {\n  THREE.Camera.call(this);\n  this.type = 'OrthographicCamera';\n  this.zoom = 1;\n  this.left = left;\n  this.right = right;\n  this.top = top;\n  this.bottom = bottom;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.updateProjectionMatrix();\n};\n\nTHREE.OrthographicCamera.prototype = Object.assign(Object.create(THREE.Camera.prototype), {\n  constructor: THREE.OrthographicCamera,\n  copy: function (source) {\n    THREE.Camera.prototype.copy.call(this, source);\n    this.left = source.left;\n    this.right = source.right;\n    this.top = source.top;\n    this.bottom = source.bottom;\n    this.near = source.near;\n    this.far = source.far;\n    this.zoom = source.zoom;\n    return this;\n  },\n  updateProjectionMatrix: function () {\n    var dx = (this.right - this.left) / (2 * this.zoom);\n    var dy = (this.top - this.bottom) / (2 * this.zoom);\n    var cx = (this.right + this.left) / 2;\n    var cy = (this.top + this.bottom) / 2;\n    this.projectionMatrix.makeOrthographic(cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far);\n  },\n  toJSON: function (meta) {\n    var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n    data.object.zoom = this.zoom;\n    data.object.left = this.left;\n    data.object.right = this.right;\n    data.object.top = this.top;\n    data.object.bottom = this.bottom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    return data;\n  }\n}); // File:src/cameras/PerspectiveCamera.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author tschw\r\n */\n\nTHREE.PerspectiveCamera = function (fov, aspect, near, far) {\n  THREE.Camera.call(this);\n  this.type = 'PerspectiveCamera';\n  this.fov = fov !== undefined ? fov : 50;\n  this.zoom = 1;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.focus = 10;\n  this.aspect = aspect !== undefined ? aspect : 1;\n  this.view = null;\n  this.filmGauge = 35; // width of the film (default in millimeters)\n\n  this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n  this.updateProjectionMatrix();\n};\n\nTHREE.PerspectiveCamera.prototype = Object.assign(Object.create(THREE.Camera.prototype), {\n  constructor: THREE.PerspectiveCamera,\n  copy: function (source) {\n    THREE.Camera.prototype.copy.call(this, source);\n    this.fov = source.fov;\n    this.zoom = source.zoom;\n    this.near = source.near;\n    this.far = source.far;\n    this.focus = source.focus;\n    this.aspect = source.aspect;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    this.filmGauge = source.filmGauge;\n    this.filmOffset = source.filmOffset;\n    return this;\n  },\n\n  /**\r\n   * Sets the FOV by focal length in respect to the current .filmGauge.\r\n   *\r\n   * The default film gauge is 35, so that the focal length can be specified for\r\n   * a 35mm (full frame) camera.\r\n   *\r\n   * Values for focal length and film gauge must have the same unit.\r\n   */\n  setFocalLength: function (focalLength) {\n    // see http://www.bobatkins.com/photography/technical/field_of_view.html\n    var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n    this.fov = THREE.Math.RAD2DEG * 2 * Math.atan(vExtentSlope);\n    this.updateProjectionMatrix();\n  },\n\n  /**\r\n   * Calculates the focal length from the current .fov and .filmGauge.\r\n   */\n  getFocalLength: function () {\n    var vExtentSlope = Math.tan(THREE.Math.DEG2RAD * 0.5 * this.fov);\n    return 0.5 * this.getFilmHeight() / vExtentSlope;\n  },\n  getEffectiveFOV: function () {\n    return THREE.Math.RAD2DEG * 2 * Math.atan(Math.tan(THREE.Math.DEG2RAD * 0.5 * this.fov) / this.zoom);\n  },\n  getFilmWidth: function () {\n    // film not completely covered in portrait format (aspect < 1)\n    return this.filmGauge * Math.min(this.aspect, 1);\n  },\n  getFilmHeight: function () {\n    // film not completely covered in landscape format (aspect > 1)\n    return this.filmGauge / Math.max(this.aspect, 1);\n  },\n\n  /**\r\n   * Sets an offset in a larger frustum. This is useful for multi-window or\r\n   * multi-monitor/multi-machine setups.\r\n   *\r\n   * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n   * the monitors are in grid like this\r\n   *\r\n   *   +---+---+---+\r\n   *   | A | B | C |\r\n   *   +---+---+---+\r\n   *   | D | E | F |\r\n   *   +---+---+---+\r\n   *\r\n   * then for each monitor you would call it like this\r\n   *\r\n   *   var w = 1920;\r\n   *   var h = 1080;\r\n   *   var fullWidth = w * 3;\r\n   *   var fullHeight = h * 2;\r\n   *\r\n   *   --A--\r\n   *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n   *   --B--\r\n   *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n   *   --C--\r\n   *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n   *   --D--\r\n   *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n   *   --E--\r\n   *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n   *   --F--\r\n   *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n   *\r\n   *   Note there is no reason monitors have to be the same size or in a grid.\r\n   */\n  setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n    this.aspect = fullWidth / fullHeight;\n    this.view = {\n      fullWidth: fullWidth,\n      fullHeight: fullHeight,\n      offsetX: x,\n      offsetY: y,\n      width: width,\n      height: height\n    };\n    this.updateProjectionMatrix();\n  },\n  clearViewOffset: function () {\n    this.view = null;\n    this.updateProjectionMatrix();\n  },\n  updateProjectionMatrix: function () {\n    var near = this.near,\n        top = near * Math.tan(THREE.Math.DEG2RAD * 0.5 * this.fov) / this.zoom,\n        height = 2 * top,\n        width = this.aspect * height,\n        left = -0.5 * width,\n        view = this.view;\n\n    if (view !== null) {\n      var fullWidth = view.fullWidth,\n          fullHeight = view.fullHeight;\n      left += view.offsetX * width / fullWidth;\n      top -= view.offsetY * height / fullHeight;\n      width *= view.width / fullWidth;\n      height *= view.height / fullHeight;\n    }\n\n    var skew = this.filmOffset;\n    if (skew !== 0) left += near * skew / this.getFilmWidth();\n    this.projectionMatrix.makeFrustum(left, left + width, top - height, top, near, this.far);\n  },\n  toJSON: function (meta) {\n    var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n    data.object.fov = this.fov;\n    data.object.zoom = this.zoom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    data.object.focus = this.focus;\n    data.object.aspect = this.aspect;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    data.object.filmGauge = this.filmGauge;\n    data.object.filmOffset = this.filmOffset;\n    return data;\n  }\n}); // File:src/cameras/StereoCamera.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.StereoCamera = function () {\n  this.type = 'StereoCamera';\n  this.aspect = 1;\n  this.cameraL = new THREE.PerspectiveCamera();\n  this.cameraL.layers.enable(1);\n  this.cameraL.matrixAutoUpdate = false;\n  this.cameraR = new THREE.PerspectiveCamera();\n  this.cameraR.layers.enable(2);\n  this.cameraR.matrixAutoUpdate = false;\n};\n\nObject.assign(THREE.StereoCamera.prototype, {\n  update: function () {\n    var focus, fov, aspect, near, far;\n    var eyeRight = new THREE.Matrix4();\n    var eyeLeft = new THREE.Matrix4();\n    return function update(camera) {\n      var needsUpdate = focus !== camera.focus || fov !== camera.fov || aspect !== camera.aspect * this.aspect || near !== camera.near || far !== camera.far;\n\n      if (needsUpdate) {\n        focus = camera.focus;\n        fov = camera.fov;\n        aspect = camera.aspect * this.aspect;\n        near = camera.near;\n        far = camera.far; // Off-axis stereoscopic effect based on\n        // http://paulbourke.net/stereographics/stereorender/\n\n        var projectionMatrix = camera.projectionMatrix.clone();\n        var eyeSep = 0.064 / 2;\n        var eyeSepOnProjection = eyeSep * near / focus;\n        var ymax = near * Math.tan(THREE.Math.DEG2RAD * fov * 0.5);\n        var xmin, xmax; // translate xOffset\n\n        eyeLeft.elements[12] = -eyeSep;\n        eyeRight.elements[12] = eyeSep; // for left eye\n\n        xmin = -ymax * aspect + eyeSepOnProjection;\n        xmax = ymax * aspect + eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n        xmin = -ymax * aspect - eyeSepOnProjection;\n        xmax = ymax * aspect - eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraR.projectionMatrix.copy(projectionMatrix);\n      }\n\n      this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(eyeLeft);\n      this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(eyeRight);\n    };\n  }()\n}); // File:src/lights/Light.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Light = function (color, intensity) {\n  THREE.Object3D.call(this);\n  this.type = 'Light';\n  this.color = new THREE.Color(color);\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.receiveShadow = undefined;\n};\n\nTHREE.Light.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Light,\n  copy: function (source) {\n    THREE.Object3D.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.intensity = source.intensity;\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n    data.object.color = this.color.getHex();\n    data.object.intensity = this.intensity;\n    if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n    if (this.distance !== undefined) data.object.distance = this.distance;\n    if (this.angle !== undefined) data.object.angle = this.angle;\n    if (this.decay !== undefined) data.object.decay = this.decay;\n    if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n    return data;\n  }\n}); // File:src/lights/LightShadow.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.LightShadow = function (camera) {\n  this.camera = camera;\n  this.bias = 0;\n  this.radius = 1;\n  this.mapSize = new THREE.Vector2(512, 512);\n  this.map = null;\n  this.matrix = new THREE.Matrix4();\n};\n\nObject.assign(THREE.LightShadow.prototype, {\n  copy: function (source) {\n    this.camera = source.camera.clone();\n    this.bias = source.bias;\n    this.radius = source.radius;\n    this.mapSize.copy(source.mapSize);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  }\n}); // File:src/lights/AmbientLight.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.AmbientLight = function (color, intensity) {\n  THREE.Light.call(this, color, intensity);\n  this.type = 'AmbientLight';\n  this.castShadow = undefined;\n};\n\nTHREE.AmbientLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n  constructor: THREE.AmbientLight\n}); // File:src/lights/DirectionalLight.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.DirectionalLight = function (color, intensity) {\n  THREE.Light.call(this, color, intensity);\n  this.type = 'DirectionalLight';\n  this.position.set(0, 1, 0);\n  this.updateMatrix();\n  this.target = new THREE.Object3D();\n  this.shadow = new THREE.DirectionalLightShadow();\n};\n\nTHREE.DirectionalLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n  constructor: THREE.DirectionalLight,\n  copy: function (source) {\n    THREE.Light.prototype.copy.call(this, source);\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n}); // File:src/lights/DirectionalLightShadow.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.DirectionalLightShadow = function (light) {\n  THREE.LightShadow.call(this, new THREE.OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n};\n\nTHREE.DirectionalLightShadow.prototype = Object.assign(Object.create(THREE.LightShadow.prototype), {\n  constructor: THREE.DirectionalLightShadow\n}); // File:src/lights/HemisphereLight.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.HemisphereLight = function (skyColor, groundColor, intensity) {\n  THREE.Light.call(this, skyColor, intensity);\n  this.type = 'HemisphereLight';\n  this.castShadow = undefined;\n  this.position.set(0, 1, 0);\n  this.updateMatrix();\n  this.groundColor = new THREE.Color(groundColor);\n};\n\nTHREE.HemisphereLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n  constructor: THREE.HemisphereLight,\n  copy: function (source) {\n    THREE.Light.prototype.copy.call(this, source);\n    this.groundColor.copy(source.groundColor);\n    return this;\n  }\n}); // File:src/lights/PointLight.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.PointLight = function (color, intensity, distance, decay) {\n  THREE.Light.call(this, color, intensity);\n  this.type = 'PointLight';\n  Object.defineProperty(this, 'power', {\n    get: function () {\n      // intensity = power per solid angle.\n      // ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n      return this.intensity * 4 * Math.PI;\n    },\n    set: function (power) {\n      // intensity = power per solid angle.\n      // ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n      this.intensity = power / (4 * Math.PI);\n    }\n  });\n  this.distance = distance !== undefined ? distance : 0;\n  this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n  this.shadow = new THREE.LightShadow(new THREE.PerspectiveCamera(90, 1, 0.5, 500));\n};\n\nTHREE.PointLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n  constructor: THREE.PointLight,\n  copy: function (source) {\n    THREE.Light.prototype.copy.call(this, source);\n    this.distance = source.distance;\n    this.decay = source.decay;\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n}); // File:src/lights/SpotLight.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.SpotLight = function (color, intensity, distance, angle, penumbra, decay) {\n  THREE.Light.call(this, color, intensity);\n  this.type = 'SpotLight';\n  this.position.set(0, 1, 0);\n  this.updateMatrix();\n  this.target = new THREE.Object3D();\n  Object.defineProperty(this, 'power', {\n    get: function () {\n      // intensity = power per solid angle.\n      // ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n      return this.intensity * Math.PI;\n    },\n    set: function (power) {\n      // intensity = power per solid angle.\n      // ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n      this.intensity = power / Math.PI;\n    }\n  });\n  this.distance = distance !== undefined ? distance : 0;\n  this.angle = angle !== undefined ? angle : Math.PI / 3;\n  this.penumbra = penumbra !== undefined ? penumbra : 0;\n  this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n  this.shadow = new THREE.SpotLightShadow();\n};\n\nTHREE.SpotLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {\n  constructor: THREE.SpotLight,\n  copy: function (source) {\n    THREE.Light.prototype.copy.call(this, source);\n    this.distance = source.distance;\n    this.angle = source.angle;\n    this.penumbra = source.penumbra;\n    this.decay = source.decay;\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n}); // File:src/lights/SpotLightShadow.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.SpotLightShadow = function () {\n  THREE.LightShadow.call(this, new THREE.PerspectiveCamera(50, 1, 0.5, 500));\n};\n\nTHREE.SpotLightShadow.prototype = Object.assign(Object.create(THREE.LightShadow.prototype), {\n  constructor: THREE.SpotLightShadow,\n  update: function (light) {\n    var fov = THREE.Math.RAD2DEG * 2 * light.angle;\n    var aspect = this.mapSize.width / this.mapSize.height;\n    var far = light.distance || 500;\n    var camera = this.camera;\n\n    if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n      camera.fov = fov;\n      camera.aspect = aspect;\n      camera.far = far;\n      camera.updateProjectionMatrix();\n    }\n  }\n}); // File:src/loaders/AudioLoader.js\n\n/**\r\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n */\n\nTHREE.AudioLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.AudioLoader.prototype = {\n  constructor: THREE.AudioLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (buffer) {\n      var context = THREE.AudioContext;\n      context.decodeAudioData(buffer, function (audioBuffer) {\n        onLoad(audioBuffer);\n      });\n    }, onProgress, onError);\n  }\n}; // File:src/loaders/Cache.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Cache = {\n  enabled: false,\n  files: {},\n  add: function (key, file) {\n    if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n    this.files[key] = file;\n  },\n  get: function (key) {\n    if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n    return this.files[key];\n  },\n  remove: function (key) {\n    delete this.files[key];\n  },\n  clear: function () {\n    this.files = {};\n  }\n}; // File:src/loaders/Loader.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Loader = function () {\n  this.onLoadStart = function () {};\n\n  this.onLoadProgress = function () {};\n\n  this.onLoadComplete = function () {};\n};\n\nTHREE.Loader.prototype = {\n  constructor: THREE.Loader,\n  crossOrigin: undefined,\n  extractUrlBase: function (url) {\n    var parts = url.split('/');\n    if (parts.length === 1) return './';\n    parts.pop();\n    return parts.join('/') + '/';\n  },\n  initMaterials: function (materials, texturePath, crossOrigin) {\n    var array = [];\n\n    for (var i = 0; i < materials.length; ++i) {\n      array[i] = this.createMaterial(materials[i], texturePath, crossOrigin);\n    }\n\n    return array;\n  },\n  createMaterial: function () {\n    var color, textureLoader, materialLoader;\n    return function (m, texturePath, crossOrigin) {\n      if (color === undefined) color = new THREE.Color();\n      if (textureLoader === undefined) textureLoader = new THREE.TextureLoader();\n      if (materialLoader === undefined) materialLoader = new THREE.MaterialLoader(); // convert from old material format\n\n      var textures = {};\n\n      function loadTexture(path, repeat, offset, wrap, anisotropy) {\n        var fullPath = texturePath + path;\n        var loader = THREE.Loader.Handlers.get(fullPath);\n        var texture;\n\n        if (loader !== null) {\n          texture = loader.load(fullPath);\n        } else {\n          textureLoader.setCrossOrigin(crossOrigin);\n          texture = textureLoader.load(fullPath);\n        }\n\n        if (repeat !== undefined) {\n          texture.repeat.fromArray(repeat);\n          if (repeat[0] !== 1) texture.wrapS = THREE.RepeatWrapping;\n          if (repeat[1] !== 1) texture.wrapT = THREE.RepeatWrapping;\n        }\n\n        if (offset !== undefined) {\n          texture.offset.fromArray(offset);\n        }\n\n        if (wrap !== undefined) {\n          if (wrap[0] === 'repeat') texture.wrapS = THREE.RepeatWrapping;\n          if (wrap[0] === 'mirror') texture.wrapS = THREE.MirroredRepeatWrapping;\n          if (wrap[1] === 'repeat') texture.wrapT = THREE.RepeatWrapping;\n          if (wrap[1] === 'mirror') texture.wrapT = THREE.MirroredRepeatWrapping;\n        }\n\n        if (anisotropy !== undefined) {\n          texture.anisotropy = anisotropy;\n        }\n\n        var uuid = THREE.Math.generateUUID();\n        textures[uuid] = texture;\n        return uuid;\n      } //\n\n\n      var json = {\n        uuid: THREE.Math.generateUUID(),\n        type: 'MeshLambertMaterial'\n      };\n\n      for (var name in m) {\n        var value = m[name];\n\n        switch (name) {\n          case 'DbgColor':\n          case 'DbgIndex':\n          case 'opticalDensity':\n          case 'illumination':\n            break;\n\n          case 'DbgName':\n            json.name = value;\n            break;\n\n          case 'blending':\n            json.blending = THREE[value];\n            break;\n\n          case 'colorAmbient':\n          case 'mapAmbient':\n            console.warn('THREE.Loader.createMaterial:', name, 'is no longer supported.');\n            break;\n\n          case 'colorDiffuse':\n            json.color = color.fromArray(value).getHex();\n            break;\n\n          case 'colorSpecular':\n            json.specular = color.fromArray(value).getHex();\n            break;\n\n          case 'colorEmissive':\n            json.emissive = color.fromArray(value).getHex();\n            break;\n\n          case 'specularCoef':\n            json.shininess = value;\n            break;\n\n          case 'shading':\n            if (value.toLowerCase() === 'basic') json.type = 'MeshBasicMaterial';\n            if (value.toLowerCase() === 'phong') json.type = 'MeshPhongMaterial';\n            break;\n\n          case 'mapDiffuse':\n            json.map = loadTexture(value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy);\n            break;\n\n          case 'mapDiffuseRepeat':\n          case 'mapDiffuseOffset':\n          case 'mapDiffuseWrap':\n          case 'mapDiffuseAnisotropy':\n            break;\n\n          case 'mapLight':\n            json.lightMap = loadTexture(value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy);\n            break;\n\n          case 'mapLightRepeat':\n          case 'mapLightOffset':\n          case 'mapLightWrap':\n          case 'mapLightAnisotropy':\n            break;\n\n          case 'mapAO':\n            json.aoMap = loadTexture(value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy);\n            break;\n\n          case 'mapAORepeat':\n          case 'mapAOOffset':\n          case 'mapAOWrap':\n          case 'mapAOAnisotropy':\n            break;\n\n          case 'mapBump':\n            json.bumpMap = loadTexture(value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy);\n            break;\n\n          case 'mapBumpScale':\n            json.bumpScale = value;\n            break;\n\n          case 'mapBumpRepeat':\n          case 'mapBumpOffset':\n          case 'mapBumpWrap':\n          case 'mapBumpAnisotropy':\n            break;\n\n          case 'mapNormal':\n            json.normalMap = loadTexture(value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy);\n            break;\n\n          case 'mapNormalFactor':\n            json.normalScale = [value, value];\n            break;\n\n          case 'mapNormalRepeat':\n          case 'mapNormalOffset':\n          case 'mapNormalWrap':\n          case 'mapNormalAnisotropy':\n            break;\n\n          case 'mapSpecular':\n            json.specularMap = loadTexture(value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy);\n            break;\n\n          case 'mapSpecularRepeat':\n          case 'mapSpecularOffset':\n          case 'mapSpecularWrap':\n          case 'mapSpecularAnisotropy':\n            break;\n\n          case 'mapAlpha':\n            json.alphaMap = loadTexture(value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy);\n            break;\n\n          case 'mapAlphaRepeat':\n          case 'mapAlphaOffset':\n          case 'mapAlphaWrap':\n          case 'mapAlphaAnisotropy':\n            break;\n\n          case 'flipSided':\n            json.side = THREE.BackSide;\n            break;\n\n          case 'doubleSided':\n            json.side = THREE.DoubleSide;\n            break;\n\n          case 'transparency':\n            console.warn('THREE.Loader.createMaterial: transparency has been renamed to opacity');\n            json.opacity = value;\n            break;\n\n          case 'depthTest':\n          case 'depthWrite':\n          case 'colorWrite':\n          case 'opacity':\n          case 'reflectivity':\n          case 'transparent':\n          case 'visible':\n          case 'wireframe':\n            json[name] = value;\n            break;\n\n          case 'vertexColors':\n            if (value === true) json.vertexColors = THREE.VertexColors;\n            if (value === 'face') json.vertexColors = THREE.FaceColors;\n            break;\n\n          default:\n            console.error('THREE.Loader.createMaterial: Unsupported', name, value);\n            break;\n        }\n      }\n\n      if (json.type === 'MeshBasicMaterial') delete json.emissive;\n      if (json.type !== 'MeshPhongMaterial') delete json.specular;\n      if (json.opacity < 1) json.transparent = true;\n      materialLoader.setTextures(textures);\n      return materialLoader.parse(json);\n    };\n  }()\n};\nTHREE.Loader.Handlers = {\n  handlers: [],\n  add: function (regex, loader) {\n    this.handlers.push(regex, loader);\n  },\n  get: function (file) {\n    var handlers = this.handlers;\n\n    for (var i = 0, l = handlers.length; i < l; i += 2) {\n      var regex = handlers[i];\n      var loader = handlers[i + 1];\n\n      if (regex.test(file)) {\n        return loader;\n      }\n    }\n\n    return null;\n  }\n}; // File:src/loaders/XHRLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.XHRLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.XHRLoader.prototype = {\n  constructor: THREE.XHRLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    if (this.path !== undefined) url = this.path + url;\n    var scope = this;\n    var cached = THREE.Cache.get(url);\n\n    if (cached !== undefined) {\n      if (onLoad) {\n        setTimeout(function () {\n          onLoad(cached);\n        }, 0);\n      }\n\n      return cached;\n    }\n\n    var request = new XMLHttpRequest();\n    request.overrideMimeType('text/plain');\n    request.open('GET', url, true);\n    request.addEventListener('load', function (event) {\n      var response = event.target.response;\n      THREE.Cache.add(url, response);\n\n      if (this.status === 200) {\n        if (onLoad) onLoad(response);\n        scope.manager.itemEnd(url);\n      } else if (this.status === 0) {\n        // Some browsers return HTTP Status 0 when using non-http protocol\n        // e.g. 'file://' or 'data://'. Handle as success.\n        console.warn('THREE.XHRLoader: HTTP Status 0 received.');\n        if (onLoad) onLoad(response);\n        scope.manager.itemEnd(url);\n      } else {\n        if (onError) onError(event);\n        scope.manager.itemError(url);\n      }\n    }, false);\n\n    if (onProgress !== undefined) {\n      request.addEventListener('progress', function (event) {\n        onProgress(event);\n      }, false);\n    }\n\n    request.addEventListener('error', function (event) {\n      if (onError) onError(event);\n      scope.manager.itemError(url);\n    }, false);\n    if (this.responseType !== undefined) request.responseType = this.responseType;\n    if (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n    request.send(null);\n    scope.manager.itemStart(url);\n    return request;\n  },\n  setPath: function (value) {\n    this.path = value;\n  },\n  setResponseType: function (value) {\n    this.responseType = value;\n  },\n  setWithCredentials: function (value) {\n    this.withCredentials = value;\n  }\n}; // File:src/loaders/FontLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.FontLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.FontLoader.prototype = {\n  constructor: THREE.FontLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.load(url, function (text) {\n      var json;\n\n      try {\n        json = JSON.parse(text);\n      } catch (e) {\n        console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n        json = JSON.parse(text.substring(65, text.length - 2));\n      }\n\n      var font = scope.parse(json);\n      if (onLoad) onLoad(font);\n    }, onProgress, onError);\n  },\n  parse: function (json) {\n    return new THREE.Font(json);\n  }\n}; // File:src/loaders/ImageLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.ImageLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.ImageLoader.prototype = {\n  constructor: THREE.ImageLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    if (this.path !== undefined) url = this.path + url;\n    var scope = this;\n    var cached = THREE.Cache.get(url);\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n\n      if (onLoad) {\n        setTimeout(function () {\n          onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n      } else {\n        scope.manager.itemEnd(url);\n      }\n\n      return cached;\n    }\n\n    var image = document.createElement('img');\n    image.addEventListener('load', function (event) {\n      THREE.Cache.add(url, this);\n      if (onLoad) onLoad(this);\n      scope.manager.itemEnd(url);\n    }, false);\n\n    if (onProgress !== undefined) {\n      image.addEventListener('progress', function (event) {\n        onProgress(event);\n      }, false);\n    }\n\n    image.addEventListener('error', function (event) {\n      if (onError) onError(event);\n      scope.manager.itemError(url);\n    }, false);\n    if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n    scope.manager.itemStart(url);\n    image.src = url;\n    return image;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  setPath: function (value) {\n    this.path = value;\n  }\n}; // File:src/loaders/JSONLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.JSONLoader = function (manager) {\n  if (typeof manager === 'boolean') {\n    console.warn('THREE.JSONLoader: showStatus parameter has been removed from constructor.');\n    manager = undefined;\n  }\n\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  this.withCredentials = false;\n};\n\nTHREE.JSONLoader.prototype = {\n  constructor: THREE.JSONLoader,\n\n  // Deprecated\n  get statusDomElement() {\n    if (this._statusDomElement === undefined) {\n      this._statusDomElement = document.createElement('div');\n    }\n\n    console.warn('THREE.JSONLoader: .statusDomElement has been removed.');\n    return this._statusDomElement;\n  },\n\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var texturePath = this.texturePath && typeof this.texturePath === \"string\" ? this.texturePath : THREE.Loader.prototype.extractUrlBase(url);\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      var json = JSON.parse(text);\n      var metadata = json.metadata;\n\n      if (metadata !== undefined) {\n        var type = metadata.type;\n\n        if (type !== undefined) {\n          if (type.toLowerCase() === 'object') {\n            console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.');\n            return;\n          }\n\n          if (type.toLowerCase() === 'scene') {\n            console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.');\n            return;\n          }\n        }\n      }\n\n      var object = scope.parse(json, texturePath);\n      onLoad(object.geometry, object.materials);\n    }, onProgress, onError);\n  },\n  setTexturePath: function (value) {\n    this.texturePath = value;\n  },\n  parse: function (json, texturePath) {\n    var geometry = new THREE.Geometry(),\n        scale = json.scale !== undefined ? 1.0 / json.scale : 1.0;\n    parseModel(scale);\n    parseSkin();\n    parseMorphing(scale);\n    parseAnimations();\n    geometry.computeFaceNormals();\n    geometry.computeBoundingSphere();\n\n    function parseModel(scale) {\n      function isBitSet(value, position) {\n        return value & 1 << position;\n      }\n\n      var i,\n          j,\n          fi,\n          offset,\n          zLength,\n          colorIndex,\n          normalIndex,\n          uvIndex,\n          materialIndex,\n          type,\n          isQuad,\n          hasMaterial,\n          hasFaceVertexUv,\n          hasFaceNormal,\n          hasFaceVertexNormal,\n          hasFaceColor,\n          hasFaceVertexColor,\n          vertex,\n          face,\n          faceA,\n          faceB,\n          hex,\n          normal,\n          uvLayer,\n          uv,\n          u,\n          v,\n          faces = json.faces,\n          vertices = json.vertices,\n          normals = json.normals,\n          colors = json.colors,\n          nUvLayers = 0;\n\n      if (json.uvs !== undefined) {\n        // disregard empty arrays\n        for (i = 0; i < json.uvs.length; i++) {\n          if (json.uvs[i].length) nUvLayers++;\n        }\n\n        for (i = 0; i < nUvLayers; i++) {\n          geometry.faceVertexUvs[i] = [];\n        }\n      }\n\n      offset = 0;\n      zLength = vertices.length;\n\n      while (offset < zLength) {\n        vertex = new THREE.Vector3();\n        vertex.x = vertices[offset++] * scale;\n        vertex.y = vertices[offset++] * scale;\n        vertex.z = vertices[offset++] * scale;\n        geometry.vertices.push(vertex);\n      }\n\n      offset = 0;\n      zLength = faces.length;\n\n      while (offset < zLength) {\n        type = faces[offset++];\n        isQuad = isBitSet(type, 0);\n        hasMaterial = isBitSet(type, 1);\n        hasFaceVertexUv = isBitSet(type, 3);\n        hasFaceNormal = isBitSet(type, 4);\n        hasFaceVertexNormal = isBitSet(type, 5);\n        hasFaceColor = isBitSet(type, 6);\n        hasFaceVertexColor = isBitSet(type, 7); // console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n        if (isQuad) {\n          faceA = new THREE.Face3();\n          faceA.a = faces[offset];\n          faceA.b = faces[offset + 1];\n          faceA.c = faces[offset + 3];\n          faceB = new THREE.Face3();\n          faceB.a = faces[offset + 1];\n          faceB.b = faces[offset + 2];\n          faceB.c = faces[offset + 3];\n          offset += 4;\n\n          if (hasMaterial) {\n            materialIndex = faces[offset++];\n            faceA.materialIndex = materialIndex;\n            faceB.materialIndex = materialIndex;\n          } // to get face <=> uv index correspondence\n\n\n          fi = geometry.faces.length;\n\n          if (hasFaceVertexUv) {\n            for (i = 0; i < nUvLayers; i++) {\n              uvLayer = json.uvs[i];\n              geometry.faceVertexUvs[i][fi] = [];\n              geometry.faceVertexUvs[i][fi + 1] = [];\n\n              for (j = 0; j < 4; j++) {\n                uvIndex = faces[offset++];\n                u = uvLayer[uvIndex * 2];\n                v = uvLayer[uvIndex * 2 + 1];\n                uv = new THREE.Vector2(u, v);\n                if (j !== 2) geometry.faceVertexUvs[i][fi].push(uv);\n                if (j !== 0) geometry.faceVertexUvs[i][fi + 1].push(uv);\n              }\n            }\n          }\n\n          if (hasFaceNormal) {\n            normalIndex = faces[offset++] * 3;\n            faceA.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n            faceB.normal.copy(faceA.normal);\n          }\n\n          if (hasFaceVertexNormal) {\n            for (i = 0; i < 4; i++) {\n              normalIndex = faces[offset++] * 3;\n              normal = new THREE.Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              if (i !== 2) faceA.vertexNormals.push(normal);\n              if (i !== 0) faceB.vertexNormals.push(normal);\n            }\n          }\n\n          if (hasFaceColor) {\n            colorIndex = faces[offset++];\n            hex = colors[colorIndex];\n            faceA.color.setHex(hex);\n            faceB.color.setHex(hex);\n          }\n\n          if (hasFaceVertexColor) {\n            for (i = 0; i < 4; i++) {\n              colorIndex = faces[offset++];\n              hex = colors[colorIndex];\n              if (i !== 2) faceA.vertexColors.push(new THREE.Color(hex));\n              if (i !== 0) faceB.vertexColors.push(new THREE.Color(hex));\n            }\n          }\n\n          geometry.faces.push(faceA);\n          geometry.faces.push(faceB);\n        } else {\n          face = new THREE.Face3();\n          face.a = faces[offset++];\n          face.b = faces[offset++];\n          face.c = faces[offset++];\n\n          if (hasMaterial) {\n            materialIndex = faces[offset++];\n            face.materialIndex = materialIndex;\n          } // to get face <=> uv index correspondence\n\n\n          fi = geometry.faces.length;\n\n          if (hasFaceVertexUv) {\n            for (i = 0; i < nUvLayers; i++) {\n              uvLayer = json.uvs[i];\n              geometry.faceVertexUvs[i][fi] = [];\n\n              for (j = 0; j < 3; j++) {\n                uvIndex = faces[offset++];\n                u = uvLayer[uvIndex * 2];\n                v = uvLayer[uvIndex * 2 + 1];\n                uv = new THREE.Vector2(u, v);\n                geometry.faceVertexUvs[i][fi].push(uv);\n              }\n            }\n          }\n\n          if (hasFaceNormal) {\n            normalIndex = faces[offset++] * 3;\n            face.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n          }\n\n          if (hasFaceVertexNormal) {\n            for (i = 0; i < 3; i++) {\n              normalIndex = faces[offset++] * 3;\n              normal = new THREE.Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              face.vertexNormals.push(normal);\n            }\n          }\n\n          if (hasFaceColor) {\n            colorIndex = faces[offset++];\n            face.color.setHex(colors[colorIndex]);\n          }\n\n          if (hasFaceVertexColor) {\n            for (i = 0; i < 3; i++) {\n              colorIndex = faces[offset++];\n              face.vertexColors.push(new THREE.Color(colors[colorIndex]));\n            }\n          }\n\n          geometry.faces.push(face);\n        }\n      }\n    }\n\n    function parseSkin() {\n      var influencesPerVertex = json.influencesPerVertex !== undefined ? json.influencesPerVertex : 2;\n\n      if (json.skinWeights) {\n        for (var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex) {\n          var x = json.skinWeights[i];\n          var y = influencesPerVertex > 1 ? json.skinWeights[i + 1] : 0;\n          var z = influencesPerVertex > 2 ? json.skinWeights[i + 2] : 0;\n          var w = influencesPerVertex > 3 ? json.skinWeights[i + 3] : 0;\n          geometry.skinWeights.push(new THREE.Vector4(x, y, z, w));\n        }\n      }\n\n      if (json.skinIndices) {\n        for (var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex) {\n          var a = json.skinIndices[i];\n          var b = influencesPerVertex > 1 ? json.skinIndices[i + 1] : 0;\n          var c = influencesPerVertex > 2 ? json.skinIndices[i + 2] : 0;\n          var d = influencesPerVertex > 3 ? json.skinIndices[i + 3] : 0;\n          geometry.skinIndices.push(new THREE.Vector4(a, b, c, d));\n        }\n      }\n\n      geometry.bones = json.bones;\n\n      if (geometry.bones && geometry.bones.length > 0 && (geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length)) {\n        console.warn('When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' + geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.');\n      }\n    }\n\n    function parseMorphing(scale) {\n      if (json.morphTargets !== undefined) {\n        for (var i = 0, l = json.morphTargets.length; i < l; i++) {\n          geometry.morphTargets[i] = {};\n          geometry.morphTargets[i].name = json.morphTargets[i].name;\n          geometry.morphTargets[i].vertices = [];\n          var dstVertices = geometry.morphTargets[i].vertices;\n          var srcVertices = json.morphTargets[i].vertices;\n\n          for (var v = 0, vl = srcVertices.length; v < vl; v += 3) {\n            var vertex = new THREE.Vector3();\n            vertex.x = srcVertices[v] * scale;\n            vertex.y = srcVertices[v + 1] * scale;\n            vertex.z = srcVertices[v + 2] * scale;\n            dstVertices.push(vertex);\n          }\n        }\n      }\n\n      if (json.morphColors !== undefined && json.morphColors.length > 0) {\n        console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');\n        var faces = geometry.faces;\n        var morphColors = json.morphColors[0].colors;\n\n        for (var i = 0, l = faces.length; i < l; i++) {\n          faces[i].color.fromArray(morphColors, i * 3);\n        }\n      }\n    }\n\n    function parseAnimations() {\n      var outputAnimations = []; // parse old style Bone/Hierarchy animations\n\n      var animations = [];\n\n      if (json.animation !== undefined) {\n        animations.push(json.animation);\n      }\n\n      if (json.animations !== undefined) {\n        if (json.animations.length) {\n          animations = animations.concat(json.animations);\n        } else {\n          animations.push(json.animations);\n        }\n      }\n\n      for (var i = 0; i < animations.length; i++) {\n        var clip = THREE.AnimationClip.parseAnimation(animations[i], geometry.bones);\n        if (clip) outputAnimations.push(clip);\n      } // parse implicit morph animations\n\n\n      if (geometry.morphTargets) {\n        // TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n        var morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences(geometry.morphTargets, 10);\n        outputAnimations = outputAnimations.concat(morphAnimationClips);\n      }\n\n      if (outputAnimations.length > 0) geometry.animations = outputAnimations;\n    }\n\n    if (json.materials === undefined || json.materials.length === 0) {\n      return {\n        geometry: geometry\n      };\n    } else {\n      var materials = THREE.Loader.prototype.initMaterials(json.materials, texturePath, this.crossOrigin);\n      return {\n        geometry: geometry,\n        materials: materials\n      };\n    }\n  }\n}; // File:src/loaders/LoadingManager.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.LoadingManager = function (onLoad, onProgress, onError) {\n  var scope = this;\n  var isLoading = false,\n      itemsLoaded = 0,\n      itemsTotal = 0;\n  this.onStart = undefined;\n  this.onLoad = onLoad;\n  this.onProgress = onProgress;\n  this.onError = onError;\n\n  this.itemStart = function (url) {\n    itemsTotal++;\n\n    if (isLoading === false) {\n      if (scope.onStart !== undefined) {\n        scope.onStart(url, itemsLoaded, itemsTotal);\n      }\n    }\n\n    isLoading = true;\n  };\n\n  this.itemEnd = function (url) {\n    itemsLoaded++;\n\n    if (scope.onProgress !== undefined) {\n      scope.onProgress(url, itemsLoaded, itemsTotal);\n    }\n\n    if (itemsLoaded === itemsTotal) {\n      isLoading = false;\n\n      if (scope.onLoad !== undefined) {\n        scope.onLoad();\n      }\n    }\n  };\n\n  this.itemError = function (url) {\n    if (scope.onError !== undefined) {\n      scope.onError(url);\n    }\n  };\n};\n\nTHREE.DefaultLoadingManager = new THREE.LoadingManager(); // File:src/loaders/BufferGeometryLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.BufferGeometryLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.BufferGeometryLoader.prototype = {\n  constructor: THREE.BufferGeometryLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.XHRLoader(scope.manager);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  parse: function (json) {\n    var geometry = new THREE.BufferGeometry();\n    var index = json.data.index;\n    var TYPED_ARRAYS = {\n      'Int8Array': Int8Array,\n      'Uint8Array': Uint8Array,\n      'Uint8ClampedArray': Uint8ClampedArray,\n      'Int16Array': Int16Array,\n      'Uint16Array': Uint16Array,\n      'Int32Array': Int32Array,\n      'Uint32Array': Uint32Array,\n      'Float32Array': Float32Array,\n      'Float64Array': Float64Array\n    };\n\n    if (index !== undefined) {\n      var typedArray = new TYPED_ARRAYS[index.type](index.array);\n      geometry.setIndex(new THREE.BufferAttribute(typedArray, 1));\n    }\n\n    var attributes = json.data.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n      geometry.addAttribute(key, new THREE.BufferAttribute(typedArray, attribute.itemSize, attribute.normalized));\n    }\n\n    var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n    if (groups !== undefined) {\n      for (var i = 0, n = groups.length; i !== n; ++i) {\n        var group = groups[i];\n        geometry.addGroup(group.start, group.count, group.materialIndex);\n      }\n    }\n\n    var boundingSphere = json.data.boundingSphere;\n\n    if (boundingSphere !== undefined) {\n      var center = new THREE.Vector3();\n\n      if (boundingSphere.center !== undefined) {\n        center.fromArray(boundingSphere.center);\n      }\n\n      geometry.boundingSphere = new THREE.Sphere(center, boundingSphere.radius);\n    }\n\n    return geometry;\n  }\n}; // File:src/loaders/MaterialLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.MaterialLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  this.textures = {};\n};\n\nTHREE.MaterialLoader.prototype = {\n  constructor: THREE.MaterialLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.XHRLoader(scope.manager);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  setTextures: function (value) {\n    this.textures = value;\n  },\n  getTexture: function (name) {\n    var textures = this.textures;\n\n    if (textures[name] === undefined) {\n      console.warn('THREE.MaterialLoader: Undefined texture', name);\n    }\n\n    return textures[name];\n  },\n  parse: function (json) {\n    var material = new THREE[json.type]();\n    if (json.uuid !== undefined) material.uuid = json.uuid;\n    if (json.name !== undefined) material.name = json.name;\n    if (json.color !== undefined) material.color.setHex(json.color);\n    if (json.roughness !== undefined) material.roughness = json.roughness;\n    if (json.metalness !== undefined) material.metalness = json.metalness;\n    if (json.emissive !== undefined) material.emissive.setHex(json.emissive);\n    if (json.specular !== undefined) material.specular.setHex(json.specular);\n    if (json.shininess !== undefined) material.shininess = json.shininess;\n    if (json.uniforms !== undefined) material.uniforms = json.uniforms;\n    if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n    if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n    if (json.vertexColors !== undefined) material.vertexColors = json.vertexColors;\n    if (json.shading !== undefined) material.shading = json.shading;\n    if (json.blending !== undefined) material.blending = json.blending;\n    if (json.side !== undefined) material.side = json.side;\n    if (json.opacity !== undefined) material.opacity = json.opacity;\n    if (json.transparent !== undefined) material.transparent = json.transparent;\n    if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n    if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n    if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n    if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n    if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n    if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth; // for PointsMaterial\n\n    if (json.size !== undefined) material.size = json.size;\n    if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n    if (json.map !== undefined) material.map = this.getTexture(json.map);\n\n    if (json.alphaMap !== undefined) {\n      material.alphaMap = this.getTexture(json.alphaMap);\n      material.transparent = true;\n    }\n\n    if (json.bumpMap !== undefined) material.bumpMap = this.getTexture(json.bumpMap);\n    if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n    if (json.normalMap !== undefined) material.normalMap = this.getTexture(json.normalMap);\n\n    if (json.normalScale !== undefined) {\n      var normalScale = json.normalScale;\n\n      if (Array.isArray(normalScale) === false) {\n        // Blender exporter used to export a scalar. See #7459\n        normalScale = [normalScale, normalScale];\n      }\n\n      material.normalScale = new THREE.Vector2().fromArray(normalScale);\n    }\n\n    if (json.displacementMap !== undefined) material.displacementMap = this.getTexture(json.displacementMap);\n    if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n    if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n    if (json.roughnessMap !== undefined) material.roughnessMap = this.getTexture(json.roughnessMap);\n    if (json.metalnessMap !== undefined) material.metalnessMap = this.getTexture(json.metalnessMap);\n    if (json.emissiveMap !== undefined) material.emissiveMap = this.getTexture(json.emissiveMap);\n    if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n    if (json.specularMap !== undefined) material.specularMap = this.getTexture(json.specularMap);\n\n    if (json.envMap !== undefined) {\n      material.envMap = this.getTexture(json.envMap);\n      material.combine = THREE.MultiplyOperation;\n    }\n\n    if (json.reflectivity) material.reflectivity = json.reflectivity;\n    if (json.lightMap !== undefined) material.lightMap = this.getTexture(json.lightMap);\n    if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n    if (json.aoMap !== undefined) material.aoMap = this.getTexture(json.aoMap);\n    if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity; // MultiMaterial\n\n    if (json.materials !== undefined) {\n      for (var i = 0, l = json.materials.length; i < l; i++) {\n        material.materials.push(this.parse(json.materials[i]));\n      }\n    }\n\n    return material;\n  }\n}; // File:src/loaders/ObjectLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.ObjectLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  this.texturePath = '';\n};\n\nTHREE.ObjectLoader.prototype = {\n  constructor: THREE.ObjectLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    if (this.texturePath === '') {\n      this.texturePath = url.substring(0, url.lastIndexOf('/') + 1);\n    }\n\n    var scope = this;\n    var loader = new THREE.XHRLoader(scope.manager);\n    loader.load(url, function (text) {\n      scope.parse(JSON.parse(text), onLoad);\n    }, onProgress, onError);\n  },\n  setTexturePath: function (value) {\n    this.texturePath = value;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  parse: function (json, onLoad) {\n    var geometries = this.parseGeometries(json.geometries);\n    var images = this.parseImages(json.images, function () {\n      if (onLoad !== undefined) onLoad(object);\n    });\n    var textures = this.parseTextures(json.textures, images);\n    var materials = this.parseMaterials(json.materials, textures);\n    var object = this.parseObject(json.object, geometries, materials);\n\n    if (json.animations) {\n      object.animations = this.parseAnimations(json.animations);\n    }\n\n    if (json.images === undefined || json.images.length === 0) {\n      if (onLoad !== undefined) onLoad(object);\n    }\n\n    return object;\n  },\n  parseGeometries: function (json) {\n    var geometries = {};\n\n    if (json !== undefined) {\n      var geometryLoader = new THREE.JSONLoader();\n      var bufferGeometryLoader = new THREE.BufferGeometryLoader();\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var geometry;\n        var data = json[i];\n\n        switch (data.type) {\n          case 'PlaneGeometry':\n          case 'PlaneBufferGeometry':\n            geometry = new THREE[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n            break;\n\n          case 'BoxGeometry':\n          case 'BoxBufferGeometry':\n          case 'CubeGeometry':\n            // backwards compatible\n            geometry = new THREE[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n            break;\n\n          case 'CircleGeometry':\n          case 'CircleBufferGeometry':\n            geometry = new THREE[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'CylinderGeometry':\n          case 'CylinderBufferGeometry':\n            geometry = new THREE[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'ConeGeometry':\n          case 'ConeBufferGeometry':\n            geometry = new THREE[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'SphereGeometry':\n          case 'SphereBufferGeometry':\n            geometry = new THREE[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'DodecahedronGeometry':\n          case 'IcosahedronGeometry':\n          case 'OctahedronGeometry':\n          case 'TetrahedronGeometry':\n            geometry = new THREE[data.type](data.radius, data.detail);\n            break;\n\n          case 'RingGeometry':\n          case 'RingBufferGeometry':\n            geometry = new THREE[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'TorusGeometry':\n          case 'TorusBufferGeometry':\n            geometry = new THREE[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n            break;\n\n          case 'TorusKnotGeometry':\n          case 'TorusKnotBufferGeometry':\n            geometry = new THREE[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n            break;\n\n          case 'LatheGeometry':\n          case 'LatheBufferGeometry':\n            geometry = new THREE[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n            break;\n\n          case 'BufferGeometry':\n            geometry = bufferGeometryLoader.parse(data);\n            break;\n\n          case 'Geometry':\n            geometry = geometryLoader.parse(data.data, this.texturePath).geometry;\n            break;\n\n          default:\n            console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n            continue;\n        }\n\n        geometry.uuid = data.uuid;\n        if (data.name !== undefined) geometry.name = data.name;\n        geometries[data.uuid] = geometry;\n      }\n    }\n\n    return geometries;\n  },\n  parseMaterials: function (json, textures) {\n    var materials = {};\n\n    if (json !== undefined) {\n      var loader = new THREE.MaterialLoader();\n      loader.setTextures(textures);\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var material = loader.parse(json[i]);\n        materials[material.uuid] = material;\n      }\n    }\n\n    return materials;\n  },\n  parseAnimations: function (json) {\n    var animations = [];\n\n    for (var i = 0; i < json.length; i++) {\n      var clip = THREE.AnimationClip.parse(json[i]);\n      animations.push(clip);\n    }\n\n    return animations;\n  },\n  parseImages: function (json, onLoad) {\n    var scope = this;\n    var images = {};\n\n    function loadImage(url) {\n      scope.manager.itemStart(url);\n      return loader.load(url, function () {\n        scope.manager.itemEnd(url);\n      });\n    }\n\n    if (json !== undefined && json.length > 0) {\n      var manager = new THREE.LoadingManager(onLoad);\n      var loader = new THREE.ImageLoader(manager);\n      loader.setCrossOrigin(this.crossOrigin);\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var image = json[i];\n        var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.texturePath + image.url;\n        images[image.uuid] = loadImage(path);\n      }\n    }\n\n    return images;\n  },\n  parseTextures: function (json, images) {\n    function parseConstant(value) {\n      if (typeof value === 'number') return value;\n      console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n      return THREE[value];\n    }\n\n    var textures = {};\n\n    if (json !== undefined) {\n      for (var i = 0, l = json.length; i < l; i++) {\n        var data = json[i];\n\n        if (data.image === undefined) {\n          console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n        }\n\n        if (images[data.image] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined image', data.image);\n        }\n\n        var texture = new THREE.Texture(images[data.image]);\n        texture.needsUpdate = true;\n        texture.uuid = data.uuid;\n        if (data.name !== undefined) texture.name = data.name;\n        if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping);\n        if (data.offset !== undefined) texture.offset = new THREE.Vector2(data.offset[0], data.offset[1]);\n        if (data.repeat !== undefined) texture.repeat = new THREE.Vector2(data.repeat[0], data.repeat[1]);\n        if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter);\n        if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter);\n        if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n\n        if (Array.isArray(data.wrap)) {\n          texture.wrapS = parseConstant(data.wrap[0]);\n          texture.wrapT = parseConstant(data.wrap[1]);\n        }\n\n        textures[data.uuid] = texture;\n      }\n    }\n\n    return textures;\n  },\n  parseObject: function () {\n    var matrix = new THREE.Matrix4();\n    return function (data, geometries, materials) {\n      var object;\n\n      function getGeometry(name) {\n        if (geometries[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined geometry', name);\n        }\n\n        return geometries[name];\n      }\n\n      function getMaterial(name) {\n        if (name === undefined) return undefined;\n\n        if (materials[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined material', name);\n        }\n\n        return materials[name];\n      }\n\n      switch (data.type) {\n        case 'Scene':\n          object = new THREE.Scene();\n          break;\n\n        case 'PerspectiveCamera':\n          object = new THREE.PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n          if (data.focus !== undefined) object.focus = data.focus;\n          if (data.zoom !== undefined) object.zoom = data.zoom;\n          if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n          if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\n          break;\n\n        case 'OrthographicCamera':\n          object = new THREE.OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n          break;\n\n        case 'AmbientLight':\n          object = new THREE.AmbientLight(data.color, data.intensity);\n          break;\n\n        case 'DirectionalLight':\n          object = new THREE.DirectionalLight(data.color, data.intensity);\n          break;\n\n        case 'PointLight':\n          object = new THREE.PointLight(data.color, data.intensity, data.distance, data.decay);\n          break;\n\n        case 'SpotLight':\n          object = new THREE.SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n          break;\n\n        case 'HemisphereLight':\n          object = new THREE.HemisphereLight(data.color, data.groundColor, data.intensity);\n          break;\n\n        case 'Mesh':\n          var geometry = getGeometry(data.geometry);\n          var material = getMaterial(data.material);\n\n          if (geometry.bones && geometry.bones.length > 0) {\n            object = new THREE.SkinnedMesh(geometry, material);\n          } else {\n            object = new THREE.Mesh(geometry, material);\n          }\n\n          break;\n\n        case 'LOD':\n          object = new THREE.LOD();\n          break;\n\n        case 'Line':\n          object = new THREE.Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n          break;\n\n        case 'PointCloud':\n        case 'Points':\n          object = new THREE.Points(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'Sprite':\n          object = new THREE.Sprite(getMaterial(data.material));\n          break;\n\n        case 'Group':\n          object = new THREE.Group();\n          break;\n\n        default:\n          object = new THREE.Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        matrix.fromArray(data.matrix);\n        matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.userData !== undefined) object.userData = data.userData;\n\n      if (data.children !== undefined) {\n        for (var child in data.children) {\n          object.add(this.parseObject(data.children[child], geometries, materials));\n        }\n      }\n\n      if (data.type === 'LOD') {\n        var levels = data.levels;\n\n        for (var l = 0; l < levels.length; l++) {\n          var level = levels[l];\n          var child = object.getObjectByProperty('uuid', level.object);\n\n          if (child !== undefined) {\n            object.addLevel(child, level.distance);\n          }\n        }\n      }\n\n      return object;\n    };\n  }()\n}; // File:src/loaders/TextureLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.TextureLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.TextureLoader.prototype = {\n  constructor: THREE.TextureLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var texture = new THREE.Texture();\n    var loader = new THREE.ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    loader.load(url, function (image) {\n      texture.image = image;\n      texture.needsUpdate = true;\n\n      if (onLoad !== undefined) {\n        onLoad(texture);\n      }\n    }, onProgress, onError);\n    return texture;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  setPath: function (value) {\n    this.path = value;\n  }\n}; // File:src/loaders/CubeTextureLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.CubeTextureLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.CubeTextureLoader.prototype = {\n  constructor: THREE.CubeTextureLoader,\n  load: function (urls, onLoad, onProgress, onError) {\n    var texture = new THREE.CubeTexture();\n    var loader = new THREE.ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    var loaded = 0;\n\n    function loadTexture(i) {\n      loader.load(urls[i], function (image) {\n        texture.images[i] = image;\n        loaded++;\n\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    }\n\n    for (var i = 0; i < urls.length; ++i) {\n      loadTexture(i);\n    }\n\n    return texture;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  setPath: function (value) {\n    this.path = value;\n  }\n}; // File:src/loaders/BinaryTextureLoader.js\n\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\n\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager; // override in sub classes\n\n  this._parser = null;\n};\n\nTHREE.BinaryTextureLoader.prototype = {\n  constructor: THREE.BinaryTextureLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var texture = new THREE.DataTexture();\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (buffer) {\n      var texData = scope._parser(buffer);\n\n      if (!texData) return;\n\n      if (undefined !== texData.image) {\n        texture.image = texData.image;\n      } else if (undefined !== texData.data) {\n        texture.image.width = texData.width;\n        texture.image.height = texData.height;\n        texture.image.data = texData.data;\n      }\n\n      texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\n      texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\n      texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\n      texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\n      texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n      if (undefined !== texData.format) {\n        texture.format = texData.format;\n      }\n\n      if (undefined !== texData.type) {\n        texture.type = texData.type;\n      }\n\n      if (undefined !== texData.mipmaps) {\n        texture.mipmaps = texData.mipmaps;\n      }\n\n      if (1 === texData.mipmapCount) {\n        texture.minFilter = THREE.LinearFilter;\n      }\n\n      texture.needsUpdate = true;\n      if (onLoad) onLoad(texture, texData);\n    }, onProgress, onError);\n    return texture;\n  }\n}; // File:src/loaders/CompressedTextureLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\n\nTHREE.CompressedTextureLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager; // override in sub classes\n\n  this._parser = null;\n};\n\nTHREE.CompressedTextureLoader.prototype = {\n  constructor: THREE.CompressedTextureLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var images = [];\n    var texture = new THREE.CompressedTexture();\n    texture.image = images;\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n\n    function loadTexture(i) {\n      loader.load(url[i], function (buffer) {\n        var texDatas = scope._parser(buffer, true);\n\n        images[i] = {\n          width: texDatas.width,\n          height: texDatas.height,\n          format: texDatas.format,\n          mipmaps: texDatas.mipmaps\n        };\n        loaded += 1;\n\n        if (loaded === 6) {\n          if (texDatas.mipmapCount === 1) texture.minFilter = THREE.LinearFilter;\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, onProgress, onError);\n    }\n\n    if (Array.isArray(url)) {\n      var loaded = 0;\n\n      for (var i = 0, il = url.length; i < il; ++i) {\n        loadTexture(i);\n      }\n    } else {\n      // compressed cubemap texture stored in a single DDS file\n      loader.load(url, function (buffer) {\n        var texDatas = scope._parser(buffer, true);\n\n        if (texDatas.isCubemap) {\n          var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n          for (var f = 0; f < faces; f++) {\n            images[f] = {\n              mipmaps: []\n            };\n\n            for (var i = 0; i < texDatas.mipmapCount; i++) {\n              images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n              images[f].format = texDatas.format;\n              images[f].width = texDatas.width;\n              images[f].height = texDatas.height;\n            }\n          }\n        } else {\n          texture.image.width = texDatas.width;\n          texture.image.height = texDatas.height;\n          texture.mipmaps = texDatas.mipmaps;\n        }\n\n        if (texDatas.mipmapCount === 1) {\n          texture.minFilter = THREE.LinearFilter;\n        }\n\n        texture.format = texDatas.format;\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture);\n      }, onProgress, onError);\n    }\n\n    return texture;\n  },\n  setPath: function (value) {\n    this.path = value;\n  }\n}; // File:src/materials/Material.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Material = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.MaterialIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Material';\n  this.fog = true;\n  this.lights = true;\n  this.blending = THREE.NormalBlending;\n  this.side = THREE.FrontSide;\n  this.shading = THREE.SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\n  this.vertexColors = THREE.NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n  this.opacity = 1;\n  this.transparent = false;\n  this.blendSrc = THREE.SrcAlphaFactor;\n  this.blendDst = THREE.OneMinusSrcAlphaFactor;\n  this.blendEquation = THREE.AddEquation;\n  this.blendSrcAlpha = null;\n  this.blendDstAlpha = null;\n  this.blendEquationAlpha = null;\n  this.depthFunc = THREE.LessEqualDepth;\n  this.depthTest = true;\n  this.depthWrite = true;\n  this.clippingPlanes = null;\n  this.clipShadows = false;\n  this.colorWrite = true;\n  this.precision = null; // override the renderer's default precision for this material\n\n  this.polygonOffset = false;\n  this.polygonOffsetFactor = 0;\n  this.polygonOffsetUnits = 0;\n  this.alphaTest = 0;\n  this.premultipliedAlpha = false;\n  this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n  this.visible = true;\n  this._needsUpdate = true;\n};\n\nTHREE.Material.prototype = {\n  constructor: THREE.Material,\n\n  get needsUpdate() {\n    return this._needsUpdate;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.update();\n    this._needsUpdate = value;\n  },\n\n  setValues: function (values) {\n    if (values === undefined) return;\n\n    for (var key in values) {\n      var newValue = values[key];\n\n      if (newValue === undefined) {\n        console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n        continue;\n      }\n\n      var currentValue = this[key];\n\n      if (currentValue === undefined) {\n        console.warn(\"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\");\n        continue;\n      }\n\n      if (currentValue instanceof THREE.Color) {\n        currentValue.set(newValue);\n      } else if (currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3) {\n        currentValue.copy(newValue);\n      } else if (key === 'overdraw') {\n        // ensure overdraw is backwards-compatible with legacy boolean type\n        this[key] = Number(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  },\n  toJSON: function (meta) {\n    var isRoot = meta === undefined;\n\n    if (isRoot) {\n      meta = {\n        textures: {},\n        images: {}\n      };\n    }\n\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    }; // standard Material serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.color instanceof THREE.Color) data.color = this.color.getHex();\n    if (this.roughness !== 0.5) data.roughness = this.roughness;\n    if (this.metalness !== 0.5) data.metalness = this.metalness;\n    if (this.emissive instanceof THREE.Color) data.emissive = this.emissive.getHex();\n    if (this.specular instanceof THREE.Color) data.specular = this.specular.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.map instanceof THREE.Texture) data.map = this.map.toJSON(meta).uuid;\n    if (this.alphaMap instanceof THREE.Texture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n    if (this.lightMap instanceof THREE.Texture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n    if (this.bumpMap instanceof THREE.Texture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n\n    if (this.normalMap instanceof THREE.Texture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalScale = this.normalScale.toArray();\n    }\n\n    if (this.displacementMap instanceof THREE.Texture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n\n    if (this.roughnessMap instanceof THREE.Texture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if (this.metalnessMap instanceof THREE.Texture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n    if (this.emissiveMap instanceof THREE.Texture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if (this.specularMap instanceof THREE.Texture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n    if (this.envMap instanceof THREE.Texture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      data.reflectivity = this.reflectivity; // Scale behind envMap\n    }\n\n    if (this.size !== undefined) data.size = this.size;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.blending !== THREE.NormalBlending) data.blending = this.blending;\n    if (this.shading !== THREE.SmoothShading) data.shading = this.shading;\n    if (this.side !== THREE.FrontSide) data.side = this.side;\n    if (this.vertexColors !== THREE.NoColors) data.vertexColors = this.vertexColors;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = this.transparent;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth; // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n\n    if (isRoot) {\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n\n    return data;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.name = source.name;\n    this.fog = source.fog;\n    this.lights = source.lights;\n    this.blending = source.blending;\n    this.side = source.side;\n    this.vertexColors = source.vertexColors;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.colorWrite = source.colorWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.alphaTest = source.alphaTest;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n    this.overdraw = source.overdraw;\n    this.visible = source.visible;\n    this.clipShadows = source.clipShadows;\n    var srcPlanes = source.clippingPlanes,\n        dstPlanes = null;\n\n    if (srcPlanes !== null) {\n      var n = srcPlanes.length;\n      dstPlanes = new Array(n);\n\n      for (var i = 0; i !== n; ++i) dstPlanes[i] = srcPlanes[i].clone();\n    }\n\n    this.clippingPlanes = dstPlanes;\n    return this;\n  },\n  update: function () {\n    this.dispatchEvent({\n      type: 'update'\n    });\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nObject.assign(THREE.Material.prototype, THREE.EventDispatcher.prototype);\nTHREE.MaterialIdCount = 0; // File:src/materials/LineBasicMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\"\r\n * }\r\n */\n\nTHREE.LineBasicMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'LineBasicMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.linewidth = 1;\n  this.linecap = 'round';\n  this.linejoin = 'round';\n  this.lights = false;\n  this.setValues(parameters);\n};\n\nTHREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\n\nTHREE.LineBasicMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.linecap = source.linecap;\n  this.linejoin = source.linejoin;\n  return this;\n}; // File:src/materials/LineDashedMaterial.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>\r\n * }\r\n */\n\n\nTHREE.LineDashedMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'LineDashedMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.linewidth = 1;\n  this.scale = 1;\n  this.dashSize = 3;\n  this.gapSize = 1;\n  this.lights = false;\n  this.setValues(parameters);\n};\n\nTHREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\n\nTHREE.LineDashedMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.scale = source.scale;\n  this.dashSize = source.dashSize;\n  this.gapSize = source.gapSize;\n  return this;\n}; // File:src/materials/MeshBasicMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>\r\n * }\r\n */\n\n\nTHREE.MeshBasicMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshBasicMaterial';\n  this.color = new THREE.Color(0xffffff); // emissive\n\n  this.map = null;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.lights = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\n\nTHREE.MeshBasicMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  return this;\n}; // File:src/materials/MeshDepthMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / https://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\n\n\nTHREE.MeshDepthMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshDepthMaterial';\n  this.depthPacking = THREE.BasicDepthPacking;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.map = null;\n  this.alphaMap = null;\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false;\n  this.lights = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\n\nTHREE.MeshDepthMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.depthPacking = source.depthPacking;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.map = source.map;\n  this.alphaMap = source.alphaMap;\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n}; // File:src/materials/MeshLambertMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\n\n\nTHREE.MeshLambertMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshLambertMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new THREE.Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\n\nTHREE.MeshLambertMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MeshNormalMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\n\n\nTHREE.MeshNormalMaterial = function (parameters) {\n  THREE.Material.call(this, parameters);\n  this.type = 'MeshNormalMaterial';\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false;\n  this.lights = false;\n  this.morphTargets = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\n\nTHREE.MeshNormalMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n}; // File:src/materials/MeshPhongMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\n\n\nTHREE.MeshPhongMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshPhongMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.specular = new THREE.Color(0x111111);\n  this.shininess = 30;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new THREE.Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new THREE.Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\n\nTHREE.MeshPhongMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.specular.copy(source.specular);\n  this.shininess = source.shininess;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MeshStandardMaterial.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  roughness: <float>,\r\n *  metalness: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  roughnessMap: new THREE.Texture( <Image> ),\r\n *\r\n *  metalnessMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n *  envMapIntensity: <float>\r\n *\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\n\n\nTHREE.MeshStandardMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.defines = {\n    'STANDARD': ''\n  };\n  this.type = 'MeshStandardMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.roughness = 0.5;\n  this.metalness = 0.5;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new THREE.Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new THREE.Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.roughnessMap = null;\n  this.metalnessMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.envMapIntensity = 1.0;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshStandardMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\n\nTHREE.MeshStandardMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.defines = {\n    'STANDARD': ''\n  };\n  this.color.copy(source.color);\n  this.roughness = source.roughness;\n  this.metalness = source.metalness;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.roughnessMap = source.roughnessMap;\n  this.metalnessMap = source.metalnessMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.envMapIntensity = source.envMapIntensity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MeshPhysicalMaterial.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *  reflectivity: <float>\r\n * }\r\n */\n\n\nTHREE.MeshPhysicalMaterial = function (parameters) {\n  THREE.MeshStandardMaterial.call(this);\n  this.defines = {\n    'PHYSICAL': ''\n  };\n  this.type = 'MeshPhysicalMaterial';\n  this.reflectivity = 0.5; // maps to F0 = 0.04\n\n  this.setValues(parameters);\n};\n\nTHREE.MeshPhysicalMaterial.prototype = Object.create(THREE.MeshStandardMaterial.prototype);\nTHREE.MeshPhysicalMaterial.prototype.constructor = THREE.MeshPhysicalMaterial;\n\nTHREE.MeshPhysicalMaterial.prototype.copy = function (source) {\n  THREE.MeshStandardMaterial.prototype.copy.call(this, source);\n  this.defines = {\n    'PHYSICAL': ''\n  };\n  this.reflectivity = source.reflectivity;\n  return this;\n}; // File:src/materials/MultiMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.MultiMaterial = function (materials) {\n  this.uuid = THREE.Math.generateUUID();\n  this.type = 'MultiMaterial';\n  this.materials = materials instanceof Array ? materials : [];\n  this.visible = true;\n};\n\nTHREE.MultiMaterial.prototype = {\n  constructor: THREE.MultiMaterial,\n  toJSON: function (meta) {\n    var output = {\n      metadata: {\n        version: 4.2,\n        type: 'material',\n        generator: 'MaterialExporter'\n      },\n      uuid: this.uuid,\n      type: this.type,\n      materials: []\n    };\n    var materials = this.materials;\n\n    for (var i = 0, l = materials.length; i < l; i++) {\n      var material = materials[i].toJSON(meta);\n      delete material.metadata;\n      output.materials.push(material);\n    }\n\n    output.visible = this.visible;\n    return output;\n  },\n  clone: function () {\n    var material = new this.constructor();\n\n    for (var i = 0; i < this.materials.length; i++) {\n      material.materials.push(this.materials[i].clone());\n    }\n\n    material.visible = this.visible;\n    return material;\n  }\n}; // File:src/materials/PointsMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>\r\n * }\r\n */\n\nTHREE.PointsMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'PointsMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.map = null;\n  this.size = 1;\n  this.sizeAttenuation = true;\n  this.lights = false;\n  this.setValues(parameters);\n};\n\nTHREE.PointsMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\n\nTHREE.PointsMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.size = source.size;\n  this.sizeAttenuation = source.sizeAttenuation;\n  return this;\n}; // File:src/materials/ShaderMaterial.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"1f\", value: 1.0 }, \"parameter2\": { type: \"1i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\n\n\nTHREE.ShaderMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'ShaderMaterial';\n  this.defines = {};\n  this.uniforms = {};\n  this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n  this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n  this.linewidth = 1;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false; // set to use scene fog\n\n  this.lights = false; // set to use scene lights\n\n  this.clipping = false; // set to use user-defined clipping planes\n\n  this.skinning = false; // set to use skinning attribute streams\n\n  this.morphTargets = false; // set to use morph targets\n\n  this.morphNormals = false; // set to use morph normals\n\n  this.extensions = {\n    derivatives: false,\n    // set to use derivatives\n    fragDepth: false,\n    // set to use fragment depth values\n    drawBuffers: false,\n    // set to use draw buffers\n    shaderTextureLOD: false // set to use shader texture LOD\n\n  }; // When rendered geometry doesn't include these attributes but the material does,\n  // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n  this.defaultAttributeValues = {\n    'color': [1, 1, 1],\n    'uv': [0, 0],\n    'uv2': [0, 0]\n  };\n  this.index0AttributeName = undefined;\n\n  if (parameters !== undefined) {\n    if (parameters.attributes !== undefined) {\n      console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n    }\n\n    this.setValues(parameters);\n  }\n};\n\nTHREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\n\nTHREE.ShaderMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.fragmentShader = source.fragmentShader;\n  this.vertexShader = source.vertexShader;\n  this.uniforms = THREE.UniformsUtils.clone(source.uniforms);\n  this.defines = source.defines;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.lights = source.lights;\n  this.clipping = source.clipping;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  this.extensions = source.extensions;\n  return this;\n};\n\nTHREE.ShaderMaterial.prototype.toJSON = function (meta) {\n  var data = THREE.Material.prototype.toJSON.call(this, meta);\n  data.uniforms = this.uniforms;\n  data.vertexShader = this.vertexShader;\n  data.fragmentShader = this.fragmentShader;\n  return data;\n}; // File:src/materials/RawShaderMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.RawShaderMaterial = function (parameters) {\n  THREE.ShaderMaterial.call(this, parameters);\n  this.type = 'RawShaderMaterial';\n};\n\nTHREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial; // File:src/materials/SpriteMaterial.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2()\r\n * }\r\n */\n\nTHREE.SpriteMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'SpriteMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.map = null;\n  this.rotation = 0;\n  this.fog = false;\n  this.lights = false;\n  this.setValues(parameters);\n};\n\nTHREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\n\nTHREE.SpriteMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.rotation = source.rotation;\n  return this;\n}; // File:src/materials/ShadowMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.ShadowMaterial = function () {\n  THREE.ShaderMaterial.call(this, {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"lights\"], {\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['shadow_vert'],\n    fragmentShader: THREE.ShaderChunk['shadow_frag']\n  });\n  this.lights = true;\n  this.transparent = true;\n  Object.defineProperties(this, {\n    opacity: {\n      enumerable: true,\n      get: function () {\n        return this.uniforms.opacity.value;\n      },\n      set: function (value) {\n        this.uniforms.opacity.value = value;\n      }\n    }\n  });\n};\n\nTHREE.ShadowMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);\nTHREE.ShadowMaterial.prototype.constructor = THREE.ShadowMaterial; // File:src/textures/Texture.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\n\nTHREE.Texture = function (image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n  Object.defineProperty(this, 'id', {\n    value: THREE.TextureIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.sourceFile = '';\n  this.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\n  this.mipmaps = [];\n  this.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\n  this.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\n  this.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\n  this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n  this.format = format !== undefined ? format : THREE.RGBAFormat;\n  this.type = type !== undefined ? type : THREE.UnsignedByteType;\n  this.offset = new THREE.Vector2(0, 0);\n  this.repeat = new THREE.Vector2(1, 1);\n  this.generateMipmaps = true;\n  this.premultiplyAlpha = false;\n  this.flipY = true;\n  this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n  // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n  //\n  // Also changing the encoding after already used by a Material will not automatically make the Material\n  // update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n  this.encoding = encoding !== undefined ? encoding : THREE.LinearEncoding;\n  this.version = 0;\n  this.onUpdate = null;\n};\n\nTHREE.Texture.DEFAULT_IMAGE = undefined;\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\nTHREE.Texture.prototype = {\n  constructor: THREE.Texture,\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.image = source.image;\n    this.mipmaps = source.mipmaps.slice(0);\n    this.mapping = source.mapping;\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n    this.anisotropy = source.anisotropy;\n    this.format = source.format;\n    this.type = source.type;\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.generateMipmaps = source.generateMipmaps;\n    this.premultiplyAlpha = source.premultiplyAlpha;\n    this.flipY = source.flipY;\n    this.unpackAlignment = source.unpackAlignment;\n    this.encoding = source.encoding;\n    return this;\n  },\n  toJSON: function (meta) {\n    if (meta.textures[this.uuid] !== undefined) {\n      return meta.textures[this.uuid];\n    }\n\n    function getDataURL(image) {\n      var canvas;\n\n      if (image.toDataURL !== undefined) {\n        canvas = image;\n      } else {\n        canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        canvas.getContext('2d').drawImage(image, 0, 0, image.width, image.height);\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n\n    var output = {\n      metadata: {\n        version: 4.4,\n        type: 'Texture',\n        generator: 'Texture.toJSON'\n      },\n      uuid: this.uuid,\n      name: this.name,\n      mapping: this.mapping,\n      repeat: [this.repeat.x, this.repeat.y],\n      offset: [this.offset.x, this.offset.y],\n      wrap: [this.wrapS, this.wrapT],\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      anisotropy: this.anisotropy\n    };\n\n    if (this.image !== undefined) {\n      // TODO: Move to THREE.Image\n      var image = this.image;\n\n      if (image.uuid === undefined) {\n        image.uuid = THREE.Math.generateUUID(); // UGH\n      }\n\n      if (meta.images[image.uuid] === undefined) {\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: getDataURL(image)\n        };\n      }\n\n      output.image = image.uuid;\n    }\n\n    meta.textures[this.uuid] = output;\n    return output;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  },\n  transformUv: function (uv) {\n    if (this.mapping !== THREE.UVMapping) return;\n    uv.multiply(this.repeat);\n    uv.add(this.offset);\n\n    if (uv.x < 0 || uv.x > 1) {\n      switch (this.wrapS) {\n        case THREE.RepeatWrapping:\n          uv.x = uv.x - Math.floor(uv.x);\n          break;\n\n        case THREE.ClampToEdgeWrapping:\n          uv.x = uv.x < 0 ? 0 : 1;\n          break;\n\n        case THREE.MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n            uv.x = Math.ceil(uv.x) - uv.x;\n          } else {\n            uv.x = uv.x - Math.floor(uv.x);\n          }\n\n          break;\n      }\n    }\n\n    if (uv.y < 0 || uv.y > 1) {\n      switch (this.wrapT) {\n        case THREE.RepeatWrapping:\n          uv.y = uv.y - Math.floor(uv.y);\n          break;\n\n        case THREE.ClampToEdgeWrapping:\n          uv.y = uv.y < 0 ? 0 : 1;\n          break;\n\n        case THREE.MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n            uv.y = Math.ceil(uv.y) - uv.y;\n          } else {\n            uv.y = uv.y - Math.floor(uv.y);\n          }\n\n          break;\n      }\n    }\n\n    if (this.flipY) {\n      uv.y = 1 - uv.y;\n    }\n  }\n};\nObject.assign(THREE.Texture.prototype, THREE.EventDispatcher.prototype);\nTHREE.TextureIdCount = 0; // File:src/textures/DepthTexture.js\n\n/**\r\n * @author Matt DesLauriers / @mattdesl\r\n */\n\nTHREE.DepthTexture = function (width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, THREE.DepthFormat, type, anisotropy);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.type = type !== undefined ? type : THREE.UnsignedShortType;\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n  this.flipY = false;\n  this.generateMipmaps = false;\n};\n\nTHREE.DepthTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.DepthTexture.prototype.constructor = THREE.DepthTexture; // File:src/textures/CanvasTexture.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.CanvasTexture = function (canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  THREE.Texture.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.needsUpdate = true;\n};\n\nTHREE.CanvasTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture; // File:src/textures/CubeTexture.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.CubeTexture = function (images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n  images = images !== undefined ? images : [];\n  mapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\n  THREE.Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.flipY = false;\n};\n\nTHREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\nObject.defineProperty(THREE.CubeTexture.prototype, 'images', {\n  get: function () {\n    return this.image;\n  },\n  set: function (value) {\n    this.image = value;\n  }\n}); // File:src/textures/CompressedTexture.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.CompressedTexture = function (mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.mipmaps = mipmaps; // no flipping for cube textures\n  // (also flipping doesn't work for compressed textures )\n\n  this.flipY = false; // can't generate mipmaps for compressed textures\n  // mips must be embedded in DDS files\n\n  this.generateMipmaps = false;\n};\n\nTHREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture; // File:src/textures/DataTexture.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.DataTexture = function (data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.image = {\n    data: data,\n    width: width,\n    height: height\n  };\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n  this.flipY = false;\n  this.generateMipmaps = false;\n};\n\nTHREE.DataTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture; // File:src/textures/VideoTexture.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.VideoTexture = function (video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  THREE.Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.generateMipmaps = false;\n  var scope = this;\n\n  function update() {\n    requestAnimationFrame(update);\n\n    if (video.readyState >= video.HAVE_CURRENT_DATA) {\n      scope.needsUpdate = true;\n    }\n  }\n\n  update();\n};\n\nTHREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture; // File:src/objects/Group.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Group = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Group';\n};\n\nTHREE.Group.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Group\n}); // File:src/objects/Points.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Points = function (geometry, material) {\n  THREE.Object3D.call(this);\n  this.type = 'Points';\n  this.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n  this.material = material !== undefined ? material : new THREE.PointsMaterial({\n    color: Math.random() * 0xffffff\n  });\n};\n\nTHREE.Points.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Points,\n  raycast: function () {\n    var inverseMatrix = new THREE.Matrix4();\n    var ray = new THREE.Ray();\n    var sphere = new THREE.Sphere();\n    return function raycast(raycaster, intersects) {\n      var object = this;\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld;\n      var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n      var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n      var localThresholdSq = localThreshold * localThreshold;\n      var position = new THREE.Vector3();\n\n      function testPoint(point, index) {\n        var rayPointDistanceSq = ray.distanceSqToPoint(point);\n\n        if (rayPointDistanceSq < localThresholdSq) {\n          var intersectPoint = ray.closestPointToPoint(point);\n          intersectPoint.applyMatrix4(matrixWorld);\n          var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n          if (distance < raycaster.near || distance > raycaster.far) return;\n          intersects.push({\n            distance: distance,\n            distanceToRay: Math.sqrt(rayPointDistanceSq),\n            point: intersectPoint.clone(),\n            index: index,\n            face: null,\n            object: object\n          });\n        }\n      }\n\n      if (geometry instanceof THREE.BufferGeometry) {\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positions = attributes.position.array;\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, il = indices.length; i < il; i++) {\n            var a = indices[i];\n            position.fromArray(positions, a * 3);\n            testPoint(position, a);\n          }\n        } else {\n          for (var i = 0, l = positions.length / 3; i < l; i++) {\n            position.fromArray(positions, i * 3);\n            testPoint(position, i);\n          }\n        }\n      } else {\n        var vertices = geometry.vertices;\n\n        for (var i = 0, l = vertices.length; i < l; i++) {\n          testPoint(vertices[i], i);\n        }\n      }\n    };\n  }(),\n  clone: function () {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n}); // File:src/objects/Line.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Line = function (geometry, material, mode) {\n  if (mode === 1) {\n    console.warn('THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.');\n    return new THREE.LineSegments(geometry, material);\n  }\n\n  THREE.Object3D.call(this);\n  this.type = 'Line';\n  this.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n  this.material = material !== undefined ? material : new THREE.LineBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n};\n\nTHREE.Line.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Line,\n  raycast: function () {\n    var inverseMatrix = new THREE.Matrix4();\n    var ray = new THREE.Ray();\n    var sphere = new THREE.Sphere();\n    return function raycast(raycaster, intersects) {\n      var precision = raycaster.linePrecision;\n      var precisionSq = precision * precision;\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n      var vStart = new THREE.Vector3();\n      var vEnd = new THREE.Vector3();\n      var interSegment = new THREE.Vector3();\n      var interRay = new THREE.Vector3();\n      var step = this instanceof THREE.LineSegments ? 2 : 1;\n\n      if (geometry instanceof THREE.BufferGeometry) {\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positions = attributes.position.array;\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, l = indices.length - 1; i < l; i += step) {\n            var a = indices[i];\n            var b = indices[i + 1];\n            vStart.fromArray(positions, a * 3);\n            vEnd.fromArray(positions, b * 3);\n            var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n            if (distSq > precisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        } else {\n          for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n            vStart.fromArray(positions, 3 * i);\n            vEnd.fromArray(positions, 3 * i + 3);\n            var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n            if (distSq > precisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        }\n      } else if (geometry instanceof THREE.Geometry) {\n        var vertices = geometry.vertices;\n        var nbVertices = vertices.length;\n\n        for (var i = 0; i < nbVertices - 1; i += step) {\n          var distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n          if (distSq > precisionSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var distance = raycaster.ray.origin.distanceTo(interRay);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      }\n    };\n  }(),\n  clone: function () {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n}); // File:src/objects/LineSegments.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.LineSegments = function (geometry, material) {\n  THREE.Line.call(this, geometry, material);\n  this.type = 'LineSegments';\n};\n\nTHREE.LineSegments.prototype = Object.assign(Object.create(THREE.Line.prototype), {\n  constructor: THREE.LineSegments\n}); // File:src/objects/Mesh.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\n\nTHREE.Mesh = function (geometry, material) {\n  THREE.Object3D.call(this);\n  this.type = 'Mesh';\n  this.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n  this.material = material !== undefined ? material : new THREE.MeshBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n  this.drawMode = THREE.TrianglesDrawMode;\n  this.updateMorphTargets();\n};\n\nTHREE.Mesh.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Mesh,\n  setDrawMode: function (value) {\n    this.drawMode = value;\n  },\n  updateMorphTargets: function () {\n    if (this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0) {\n      this.morphTargetBase = -1;\n      this.morphTargetInfluences = [];\n      this.morphTargetDictionary = {};\n\n      for (var m = 0, ml = this.geometry.morphTargets.length; m < ml; m++) {\n        this.morphTargetInfluences.push(0);\n        this.morphTargetDictionary[this.geometry.morphTargets[m].name] = m;\n      }\n    }\n  },\n  getMorphTargetIndexByName: function (name) {\n    if (this.morphTargetDictionary[name] !== undefined) {\n      return this.morphTargetDictionary[name];\n    }\n\n    console.warn('THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.');\n    return 0;\n  },\n  raycast: function () {\n    var inverseMatrix = new THREE.Matrix4();\n    var ray = new THREE.Ray();\n    var sphere = new THREE.Sphere();\n    var vA = new THREE.Vector3();\n    var vB = new THREE.Vector3();\n    var vC = new THREE.Vector3();\n    var tempA = new THREE.Vector3();\n    var tempB = new THREE.Vector3();\n    var tempC = new THREE.Vector3();\n    var uvA = new THREE.Vector2();\n    var uvB = new THREE.Vector2();\n    var uvC = new THREE.Vector2();\n    var barycoord = new THREE.Vector3();\n    var intersectionPoint = new THREE.Vector3();\n    var intersectionPointWorld = new THREE.Vector3();\n\n    function uvIntersection(point, p1, p2, p3, uv1, uv2, uv3) {\n      THREE.Triangle.barycoordFromPoint(point, p1, p2, p3, barycoord);\n      uv1.multiplyScalar(barycoord.x);\n      uv2.multiplyScalar(barycoord.y);\n      uv3.multiplyScalar(barycoord.z);\n      uv1.add(uv2).add(uv3);\n      return uv1.clone();\n    }\n\n    function checkIntersection(object, raycaster, ray, pA, pB, pC, point) {\n      var intersect;\n      var material = object.material;\n\n      if (material.side === THREE.BackSide) {\n        intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n      } else {\n        intersect = ray.intersectTriangle(pA, pB, pC, material.side !== THREE.DoubleSide, point);\n      }\n\n      if (intersect === null) return null;\n      intersectionPointWorld.copy(point);\n      intersectionPointWorld.applyMatrix4(object.matrixWorld);\n      var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n      if (distance < raycaster.near || distance > raycaster.far) return null;\n      return {\n        distance: distance,\n        point: intersectionPointWorld.clone(),\n        object: object\n      };\n    }\n\n    function checkBufferGeometryIntersection(object, raycaster, ray, positions, uvs, a, b, c) {\n      vA.fromArray(positions, a * 3);\n      vB.fromArray(positions, b * 3);\n      vC.fromArray(positions, c * 3);\n      var intersection = checkIntersection(object, raycaster, ray, vA, vB, vC, intersectionPoint);\n\n      if (intersection) {\n        if (uvs) {\n          uvA.fromArray(uvs, a * 2);\n          uvB.fromArray(uvs, b * 2);\n          uvC.fromArray(uvs, c * 2);\n          intersection.uv = uvIntersection(intersectionPoint, vA, vB, vC, uvA, uvB, uvC);\n        }\n\n        intersection.face = new THREE.Face3(a, b, c, THREE.Triangle.normal(vA, vB, vC));\n        intersection.faceIndex = a;\n      }\n\n      return intersection;\n    }\n\n    return function raycast(raycaster, intersects) {\n      var geometry = this.geometry;\n      var material = this.material;\n      var matrixWorld = this.matrixWorld;\n      if (material === undefined) return; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix); // Check boundingBox before continuing\n\n      if (geometry.boundingBox !== null) {\n        if (ray.intersectsBox(geometry.boundingBox) === false) return;\n      }\n\n      var uvs, intersection;\n\n      if (geometry instanceof THREE.BufferGeometry) {\n        var a, b, c;\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positions = attributes.position.array;\n\n        if (attributes.uv !== undefined) {\n          uvs = attributes.uv.array;\n        }\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, l = indices.length; i < l; i += 3) {\n            a = indices[i];\n            b = indices[i + 1];\n            c = indices[i + 2];\n            intersection = checkBufferGeometryIntersection(this, raycaster, ray, positions, uvs, a, b, c);\n\n            if (intersection) {\n              intersection.faceIndex = Math.floor(i / 3); // triangle number in indices buffer semantics\n\n              intersects.push(intersection);\n            }\n          }\n        } else {\n          for (var i = 0, l = positions.length; i < l; i += 9) {\n            a = i / 3;\n            b = a + 1;\n            c = a + 2;\n            intersection = checkBufferGeometryIntersection(this, raycaster, ray, positions, uvs, a, b, c);\n\n            if (intersection) {\n              intersection.index = a; // triangle number in positions buffer semantics\n\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else if (geometry instanceof THREE.Geometry) {\n        var fvA, fvB, fvC;\n        var isFaceMaterial = material instanceof THREE.MultiMaterial;\n        var materials = isFaceMaterial === true ? material.materials : null;\n        var vertices = geometry.vertices;\n        var faces = geometry.faces;\n        var faceVertexUvs = geometry.faceVertexUvs[0];\n        if (faceVertexUvs.length > 0) uvs = faceVertexUvs;\n\n        for (var f = 0, fl = faces.length; f < fl; f++) {\n          var face = faces[f];\n          var faceMaterial = isFaceMaterial === true ? materials[face.materialIndex] : material;\n          if (faceMaterial === undefined) continue;\n          fvA = vertices[face.a];\n          fvB = vertices[face.b];\n          fvC = vertices[face.c];\n\n          if (faceMaterial.morphTargets === true) {\n            var morphTargets = geometry.morphTargets;\n            var morphInfluences = this.morphTargetInfluences;\n            vA.set(0, 0, 0);\n            vB.set(0, 0, 0);\n            vC.set(0, 0, 0);\n\n            for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n              var influence = morphInfluences[t];\n              if (influence === 0) continue;\n              var targets = morphTargets[t].vertices;\n              vA.addScaledVector(tempA.subVectors(targets[face.a], fvA), influence);\n              vB.addScaledVector(tempB.subVectors(targets[face.b], fvB), influence);\n              vC.addScaledVector(tempC.subVectors(targets[face.c], fvC), influence);\n            }\n\n            vA.add(fvA);\n            vB.add(fvB);\n            vC.add(fvC);\n            fvA = vA;\n            fvB = vB;\n            fvC = vC;\n          }\n\n          intersection = checkIntersection(this, raycaster, ray, fvA, fvB, fvC, intersectionPoint);\n\n          if (intersection) {\n            if (uvs) {\n              var uvs_f = uvs[f];\n              uvA.copy(uvs_f[0]);\n              uvB.copy(uvs_f[1]);\n              uvC.copy(uvs_f[2]);\n              intersection.uv = uvIntersection(intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC);\n            }\n\n            intersection.face = face;\n            intersection.faceIndex = f;\n            intersects.push(intersection);\n          }\n        }\n      }\n    };\n  }(),\n  clone: function () {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n}); // File:src/objects/Bone.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\n\nTHREE.Bone = function (skin) {\n  THREE.Object3D.call(this);\n  this.type = 'Bone';\n  this.skin = skin;\n};\n\nTHREE.Bone.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Bone,\n  copy: function (source) {\n    THREE.Object3D.prototype.copy.call(this, source);\n    this.skin = source.skin;\n    return this;\n  }\n}); // File:src/objects/Skeleton.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\n\nTHREE.Skeleton = function (bones, boneInverses, useVertexTexture) {\n  this.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n  this.identityMatrix = new THREE.Matrix4(); // copy the bone array\n\n  bones = bones || [];\n  this.bones = bones.slice(0); // create a bone texture or an array of floats\n\n  if (this.useVertexTexture) {\n    // layout (1 matrix = 4 pixels)\n    //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n    //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n    //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n    //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n    //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n    var size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n\n    size = THREE.Math.nextPowerOfTwo(Math.ceil(size));\n    size = Math.max(size, 4);\n    this.boneTextureWidth = size;\n    this.boneTextureHeight = size;\n    this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4); // 4 floats per RGBA pixel\n\n    this.boneTexture = new THREE.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType);\n  } else {\n    this.boneMatrices = new Float32Array(16 * this.bones.length);\n  } // use the supplied bone inverses or calculate the inverses\n\n\n  if (boneInverses === undefined) {\n    this.calculateInverses();\n  } else {\n    if (this.bones.length === boneInverses.length) {\n      this.boneInverses = boneInverses.slice(0);\n    } else {\n      console.warn('THREE.Skeleton bonInverses is the wrong length.');\n      this.boneInverses = [];\n\n      for (var b = 0, bl = this.bones.length; b < bl; b++) {\n        this.boneInverses.push(new THREE.Matrix4());\n      }\n    }\n  }\n};\n\nObject.assign(THREE.Skeleton.prototype, {\n  calculateInverses: function () {\n    this.boneInverses = [];\n\n    for (var b = 0, bl = this.bones.length; b < bl; b++) {\n      var inverse = new THREE.Matrix4();\n\n      if (this.bones[b]) {\n        inverse.getInverse(this.bones[b].matrixWorld);\n      }\n\n      this.boneInverses.push(inverse);\n    }\n  },\n  pose: function () {\n    var bone; // recover the bind-time world matrices\n\n    for (var b = 0, bl = this.bones.length; b < bl; b++) {\n      bone = this.bones[b];\n\n      if (bone) {\n        bone.matrixWorld.getInverse(this.boneInverses[b]);\n      }\n    } // compute the local matrices, positions, rotations and scales\n\n\n    for (var b = 0, bl = this.bones.length; b < bl; b++) {\n      bone = this.bones[b];\n\n      if (bone) {\n        if (bone.parent) {\n          bone.matrix.getInverse(bone.parent.matrixWorld);\n          bone.matrix.multiply(bone.matrixWorld);\n        } else {\n          bone.matrix.copy(bone.matrixWorld);\n        }\n\n        bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n      }\n    }\n  },\n  update: function () {\n    var offsetMatrix = new THREE.Matrix4();\n    return function update() {\n      // flatten bone matrices to array\n      for (var b = 0, bl = this.bones.length; b < bl; b++) {\n        // compute the offset between the current and the original transform\n        var matrix = this.bones[b] ? this.bones[b].matrixWorld : this.identityMatrix;\n        offsetMatrix.multiplyMatrices(matrix, this.boneInverses[b]);\n        offsetMatrix.toArray(this.boneMatrices, b * 16);\n      }\n\n      if (this.useVertexTexture) {\n        this.boneTexture.needsUpdate = true;\n      }\n    };\n  }(),\n  clone: function () {\n    return new THREE.Skeleton(this.bones, this.boneInverses, this.useVertexTexture);\n  }\n}); // File:src/objects/SkinnedMesh.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\n\nTHREE.SkinnedMesh = function (geometry, material, useVertexTexture) {\n  THREE.Mesh.call(this, geometry, material);\n  this.type = 'SkinnedMesh';\n  this.bindMode = \"attached\";\n  this.bindMatrix = new THREE.Matrix4();\n  this.bindMatrixInverse = new THREE.Matrix4(); // init bones\n  // TODO: remove bone creation as there is no reason (other than\n  // convenience) for THREE.SkinnedMesh to do this.\n\n  var bones = [];\n\n  if (this.geometry && this.geometry.bones !== undefined) {\n    var bone, gbone;\n\n    for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n      gbone = this.geometry.bones[b];\n      bone = new THREE.Bone(this);\n      bones.push(bone);\n      bone.name = gbone.name;\n      bone.position.fromArray(gbone.pos);\n      bone.quaternion.fromArray(gbone.rotq);\n      if (gbone.scl !== undefined) bone.scale.fromArray(gbone.scl);\n    }\n\n    for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n      gbone = this.geometry.bones[b];\n\n      if (gbone.parent !== -1 && gbone.parent !== null && bones[gbone.parent] !== undefined) {\n        bones[gbone.parent].add(bones[b]);\n      } else {\n        this.add(bones[b]);\n      }\n    }\n  }\n\n  this.normalizeSkinWeights();\n  this.updateMatrixWorld(true);\n  this.bind(new THREE.Skeleton(bones, undefined, useVertexTexture), this.matrixWorld);\n};\n\nTHREE.SkinnedMesh.prototype = Object.assign(Object.create(THREE.Mesh.prototype), {\n  constructor: THREE.SkinnedMesh,\n  bind: function (skeleton, bindMatrix) {\n    this.skeleton = skeleton;\n\n    if (bindMatrix === undefined) {\n      this.updateMatrixWorld(true);\n      this.skeleton.calculateInverses();\n      bindMatrix = this.matrixWorld;\n    }\n\n    this.bindMatrix.copy(bindMatrix);\n    this.bindMatrixInverse.getInverse(bindMatrix);\n  },\n  pose: function () {\n    this.skeleton.pose();\n  },\n  normalizeSkinWeights: function () {\n    if (this.geometry instanceof THREE.Geometry) {\n      for (var i = 0; i < this.geometry.skinWeights.length; i++) {\n        var sw = this.geometry.skinWeights[i];\n        var scale = 1.0 / sw.lengthManhattan();\n\n        if (scale !== Infinity) {\n          sw.multiplyScalar(scale);\n        } else {\n          sw.set(1, 0, 0, 0); // do something reasonable\n        }\n      }\n    } else if (this.geometry instanceof THREE.BufferGeometry) {\n      var vec = new THREE.Vector4();\n      var skinWeight = this.geometry.attributes.skinWeight;\n\n      for (var i = 0; i < skinWeight.count; i++) {\n        vec.x = skinWeight.getX(i);\n        vec.y = skinWeight.getY(i);\n        vec.z = skinWeight.getZ(i);\n        vec.w = skinWeight.getW(i);\n        var scale = 1.0 / vec.lengthManhattan();\n\n        if (scale !== Infinity) {\n          vec.multiplyScalar(scale);\n        } else {\n          vec.set(1, 0, 0, 0); // do something reasonable\n        }\n\n        skinWeight.setXYZW(i, vec.x, vec.y, vec.z, vec.w);\n      }\n    }\n  },\n  updateMatrixWorld: function (force) {\n    THREE.Mesh.prototype.updateMatrixWorld.call(this, true);\n\n    if (this.bindMode === \"attached\") {\n      this.bindMatrixInverse.getInverse(this.matrixWorld);\n    } else if (this.bindMode === \"detached\") {\n      this.bindMatrixInverse.getInverse(this.bindMatrix);\n    } else {\n      console.warn('THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.geometry, this.material, this.useVertexTexture).copy(this);\n  }\n}); // File:src/objects/LOD.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.LOD = function () {\n  THREE.Object3D.call(this);\n  this.type = 'LOD';\n  Object.defineProperties(this, {\n    levels: {\n      enumerable: true,\n      value: []\n    }\n  });\n};\n\nTHREE.LOD.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.LOD,\n  copy: function (source) {\n    THREE.Object3D.prototype.copy.call(this, source, false);\n    var levels = source.levels;\n\n    for (var i = 0, l = levels.length; i < l; i++) {\n      var level = levels[i];\n      this.addLevel(level.object.clone(), level.distance);\n    }\n\n    return this;\n  },\n  addLevel: function (object, distance) {\n    if (distance === undefined) distance = 0;\n    distance = Math.abs(distance);\n    var levels = this.levels;\n\n    for (var l = 0; l < levels.length; l++) {\n      if (distance < levels[l].distance) {\n        break;\n      }\n    }\n\n    levels.splice(l, 0, {\n      distance: distance,\n      object: object\n    });\n    this.add(object);\n  },\n  getObjectForDistance: function (distance) {\n    var levels = this.levels;\n\n    for (var i = 1, l = levels.length; i < l; i++) {\n      if (distance < levels[i].distance) {\n        break;\n      }\n    }\n\n    return levels[i - 1].object;\n  },\n  raycast: function () {\n    var matrixPosition = new THREE.Vector3();\n    return function raycast(raycaster, intersects) {\n      matrixPosition.setFromMatrixPosition(this.matrixWorld);\n      var distance = raycaster.ray.origin.distanceTo(matrixPosition);\n      this.getObjectForDistance(distance).raycast(raycaster, intersects);\n    };\n  }(),\n  update: function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    return function update(camera) {\n      var levels = this.levels;\n\n      if (levels.length > 1) {\n        v1.setFromMatrixPosition(camera.matrixWorld);\n        v2.setFromMatrixPosition(this.matrixWorld);\n        var distance = v1.distanceTo(v2);\n        levels[0].object.visible = true;\n\n        for (var i = 1, l = levels.length; i < l; i++) {\n          if (distance >= levels[i].distance) {\n            levels[i - 1].object.visible = false;\n            levels[i].object.visible = true;\n          } else {\n            break;\n          }\n        }\n\n        for (; i < l; i++) {\n          levels[i].object.visible = false;\n        }\n      }\n    };\n  }(),\n  toJSON: function (meta) {\n    var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n    data.object.levels = [];\n    var levels = this.levels;\n\n    for (var i = 0, l = levels.length; i < l; i++) {\n      var level = levels[i];\n      data.object.levels.push({\n        object: level.object.uuid,\n        distance: level.distance\n      });\n    }\n\n    return data;\n  }\n}); // File:src/objects/Sprite.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Sprite = function (material) {\n  THREE.Object3D.call(this);\n  this.type = 'Sprite';\n  this.material = material !== undefined ? material : new THREE.SpriteMaterial();\n};\n\nTHREE.Sprite.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.Sprite,\n  raycast: function () {\n    var matrixPosition = new THREE.Vector3();\n    return function raycast(raycaster, intersects) {\n      matrixPosition.setFromMatrixPosition(this.matrixWorld);\n      var distanceSq = raycaster.ray.distanceSqToPoint(matrixPosition);\n      var guessSizeSq = this.scale.x * this.scale.y / 4;\n\n      if (distanceSq > guessSizeSq) {\n        return;\n      }\n\n      intersects.push({\n        distance: Math.sqrt(distanceSq),\n        point: this.position,\n        face: null,\n        object: this\n      });\n    };\n  }(),\n  clone: function () {\n    return new this.constructor(this.material).copy(this);\n  }\n}); // File:src/objects/LensFlare.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.LensFlare = function (texture, size, distance, blending, color) {\n  THREE.Object3D.call(this);\n  this.lensFlares = [];\n  this.positionScreen = new THREE.Vector3();\n  this.customUpdateCallback = undefined;\n\n  if (texture !== undefined) {\n    this.add(texture, size, distance, blending, color);\n  }\n};\n\nTHREE.LensFlare.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n  constructor: THREE.LensFlare,\n  copy: function (source) {\n    THREE.Object3D.prototype.copy.call(this, source);\n    this.positionScreen.copy(source.positionScreen);\n    this.customUpdateCallback = source.customUpdateCallback;\n\n    for (var i = 0, l = source.lensFlares.length; i < l; i++) {\n      this.lensFlares.push(source.lensFlares[i]);\n    }\n\n    return this;\n  },\n  add: function (texture, size, distance, blending, color, opacity) {\n    if (size === undefined) size = -1;\n    if (distance === undefined) distance = 0;\n    if (opacity === undefined) opacity = 1;\n    if (color === undefined) color = new THREE.Color(0xffffff);\n    if (blending === undefined) blending = THREE.NormalBlending;\n    distance = Math.min(distance, Math.max(0, distance));\n    this.lensFlares.push({\n      texture: texture,\n      // THREE.Texture\n      size: size,\n      // size in pixels (-1 = use texture.width)\n      distance: distance,\n      // distance (0-1) from light source (0=at light source)\n      x: 0,\n      y: 0,\n      z: 0,\n      // screen position (-1 => 1) z = 0 is in front z = 1 is back\n      scale: 1,\n      // scale\n      rotation: 0,\n      // rotation\n      opacity: opacity,\n      // opacity\n      color: color,\n      // color\n      blending: blending // blending\n\n    });\n  },\n\n  /*\r\n   * Update lens flares update positions on all flares based on the screen position\r\n   * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n   */\n  updateLensFlares: function () {\n    var f,\n        fl = this.lensFlares.length;\n    var flare;\n    var vecX = -this.positionScreen.x * 2;\n    var vecY = -this.positionScreen.y * 2;\n\n    for (f = 0; f < fl; f++) {\n      flare = this.lensFlares[f];\n      flare.x = this.positionScreen.x + vecX * flare.distance;\n      flare.y = this.positionScreen.y + vecY * flare.distance;\n      flare.wantedRotation = flare.x * Math.PI * 0.25;\n      flare.rotation += (flare.wantedRotation - flare.rotation) * 0.25;\n    }\n  }\n}); // File:src/scenes/Scene.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Scene = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Scene';\n  this.fog = null;\n  this.overrideMaterial = null;\n  this.autoUpdate = true; // checked by the renderer\n};\n\nTHREE.Scene.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Scene.prototype.constructor = THREE.Scene;\n\nTHREE.Scene.prototype.copy = function (source, recursive) {\n  THREE.Object3D.prototype.copy.call(this, source, recursive);\n  if (source.fog !== null) this.fog = source.fog.clone();\n  if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n  this.autoUpdate = source.autoUpdate;\n  this.matrixAutoUpdate = source.matrixAutoUpdate;\n  return this;\n}; // File:src/scenes/Fog.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.Fog = function (color, near, far) {\n  this.name = '';\n  this.color = new THREE.Color(color);\n  this.near = near !== undefined ? near : 1;\n  this.far = far !== undefined ? far : 1000;\n};\n\nTHREE.Fog.prototype.clone = function () {\n  return new THREE.Fog(this.color.getHex(), this.near, this.far);\n}; // File:src/scenes/FogExp2.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.FogExp2 = function (color, density) {\n  this.name = '';\n  this.color = new THREE.Color(color);\n  this.density = density !== undefined ? density : 0.00025;\n};\n\nTHREE.FogExp2.prototype.clone = function () {\n  return new THREE.FogExp2(this.color.getHex(), this.density);\n}; // File:src/renderers/shaders/ShaderChunk.js\n\n\nTHREE.ShaderChunk = {}; // File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\n\nTHREE.ShaderChunk['alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\n\nTHREE.ShaderChunk['alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\n\nTHREE.ShaderChunk['alphatest_fragment'] = \"#ifdef ALPHATEST\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\n\nTHREE.ShaderChunk['aomap_fragment'] = \"#ifdef USE_AOMAP\\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\n\nTHREE.ShaderChunk['aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\n\nTHREE.ShaderChunk['begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\"; // File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\n\nTHREE.ShaderChunk['beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\"; // File:src/renderers/shaders/ShaderChunk/bsdfs.glsl\n\nTHREE.ShaderChunk['bsdfs'] = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\t\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\t\t}\\n\t\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat alpha = pow2( roughness );\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\tfloat D = D_GGX( alpha, dotNH );\\n\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl\n\nTHREE.ShaderChunk['clipping_planes_fragment'] = \"#if NUM_CLIPPING_PLANES > 0\\n\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\t\tvec4 plane = clippingPlanes[ i ];\\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl\n\nTHREE.ShaderChunk['clipping_planes_pars_fragment'] = \"#if NUM_CLIPPING_PLANES > 0\\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\t\tvarying vec3 vViewPosition;\\n\t#endif\\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl\n\nTHREE.ShaderChunk['clipping_planes_pars_vertex'] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvarying vec3 vViewPosition;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl\n\nTHREE.ShaderChunk['clipping_planes_vertex'] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\n\nTHREE.ShaderChunk['color_fragment'] = \"#ifdef USE_COLOR\\n\tdiffuseColor.rgb *= vColor;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\n\nTHREE.ShaderChunk['color_pars_fragment'] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\n\nTHREE.ShaderChunk['color_pars_vertex'] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\n\nTHREE.ShaderChunk['color_vertex'] = \"#ifdef USE_COLOR\\n\tvColor.xyz = color.xyz;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/common.glsl\n\nTHREE.ShaderChunk['common'] = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n\tbool visible;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\tvec3 position;\\n\tvec3 normal;\\n\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl\n\nTHREE.ShaderChunk['cube_uv_reflection_fragment'] = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\tvec3 absDirection = abs(direction);\\n\tint face = -1;\\n\tif( absDirection.x > absDirection.z ) {\\n\t\tif(absDirection.x > absDirection.y )\\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\telse {\\n\t\tif(absDirection.z > absDirection.y )\\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\tfloat dxRoughness = dFdx(roughness);\\n\tfloat dyRoughness = dFdy(roughness);\\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\tfloat mipLevel = 0.5 * log2(d);\\n\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\tbool bRes = mipLevel == 0.0;\\n\tscale =  bRes && (scale < a) ? a : scale;\\n\tvec3 r;\\n\tvec2 offset;\\n\tint face = getFaceFromDirection(direction);\\n\tfloat rcpPowScale = 1.0 / powScale;\\n\tif( face == 0) {\\n\t\tr = vec3(direction.x, -direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 1) {\\n\t\tr = vec3(direction.y, direction.x, direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 2) {\\n\t\tr = vec3(direction.z, direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 3) {\\n\t\tr = vec3(direction.x, direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse if( face == 4) {\\n\t\tr = vec3(direction.y, direction.x, -direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse {\\n\t\tr = vec3(direction.z, -direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\tr = normalize(r);\\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\tvec2 base = offset + vec2( texelOffset );\\n\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\tfloat r1 = floor(roughnessVal);\\n\tfloat r2 = r1 + 1.0;\\n\tfloat t = fract(roughnessVal);\\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\tfloat s = mipInfo.y;\\n\tfloat level0 = mipInfo.x;\\n\tfloat level1 = level0 + 1.0;\\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\tvec4 result = mix(color10, color20, t);\\n\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\n\nTHREE.ShaderChunk['defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\"; // File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\n\nTHREE.ShaderChunk['displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\n\nTHREE.ShaderChunk['emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\n\nTHREE.ShaderChunk['emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\n\nTHREE.ShaderChunk['encodings_pars_fragment'] = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\n\nTHREE.ShaderChunk['encodings_fragment'] = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\n\nTHREE.ShaderChunk['envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\tenvColor = envMapTexelToLinear( envColor );\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['envmap_pars_fragment'] = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\tuniform float reflectivity;\\n\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\t\tvarying vec3 vWorldPosition;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['envmap_pars_vertex'] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvarying vec3 vWorldPosition;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t\tuniform float refractionRatio;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\n\nTHREE.ShaderChunk['envmap_vertex'] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvWorldPosition = worldPosition.xyz;\\n\t#else\\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\n\nTHREE.ShaderChunk['fog_fragment'] = \"#ifdef USE_FOG\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\t#endif\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\n\nTHREE.ShaderChunk['fog_pars_fragment'] = \"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\n\nTHREE.ShaderChunk['lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\n\nTHREE.ShaderChunk['lights_lambert_vertex'] = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\t\t#endif\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_pars.glsl\n\nTHREE.ShaderChunk['lights_pars'] = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\tvec3 irradiance = ambientLightColor;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tdirectLight.color = directionalLight.color;\\n\t\tdirectLight.direction = directionalLight.direction;\\n\t\tdirectLight.visible = true;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tvec3 lVector = pointLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\t\t\tdirectLight.color = pointLight.color;\\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat coneCos;\\n\t\tfloat penumbraCos;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\t\tvec3 lVector = spotLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\t\t\tdirectLight.color = spotLight.color;\\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tirradiance *= PI;\\n\t\t#endif\\n\t\treturn irradiance;\\n\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\t\t#else\\n\t\t\tvec4 envMapColor = vec4( 0.0 );\\n\t\t#endif\\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t}\\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\t}\\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\t\t#endif\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\t\tvec2 sampleUV;\\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#endif\\n\t\treturn envMapColor.rgb * envMapIntensity;\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\n\nTHREE.ShaderChunk['lights_phong_fragment'] = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\n\nTHREE.ShaderChunk['lights_phong_pars_fragment'] = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\tvec3\tdiffuseColor;\\n\tvec3\tspecularColor;\\n\tfloat\tspecularShininess;\\n\tfloat\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\t(0)\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl\n\nTHREE.ShaderChunk['lights_physical_fragment'] = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\tmaterial.specularColor = mix( vec3( 0.16 * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl\n\nTHREE.ShaderChunk['lights_physical_pars_fragment'] = \"struct PhysicalMaterial {\\n\tvec3\tdiffuseColor;\\n\tfloat\tspecularRoughness;\\n\tvec3\tspecularColor;\\n\t#ifndef STANDARD\\n\t#endif\\n};\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_template.glsl\n\nTHREE.ShaderChunk['lights_template'] = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tlightMapIrradiance *= PI;\\n\t\t#endif\\n\t\tirradiance += lightMapIrradiance;\\n\t#endif\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t}\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\t#endif\\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\n\nTHREE.ShaderChunk['logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\n\nTHREE.ShaderChunk['logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\tuniform float logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\n\nTHREE.ShaderChunk['logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n\tuniform float logDepthBufFC;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\n\nTHREE.ShaderChunk['logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\t#else\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\n\nTHREE.ShaderChunk['map_fragment'] = \"#ifdef USE_MAP\\n\tvec4 texelColor = texture2D( map, vUv );\\n\ttexelColor = mapTexelToLinear( texelColor );\\n\tdiffuseColor *= texelColor;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\n\nTHREE.ShaderChunk['map_pars_fragment'] = \"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\n\nTHREE.ShaderChunk['map_particle_fragment'] = \"#ifdef USE_MAP\\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\n\nTHREE.ShaderChunk['map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl\n\nTHREE.ShaderChunk['metalnessmap_fragment'] = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['metalnessmap_pars_fragment'] = \"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\n\nTHREE.ShaderChunk['morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\n\nTHREE.ShaderChunk['morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\t#ifndef USE_MORPHNORMALS\\n\tuniform float morphTargetInfluences[ 8 ];\\n\t#else\\n\tuniform float morphTargetInfluences[ 4 ];\\n\t#endif\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\n\nTHREE.ShaderChunk['morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\t#ifndef USE_MORPHNORMALS\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl\n\nTHREE.ShaderChunk['normal_fragment'] = \"#ifdef FLAT_SHADED\\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal );\\n\t#ifdef DOUBLE_SIDED\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/packing.glsl\n\nTHREE.ShaderChunk['packing'] = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthoDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat OrthoDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\n\nTHREE.ShaderChunk['premultiplied_alpha_fragment'] = \"#ifdef PREMULTIPLIED_ALPHA\\n\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\n\nTHREE.ShaderChunk['project_vertex'] = \"#ifdef USE_SKINNING\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\"; // File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl\n\nTHREE.ShaderChunk['roughnessmap_fragment'] = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\troughnessFactor *= texelRoughness.r;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['roughnessmap_pars_fragment'] = \"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\t\tvec2 f = fract( uv * size + 0.5 );\\n\t\tfloat a = mix( lb, lt, f.y );\\n\t\tfloat b = mix( rb, rt, f.y );\\n\t\tfloat c = mix( a, b, f.x );\\n\t\treturn c;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\t\tbool frustumTest = all( frustumTestVec );\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn 1.0;\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t#endif\\n\t}\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\n\nTHREE.ShaderChunk['shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl\n\nTHREE.ShaderChunk['shadowmask_pars_fragment'] = \"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\n\nTHREE.ShaderChunk['skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\n\nTHREE.ShaderChunk['skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\t#ifdef BONE_TEXTURE\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\t\t\ty = dy * ( y + 0.5 );\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\t\t\treturn bone;\\n\t\t}\\n\t#else\\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\t\t}\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\n\nTHREE.ShaderChunk['skinning_vertex'] = \"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\n\nTHREE.ShaderChunk['skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\n\nTHREE.ShaderChunk['specularmap_fragment'] = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\n\nTHREE.ShaderChunk['tonemapping_fragment'] = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\n\nTHREE.ShaderChunk['tonemapping_pars_fragment'] = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\n\nTHREE.ShaderChunk['uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvarying vec2 vUv2;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\n\nTHREE.ShaderChunk['uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\n\nTHREE.ShaderChunk['uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvUv2 = uv2;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\n\nTHREE.ShaderChunk['uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\n\nTHREE.ShaderChunk['uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\n\nTHREE.ShaderChunk['uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\n\nTHREE.ShaderChunk['worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\t#ifdef USE_SKINNING\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\t#else\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\t#endif\\n#endif\\n\"; // File:src/renderers/shaders/UniformsUtils.js\n\n/**\r\n * Uniform Utilities\r\n */\n\nTHREE.UniformsUtils = {\n  merge: function (uniforms) {\n    var merged = {};\n\n    for (var u = 0; u < uniforms.length; u++) {\n      var tmp = this.clone(uniforms[u]);\n\n      for (var p in tmp) {\n        merged[p] = tmp[p];\n      }\n    }\n\n    return merged;\n  },\n  clone: function (uniforms_src) {\n    var uniforms_dst = {};\n\n    for (var u in uniforms_src) {\n      uniforms_dst[u] = {};\n\n      for (var p in uniforms_src[u]) {\n        var parameter_src = uniforms_src[u][p];\n\n        if (parameter_src instanceof THREE.Color || parameter_src instanceof THREE.Vector2 || parameter_src instanceof THREE.Vector3 || parameter_src instanceof THREE.Vector4 || parameter_src instanceof THREE.Matrix3 || parameter_src instanceof THREE.Matrix4 || parameter_src instanceof THREE.Texture) {\n          uniforms_dst[u][p] = parameter_src.clone();\n        } else if (Array.isArray(parameter_src)) {\n          uniforms_dst[u][p] = parameter_src.slice();\n        } else {\n          uniforms_dst[u][p] = parameter_src;\n        }\n      }\n    }\n\n    return uniforms_dst;\n  }\n}; // File:src/renderers/shaders/UniformsLib.js\n\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\n\nTHREE.UniformsLib = {\n  common: {\n    \"diffuse\": {\n      type: \"c\",\n      value: new THREE.Color(0xeeeeee)\n    },\n    \"opacity\": {\n      type: \"1f\",\n      value: 1.0\n    },\n    \"map\": {\n      type: \"t\",\n      value: null\n    },\n    \"offsetRepeat\": {\n      type: \"v4\",\n      value: new THREE.Vector4(0, 0, 1, 1)\n    },\n    \"specularMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"alphaMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"envMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"flipEnvMap\": {\n      type: \"1f\",\n      value: -1\n    },\n    \"reflectivity\": {\n      type: \"1f\",\n      value: 1.0\n    },\n    \"refractionRatio\": {\n      type: \"1f\",\n      value: 0.98\n    }\n  },\n  aomap: {\n    \"aoMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"aoMapIntensity\": {\n      type: \"1f\",\n      value: 1\n    }\n  },\n  lightmap: {\n    \"lightMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"lightMapIntensity\": {\n      type: \"1f\",\n      value: 1\n    }\n  },\n  emissivemap: {\n    \"emissiveMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  bumpmap: {\n    \"bumpMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"bumpScale\": {\n      type: \"1f\",\n      value: 1\n    }\n  },\n  normalmap: {\n    \"normalMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"normalScale\": {\n      type: \"v2\",\n      value: new THREE.Vector2(1, 1)\n    }\n  },\n  displacementmap: {\n    \"displacementMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"displacementScale\": {\n      type: \"1f\",\n      value: 1\n    },\n    \"displacementBias\": {\n      type: \"1f\",\n      value: 0\n    }\n  },\n  roughnessmap: {\n    \"roughnessMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  metalnessmap: {\n    \"metalnessMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  fog: {\n    \"fogDensity\": {\n      type: \"1f\",\n      value: 0.00025\n    },\n    \"fogNear\": {\n      type: \"1f\",\n      value: 1\n    },\n    \"fogFar\": {\n      type: \"1f\",\n      value: 2000\n    },\n    \"fogColor\": {\n      type: \"c\",\n      value: new THREE.Color(0xffffff)\n    }\n  },\n  lights: {\n    \"ambientLightColor\": {\n      type: \"3fv\",\n      value: []\n    },\n    \"directionalLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"direction\": {\n          type: \"v3\"\n        },\n        \"color\": {\n          type: \"c\"\n        },\n        \"shadow\": {\n          type: \"1i\"\n        },\n        \"shadowBias\": {\n          type: \"1f\"\n        },\n        \"shadowRadius\": {\n          type: \"1f\"\n        },\n        \"shadowMapSize\": {\n          type: \"v2\"\n        }\n      }\n    },\n    \"directionalShadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"directionalShadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    },\n    \"spotLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"color\": {\n          type: \"c\"\n        },\n        \"position\": {\n          type: \"v3\"\n        },\n        \"direction\": {\n          type: \"v3\"\n        },\n        \"distance\": {\n          type: \"1f\"\n        },\n        \"coneCos\": {\n          type: \"1f\"\n        },\n        \"penumbraCos\": {\n          type: \"1f\"\n        },\n        \"decay\": {\n          type: \"1f\"\n        },\n        \"shadow\": {\n          type: \"1i\"\n        },\n        \"shadowBias\": {\n          type: \"1f\"\n        },\n        \"shadowRadius\": {\n          type: \"1f\"\n        },\n        \"shadowMapSize\": {\n          type: \"v2\"\n        }\n      }\n    },\n    \"spotShadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"spotShadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    },\n    \"pointLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"color\": {\n          type: \"c\"\n        },\n        \"position\": {\n          type: \"v3\"\n        },\n        \"decay\": {\n          type: \"1f\"\n        },\n        \"distance\": {\n          type: \"1f\"\n        },\n        \"shadow\": {\n          type: \"1i\"\n        },\n        \"shadowBias\": {\n          type: \"1f\"\n        },\n        \"shadowRadius\": {\n          type: \"1f\"\n        },\n        \"shadowMapSize\": {\n          type: \"v2\"\n        }\n      }\n    },\n    \"pointShadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"pointShadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    },\n    \"hemisphereLights\": {\n      type: \"sa\",\n      value: [],\n      properties: {\n        \"direction\": {\n          type: \"v3\"\n        },\n        \"skyColor\": {\n          type: \"c\"\n        },\n        \"groundColor\": {\n          type: \"c\"\n        }\n      }\n    }\n  },\n  points: {\n    \"diffuse\": {\n      type: \"c\",\n      value: new THREE.Color(0xeeeeee)\n    },\n    \"opacity\": {\n      type: \"1f\",\n      value: 1.0\n    },\n    \"size\": {\n      type: \"1f\",\n      value: 1.0\n    },\n    \"scale\": {\n      type: \"1f\",\n      value: 1.0\n    },\n    \"map\": {\n      type: \"t\",\n      value: null\n    },\n    \"offsetRepeat\": {\n      type: \"v4\",\n      value: new THREE.Vector4(0, 0, 1, 1)\n    }\n  }\n}; // File:src/renderers/shaders/ShaderLib/cube_frag.glsl\n\nTHREE.ShaderChunk['cube_frag'] = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\t#include <logdepthbuf_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/cube_vert.glsl\n\nTHREE.ShaderChunk['cube_vert'] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/depth_frag.glsl\n\nTHREE.ShaderChunk['depth_frag'] = \"#if DEPTH_PACKING == 3200\\n\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( 1.0 );\\n\t#if DEPTH_PACKING == 3200\\n\t\tdiffuseColor.a = opacity;\\n\t#endif\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <logdepthbuf_fragment>\\n\t#if DEPTH_PACKING == 3200\\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\t#elif DEPTH_PACKING == 3201\\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\t#endif\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/depth_vert.glsl\n\nTHREE.ShaderChunk['depth_vert'] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl\n\nTHREE.ShaderChunk['distanceRGBA_frag'] = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl\n\nTHREE.ShaderChunk['distanceRGBA_vert'] = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvWorldPosition = worldPosition;\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/equirect_frag.glsl\n\nTHREE.ShaderChunk['equirect_frag'] = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 direction = normalize( vWorldPosition );\\n\tvec2 sampleUV;\\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\t#include <logdepthbuf_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/equirect_vert.glsl\n\nTHREE.ShaderChunk['equirect_vert'] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/linedashed_frag.glsl\n\nTHREE.ShaderChunk['linedashed_frag'] = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <color_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/linedashed_vert.glsl\n\nTHREE.ShaderChunk['linedashed_vert'] = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\tvLineDistance = scale * lineDistance;\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\tgl_Position = projectionMatrix * mvPosition;\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\n\nTHREE.ShaderChunk['meshbasic_frag'] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\tReflectedLight reflectedLight;\\n\treflectedLight.directDiffuse = vec3( 0.0 );\\n\treflectedLight.directSpecular = vec3( 0.0 );\\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\n\nTHREE.ShaderChunk['meshbasic_vert'] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <skinbase_vertex>\\n\t#ifdef USE_ENVMAP\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <envmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshlambert_frag.glsl\n\nTHREE.ShaderChunk['meshlambert_frag'] = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <emissivemap_fragment>\\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\t#include <lightmap_fragment>\\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\t#ifdef DOUBLE_SIDED\\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\t#else\\n\t\treflectedLight.directDiffuse = vLightFront;\\n\t#endif\\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshlambert_vert.glsl\n\nTHREE.ShaderChunk['meshlambert_vert'] = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_lambert_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshphong_frag.glsl\n\nTHREE.ShaderChunk['meshphong_frag'] = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_phong_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshphong_vert.glsl\n\nTHREE.ShaderChunk['meshphong_vert'] = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshphysical_frag.glsl\n\nTHREE.ShaderChunk['meshphysical_frag'] = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <roughnessmap_fragment>\\n\t#include <metalnessmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_physical_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/meshphysical_vert.glsl\n\nTHREE.ShaderChunk['meshphysical_vert'] = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/normal_frag.glsl\n\nTHREE.ShaderChunk['normal_frag'] = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\t#include <logdepthbuf_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/normal_vert.glsl\n\nTHREE.ShaderChunk['normal_vert'] = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvNormal = normalize( normalMatrix * normal );\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/points_frag.glsl\n\nTHREE.ShaderChunk['points_frag'] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_particle_fragment>\\n\t#include <color_fragment>\\n\t#include <alphatest_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/points_vert.glsl\n\nTHREE.ShaderChunk['points_vert'] = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\t#else\\n\t\tgl_PointSize = size;\\n\t#endif\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/shadow_frag.glsl\n\nTHREE.ShaderChunk['shadow_frag'] = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\"; // File:src/renderers/shaders/ShaderLib/shadow_vert.glsl\n\nTHREE.ShaderChunk['shadow_vert'] = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\"; // File:src/renderers/shaders/ShaderLib.js\n\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\n\nTHREE.ShaderLib = {\n  'basic': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['aomap'], THREE.UniformsLib['fog']]),\n    vertexShader: THREE.ShaderChunk['meshbasic_vert'],\n    fragmentShader: THREE.ShaderChunk['meshbasic_frag']\n  },\n  'lambert': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['aomap'], THREE.UniformsLib['lightmap'], THREE.UniformsLib['emissivemap'], THREE.UniformsLib['fog'], THREE.UniformsLib['lights'], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['meshlambert_vert'],\n    fragmentShader: THREE.ShaderChunk['meshlambert_frag']\n  },\n  'phong': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['aomap'], THREE.UniformsLib['lightmap'], THREE.UniformsLib['emissivemap'], THREE.UniformsLib['bumpmap'], THREE.UniformsLib['normalmap'], THREE.UniformsLib['displacementmap'], THREE.UniformsLib['fog'], THREE.UniformsLib['lights'], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      },\n      \"specular\": {\n        type: \"c\",\n        value: new THREE.Color(0x111111)\n      },\n      \"shininess\": {\n        type: \"1f\",\n        value: 30\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['meshphong_vert'],\n    fragmentShader: THREE.ShaderChunk['meshphong_frag']\n  },\n  'standard': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['aomap'], THREE.UniformsLib['lightmap'], THREE.UniformsLib['emissivemap'], THREE.UniformsLib['bumpmap'], THREE.UniformsLib['normalmap'], THREE.UniformsLib['displacementmap'], THREE.UniformsLib['roughnessmap'], THREE.UniformsLib['metalnessmap'], THREE.UniformsLib['fog'], THREE.UniformsLib['lights'], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      },\n      \"roughness\": {\n        type: \"1f\",\n        value: 0.5\n      },\n      \"metalness\": {\n        type: \"1f\",\n        value: 0\n      },\n      \"envMapIntensity\": {\n        type: \"1f\",\n        value: 1\n      } // temporary\n\n    }]),\n    vertexShader: THREE.ShaderChunk['meshphysical_vert'],\n    fragmentShader: THREE.ShaderChunk['meshphysical_frag']\n  },\n  'points': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['points'], THREE.UniformsLib['fog']]),\n    vertexShader: THREE.ShaderChunk['points_vert'],\n    fragmentShader: THREE.ShaderChunk['points_frag']\n  },\n  'dashed': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['fog'], {\n      \"scale\": {\n        type: \"1f\",\n        value: 1\n      },\n      \"dashSize\": {\n        type: \"1f\",\n        value: 1\n      },\n      \"totalSize\": {\n        type: \"1f\",\n        value: 2\n      }\n    }]),\n    vertexShader: THREE.ShaderChunk['linedashed_vert'],\n    fragmentShader: THREE.ShaderChunk['linedashed_frag']\n  },\n  'depth': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib['common'], THREE.UniformsLib['displacementmap']]),\n    vertexShader: THREE.ShaderChunk['depth_vert'],\n    fragmentShader: THREE.ShaderChunk['depth_frag']\n  },\n  'normal': {\n    uniforms: {\n      \"opacity\": {\n        type: \"1f\",\n        value: 1.0\n      }\n    },\n    vertexShader: THREE.ShaderChunk['normal_vert'],\n    fragmentShader: THREE.ShaderChunk['normal_frag']\n  },\n\n  /* -------------------------------------------------------------------------\r\n  //\tCube map shader\r\n   ------------------------------------------------------------------------- */\n  'cube': {\n    uniforms: {\n      \"tCube\": {\n        type: \"t\",\n        value: null\n      },\n      \"tFlip\": {\n        type: \"1f\",\n        value: -1\n      }\n    },\n    vertexShader: THREE.ShaderChunk['cube_vert'],\n    fragmentShader: THREE.ShaderChunk['cube_frag']\n  },\n\n  /* -------------------------------------------------------------------------\r\n  //\tCube map shader\r\n   ------------------------------------------------------------------------- */\n  'equirect': {\n    uniforms: {\n      \"tEquirect\": {\n        type: \"t\",\n        value: null\n      },\n      \"tFlip\": {\n        type: \"1f\",\n        value: -1\n      }\n    },\n    vertexShader: THREE.ShaderChunk['equirect_vert'],\n    fragmentShader: THREE.ShaderChunk['equirect_frag']\n  },\n  'distanceRGBA': {\n    uniforms: {\n      \"lightPos\": {\n        type: \"v3\",\n        value: new THREE.Vector3()\n      }\n    },\n    vertexShader: THREE.ShaderChunk['distanceRGBA_vert'],\n    fragmentShader: THREE.ShaderChunk['distanceRGBA_frag']\n  }\n};\nTHREE.ShaderLib['physical'] = {\n  uniforms: THREE.UniformsUtils.merge([THREE.ShaderLib['standard'].uniforms, {// future\n  }]),\n  vertexShader: THREE.ShaderChunk['meshphysical_vert'],\n  fragmentShader: THREE.ShaderChunk['meshphysical_frag']\n}; // File:src/renderers/WebGLRenderer.js\n\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n * @author tschw\r\n */\n\nTHREE.WebGLRenderer = function (parameters) {\n  console.log('THREE.WebGLRenderer', THREE.REVISION);\n  parameters = parameters || {};\n\n  var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement('canvas'),\n      _context = parameters.context !== undefined ? parameters.context : null,\n      _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n      _depth = parameters.depth !== undefined ? parameters.depth : true,\n      _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n      _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n      _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n      _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n  var lights = [];\n  var opaqueObjects = [];\n  var opaqueObjectsLastIndex = -1;\n  var transparentObjects = [];\n  var transparentObjectsLastIndex = -1;\n  var morphInfluences = new Float32Array(8);\n  var sprites = [];\n  var lensFlares = []; // public properties\n\n  this.domElement = _canvas;\n  this.context = null; // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true; // scene graph\n\n  this.sortObjects = true; // user-defined clipping\n\n  this.clippingPlanes = [];\n  this.localClippingEnabled = false; // physically based shading\n\n  this.gammaFactor = 2.0; // for backwards compatibility\n\n  this.gammaInput = false;\n  this.gammaOutput = false; // physical lights\n\n  this.physicallyCorrectLights = false; // tone mapping\n\n  this.toneMapping = THREE.LinearToneMapping;\n  this.toneMappingExposure = 1.0;\n  this.toneMappingWhitePoint = 1.0; // morphs\n\n  this.maxMorphTargets = 8;\n  this.maxMorphNormals = 4; // flags\n\n  this.autoScaleCubemaps = true; // internal properties\n\n  var _this = this,\n      // internal state cache\n  _currentProgram = null,\n      _currentRenderTarget = null,\n      _currentFramebuffer = null,\n      _currentMaterialId = -1,\n      _currentGeometryProgram = '',\n      _currentCamera = null,\n      _currentScissor = new THREE.Vector4(),\n      _currentScissorTest = null,\n      _currentViewport = new THREE.Vector4(),\n      //\n  _usedTextureUnits = 0,\n      //\n  _clearColor = new THREE.Color(0x000000),\n      _clearAlpha = 0,\n      _width = _canvas.width,\n      _height = _canvas.height,\n      _pixelRatio = 1,\n      _scissor = new THREE.Vector4(0, 0, _width, _height),\n      _scissorTest = false,\n      _viewport = new THREE.Vector4(0, 0, _width, _height),\n      // frustum\n  _frustum = new THREE.Frustum(),\n      // clipping\n  _clipping = new THREE.WebGLClipping(),\n      _clippingEnabled = false,\n      _localClippingEnabled = false,\n      _sphere = new THREE.Sphere(),\n      // camera matrices cache\n  _projScreenMatrix = new THREE.Matrix4(),\n      _vector3 = new THREE.Vector3(),\n      // light arrays cache\n  _lights = {\n    hash: '',\n    ambient: [0, 0, 0],\n    directional: [],\n    directionalShadowMap: [],\n    directionalShadowMatrix: [],\n    spot: [],\n    spotShadowMap: [],\n    spotShadowMatrix: [],\n    point: [],\n    pointShadowMap: [],\n    pointShadowMatrix: [],\n    hemi: [],\n    shadows: []\n  },\n      // info\n  _infoMemory = {\n    geometries: 0,\n    textures: 0\n  },\n      _infoRender = {\n    calls: 0,\n    vertices: 0,\n    faces: 0,\n    points: 0\n  };\n\n  this.info = {\n    render: _infoRender,\n    memory: _infoMemory,\n    programs: null\n  }; // initialize\n\n  var _gl;\n\n  try {\n    var attributes = {\n      alpha: _alpha,\n      depth: _depth,\n      stencil: _stencil,\n      antialias: _antialias,\n      premultipliedAlpha: _premultipliedAlpha,\n      preserveDrawingBuffer: _preserveDrawingBuffer\n    };\n    _gl = _context || _canvas.getContext('webgl', attributes) || _canvas.getContext('experimental-webgl', attributes);\n\n    if (_gl === null) {\n      if (_canvas.getContext('webgl') !== null) {\n        throw 'Error creating WebGL context with your selected attributes.';\n      } else {\n        throw 'Error creating WebGL context.';\n      }\n    } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n    if (_gl.getShaderPrecisionFormat === undefined) {\n      _gl.getShaderPrecisionFormat = function () {\n        return {\n          'rangeMin': 1,\n          'rangeMax': 1,\n          'precision': 1\n        };\n      };\n    }\n\n    _canvas.addEventListener('webglcontextlost', onContextLost, false);\n  } catch (error) {\n    console.error('THREE.WebGLRenderer: ' + error);\n  }\n\n  var _isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext;\n\n  var extensions = new THREE.WebGLExtensions(_gl);\n  extensions.get('WEBGL_depth_texture');\n  extensions.get('OES_texture_float');\n  extensions.get('OES_texture_float_linear');\n  extensions.get('OES_texture_half_float');\n  extensions.get('OES_texture_half_float_linear');\n  extensions.get('OES_standard_derivatives');\n  extensions.get('ANGLE_instanced_arrays');\n\n  if (extensions.get('OES_element_index_uint')) {\n    THREE.BufferGeometry.MaxIndex = 4294967296;\n  }\n\n  var capabilities = new THREE.WebGLCapabilities(_gl, extensions, parameters);\n  var state = new THREE.WebGLState(_gl, extensions, paramThreeToGL);\n  var properties = new THREE.WebGLProperties();\n  var objects = new THREE.WebGLObjects(_gl, properties, this.info);\n  var programCache = new THREE.WebGLPrograms(this, capabilities);\n  var lightCache = new THREE.WebGLLights();\n  this.info.programs = programCache.programs;\n  var bufferRenderer = new THREE.WebGLBufferRenderer(_gl, extensions, _infoRender);\n  var indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer(_gl, extensions, _infoRender); //\n\n  function getTargetPixelRatio() {\n    return _currentRenderTarget === null ? _pixelRatio : 1;\n  }\n\n  function glClearColor(r, g, b, a) {\n    if (_premultipliedAlpha === true) {\n      r *= a;\n      g *= a;\n      b *= a;\n    }\n\n    state.clearColor(r, g, b, a);\n  }\n\n  function setDefaultGLState() {\n    state.init();\n    state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n    state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  }\n\n  function resetGLState() {\n    _currentProgram = null;\n    _currentCamera = null;\n    _currentGeometryProgram = '';\n    _currentMaterialId = -1;\n    state.reset();\n  }\n\n  setDefaultGLState();\n  this.context = _gl;\n  this.capabilities = capabilities;\n  this.extensions = extensions;\n  this.properties = properties;\n  this.state = state; // shadow map\n\n  var shadowMap = new THREE.WebGLShadowMap(this, _lights, objects);\n  this.shadowMap = shadowMap; // Plugins\n\n  var spritePlugin = new THREE.SpritePlugin(this, sprites);\n  var lensFlarePlugin = new THREE.LensFlarePlugin(this, lensFlares); // API\n\n  this.getContext = function () {\n    return _gl;\n  };\n\n  this.getContextAttributes = function () {\n    return _gl.getContextAttributes();\n  };\n\n  this.forceContextLoss = function () {\n    extensions.get('WEBGL_lose_context').loseContext();\n  };\n\n  this.getMaxAnisotropy = function () {\n    var value;\n    return function getMaxAnisotropy() {\n      if (value !== undefined) return value;\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension !== null) {\n        value = _gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      } else {\n        value = 0;\n      }\n\n      return value;\n    };\n  }();\n\n  this.getPrecision = function () {\n    return capabilities.precision;\n  };\n\n  this.getPixelRatio = function () {\n    return _pixelRatio;\n  };\n\n  this.setPixelRatio = function (value) {\n    if (value === undefined) return;\n    _pixelRatio = value;\n    this.setSize(_viewport.z, _viewport.w, false);\n  };\n\n  this.getSize = function () {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n\n  this.setSize = function (width, height, updateStyle) {\n    _width = width;\n    _height = height;\n    _canvas.width = width * _pixelRatio;\n    _canvas.height = height * _pixelRatio;\n\n    if (updateStyle !== false) {\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n    }\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.setViewport = function (x, y, width, height) {\n    state.viewport(_viewport.set(x, y, width, height));\n  };\n\n  this.setScissor = function (x, y, width, height) {\n    state.scissor(_scissor.set(x, y, width, height));\n  };\n\n  this.setScissorTest = function (boolean) {\n    state.setScissorTest(_scissorTest = boolean);\n  }; // Clearing\n\n\n  this.getClearColor = function () {\n    return _clearColor;\n  };\n\n  this.setClearColor = function (color, alpha) {\n    _clearColor.set(color);\n\n    _clearAlpha = alpha !== undefined ? alpha : 1;\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  };\n\n  this.getClearAlpha = function () {\n    return _clearAlpha;\n  };\n\n  this.setClearAlpha = function (alpha) {\n    _clearAlpha = alpha;\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  };\n\n  this.clear = function (color, depth, stencil) {\n    var bits = 0;\n    if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n    if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n    if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n    _gl.clear(bits);\n  };\n\n  this.clearColor = function () {\n    this.clear(true, false, false);\n  };\n\n  this.clearDepth = function () {\n    this.clear(false, true, false);\n  };\n\n  this.clearStencil = function () {\n    this.clear(false, false, true);\n  };\n\n  this.clearTarget = function (renderTarget, color, depth, stencil) {\n    this.setRenderTarget(renderTarget);\n    this.clear(color, depth, stencil);\n  }; // Reset\n\n\n  this.resetGLState = resetGLState;\n\n  this.dispose = function () {\n    _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n  }; // Events\n\n\n  function onContextLost(event) {\n    event.preventDefault();\n    resetGLState();\n    setDefaultGLState();\n    properties.clear();\n  }\n\n  function onTextureDispose(event) {\n    var texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    deallocateTexture(texture);\n    _infoMemory.textures--;\n  }\n\n  function onRenderTargetDispose(event) {\n    var renderTarget = event.target;\n    renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n    deallocateRenderTarget(renderTarget);\n    _infoMemory.textures--;\n  }\n\n  function onMaterialDispose(event) {\n    var material = event.target;\n    material.removeEventListener('dispose', onMaterialDispose);\n    deallocateMaterial(material);\n  } // Buffer deallocation\n\n\n  function deallocateTexture(texture) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image && textureProperties.__image__webglTextureCube) {\n      // cube texture\n      _gl.deleteTexture(textureProperties.__image__webglTextureCube);\n    } else {\n      // 2D texture\n      if (textureProperties.__webglInit === undefined) return;\n\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    } // remove all webgl properties\n\n\n    properties.delete(texture);\n  }\n\n  function deallocateRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(renderTarget.texture);\n    if (!renderTarget) return;\n\n    if (textureProperties.__webglTexture !== undefined) {\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    }\n\n    if (renderTarget.depthTexture) {\n      renderTarget.depthTexture.dispose();\n    }\n\n    if (renderTarget instanceof THREE.WebGLRenderTargetCube) {\n      for (var i = 0; i < 6; i++) {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n      }\n    } else {\n      _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n      if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n    }\n\n    properties.delete(renderTarget.texture);\n    properties.delete(renderTarget);\n  }\n\n  function deallocateMaterial(material) {\n    releaseMaterialProgramReference(material);\n    properties.delete(material);\n  }\n\n  function releaseMaterialProgramReference(material) {\n    var programInfo = properties.get(material).program;\n    material.program = undefined;\n\n    if (programInfo !== undefined) {\n      programCache.releaseProgram(programInfo);\n    }\n  } // Buffer rendering\n\n\n  this.renderBufferImmediate = function (object, program, material) {\n    state.initAttributes();\n    var buffers = properties.get(object);\n    if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n    if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n    if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n    if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n    var attributes = program.getAttributes();\n\n    if (object.hasPositions) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.position);\n\n      _gl.vertexAttribPointer(attributes.position, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasNormals) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n      if (material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.type !== 'MeshPhysicalMaterial' && material.shading === THREE.FlatShading) {\n        for (var i = 0, l = object.count * 3; i < l; i += 9) {\n          var array = object.normalArray;\n          var nx = (array[i + 0] + array[i + 3] + array[i + 6]) / 3;\n          var ny = (array[i + 1] + array[i + 4] + array[i + 7]) / 3;\n          var nz = (array[i + 2] + array[i + 5] + array[i + 8]) / 3;\n          array[i + 0] = nx;\n          array[i + 1] = ny;\n          array[i + 2] = nz;\n          array[i + 3] = nx;\n          array[i + 4] = ny;\n          array[i + 5] = nz;\n          array[i + 6] = nx;\n          array[i + 7] = ny;\n          array[i + 8] = nz;\n        }\n      }\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.normal);\n\n      _gl.vertexAttribPointer(attributes.normal, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasUvs && material.map) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.uv);\n\n      _gl.vertexAttribPointer(attributes.uv, 2, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasColors && material.vertexColors !== THREE.NoColors) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.color);\n\n      _gl.vertexAttribPointer(attributes.color, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    state.disableUnusedAttributes();\n\n    _gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n    object.count = 0;\n  };\n\n  this.renderBufferDirect = function (camera, fog, geometry, material, object, group) {\n    setMaterial(material);\n    var program = setProgram(camera, fog, material, object);\n    var updateBuffers = false;\n    var geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n    if (geometryProgram !== _currentGeometryProgram) {\n      _currentGeometryProgram = geometryProgram;\n      updateBuffers = true;\n    } // morph targets\n\n\n    var morphTargetInfluences = object.morphTargetInfluences;\n\n    if (morphTargetInfluences !== undefined) {\n      var activeInfluences = [];\n\n      for (var i = 0, l = morphTargetInfluences.length; i < l; i++) {\n        var influence = morphTargetInfluences[i];\n        activeInfluences.push([influence, i]);\n      }\n\n      activeInfluences.sort(absNumericalSort);\n\n      if (activeInfluences.length > 8) {\n        activeInfluences.length = 8;\n      }\n\n      var morphAttributes = geometry.morphAttributes;\n\n      for (var i = 0, l = activeInfluences.length; i < l; i++) {\n        var influence = activeInfluences[i];\n        morphInfluences[i] = influence[0];\n\n        if (influence[0] !== 0) {\n          var index = influence[1];\n          if (material.morphTargets === true && morphAttributes.position) geometry.addAttribute('morphTarget' + i, morphAttributes.position[index]);\n          if (material.morphNormals === true && morphAttributes.normal) geometry.addAttribute('morphNormal' + i, morphAttributes.normal[index]);\n        } else {\n          if (material.morphTargets === true) geometry.removeAttribute('morphTarget' + i);\n          if (material.morphNormals === true) geometry.removeAttribute('morphNormal' + i);\n        }\n      }\n\n      program.getUniforms().setValue(_gl, 'morphTargetInfluences', morphInfluences);\n      updateBuffers = true;\n    } //\n\n\n    var index = geometry.index;\n    var position = geometry.attributes.position;\n\n    if (material.wireframe === true) {\n      index = objects.getWireframeAttribute(geometry);\n    }\n\n    var renderer;\n\n    if (index !== null) {\n      renderer = indexedBufferRenderer;\n      renderer.setIndex(index);\n    } else {\n      renderer = bufferRenderer;\n    }\n\n    if (updateBuffers) {\n      setupVertexAttributes(material, program, geometry);\n\n      if (index !== null) {\n        _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer(index));\n      }\n    } //\n\n\n    var dataStart = 0;\n    var dataCount = Infinity;\n\n    if (index !== null) {\n      dataCount = index.count;\n    } else if (position !== undefined) {\n      dataCount = position.count;\n    }\n\n    var rangeStart = geometry.drawRange.start;\n    var rangeCount = geometry.drawRange.count;\n    var groupStart = group !== null ? group.start : 0;\n    var groupCount = group !== null ? group.count : Infinity;\n    var drawStart = Math.max(dataStart, rangeStart, groupStart);\n    var drawEnd = Math.min(dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n    var drawCount = Math.max(0, drawEnd - drawStart + 1); //\n\n    if (object instanceof THREE.Mesh) {\n      if (material.wireframe === true) {\n        state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n        renderer.setMode(_gl.LINES);\n      } else {\n        switch (object.drawMode) {\n          case THREE.TrianglesDrawMode:\n            renderer.setMode(_gl.TRIANGLES);\n            break;\n\n          case THREE.TriangleStripDrawMode:\n            renderer.setMode(_gl.TRIANGLE_STRIP);\n            break;\n\n          case THREE.TriangleFanDrawMode:\n            renderer.setMode(_gl.TRIANGLE_FAN);\n            break;\n        }\n      }\n    } else if (object instanceof THREE.Line) {\n      var lineWidth = material.linewidth;\n      if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n      state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n      if (object instanceof THREE.LineSegments) {\n        renderer.setMode(_gl.LINES);\n      } else {\n        renderer.setMode(_gl.LINE_STRIP);\n      }\n    } else if (object instanceof THREE.Points) {\n      renderer.setMode(_gl.POINTS);\n    }\n\n    if (geometry instanceof THREE.InstancedBufferGeometry) {\n      if (geometry.maxInstancedCount > 0) {\n        renderer.renderInstances(geometry, drawStart, drawCount);\n      }\n    } else {\n      renderer.render(drawStart, drawCount);\n    }\n  };\n\n  function setupVertexAttributes(material, program, geometry, startIndex) {\n    var extension;\n\n    if (geometry instanceof THREE.InstancedBufferGeometry) {\n      extension = extensions.get('ANGLE_instanced_arrays');\n\n      if (extension === null) {\n        console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n    }\n\n    if (startIndex === undefined) startIndex = 0;\n    state.initAttributes();\n    var geometryAttributes = geometry.attributes;\n    var programAttributes = program.getAttributes();\n    var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n    for (var name in programAttributes) {\n      var programAttribute = programAttributes[name];\n\n      if (programAttribute >= 0) {\n        var geometryAttribute = geometryAttributes[name];\n\n        if (geometryAttribute !== undefined) {\n          var type = _gl.FLOAT;\n          var array = geometryAttribute.array;\n          var normalized = geometryAttribute.normalized;\n\n          if (array instanceof Float32Array) {\n            type = _gl.FLOAT;\n          } else if (array instanceof Float64Array) {\n            console.warn(\"Unsupported data buffer format: Float64Array\");\n          } else if (array instanceof Uint16Array) {\n            type = _gl.UNSIGNED_SHORT;\n          } else if (array instanceof Int16Array) {\n            type = _gl.SHORT;\n          } else if (array instanceof Uint32Array) {\n            type = _gl.UNSIGNED_INT;\n          } else if (array instanceof Int32Array) {\n            type = _gl.INT;\n          } else if (array instanceof Int8Array) {\n            type = _gl.BYTE;\n          } else if (array instanceof Uint8Array) {\n            type = _gl.UNSIGNED_BYTE;\n          }\n\n          var size = geometryAttribute.itemSize;\n          var buffer = objects.getAttributeBuffer(geometryAttribute);\n\n          if (geometryAttribute instanceof THREE.InterleavedBufferAttribute) {\n            var data = geometryAttribute.data;\n            var stride = data.stride;\n            var offset = geometryAttribute.offset;\n\n            if (data instanceof THREE.InstancedInterleavedBuffer) {\n              state.enableAttributeAndDivisor(programAttribute, data.meshPerAttribute, extension);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n              }\n            } else {\n              state.enableAttribute(programAttribute);\n            }\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, (startIndex * stride + offset) * data.array.BYTES_PER_ELEMENT);\n          } else {\n            if (geometryAttribute instanceof THREE.InstancedBufferAttribute) {\n              state.enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute, extension);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n              }\n            } else {\n              state.enableAttribute(programAttribute);\n            }\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT);\n          }\n        } else if (materialDefaultAttributeValues !== undefined) {\n          var value = materialDefaultAttributeValues[name];\n\n          if (value !== undefined) {\n            switch (value.length) {\n              case 2:\n                _gl.vertexAttrib2fv(programAttribute, value);\n\n                break;\n\n              case 3:\n                _gl.vertexAttrib3fv(programAttribute, value);\n\n                break;\n\n              case 4:\n                _gl.vertexAttrib4fv(programAttribute, value);\n\n                break;\n\n              default:\n                _gl.vertexAttrib1fv(programAttribute, value);\n\n            }\n          }\n        }\n      }\n    }\n\n    state.disableUnusedAttributes();\n  } // Sorting\n\n\n  function absNumericalSort(a, b) {\n    return Math.abs(b[0]) - Math.abs(a[0]);\n  }\n\n  function painterSortStable(a, b) {\n    if (a.object.renderOrder !== b.object.renderOrder) {\n      return a.object.renderOrder - b.object.renderOrder;\n    } else if (a.material.id !== b.material.id) {\n      return a.material.id - b.material.id;\n    } else if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function reversePainterSortStable(a, b) {\n    if (a.object.renderOrder !== b.object.renderOrder) {\n      return a.object.renderOrder - b.object.renderOrder;\n    }\n\n    if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  } // Rendering\n\n\n  this.render = function (scene, camera, renderTarget, forceClear) {\n    if (camera instanceof THREE.Camera === false) {\n      console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n      return;\n    }\n\n    var fog = scene.fog; // reset caching for this frame\n\n    _currentGeometryProgram = '';\n    _currentMaterialId = -1;\n    _currentCamera = null; // update scene graph\n\n    if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n    _frustum.setFromMatrix(_projScreenMatrix);\n\n    lights.length = 0;\n    opaqueObjectsLastIndex = -1;\n    transparentObjectsLastIndex = -1;\n    sprites.length = 0;\n    lensFlares.length = 0;\n    _localClippingEnabled = this.localClippingEnabled;\n    _clippingEnabled = _clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n    projectObject(scene, camera);\n    opaqueObjects.length = opaqueObjectsLastIndex + 1;\n    transparentObjects.length = transparentObjectsLastIndex + 1;\n\n    if (_this.sortObjects === true) {\n      opaqueObjects.sort(painterSortStable);\n      transparentObjects.sort(reversePainterSortStable);\n    } //\n\n\n    if (_clippingEnabled) _clipping.beginShadows();\n    setupShadows(lights);\n    shadowMap.render(scene, camera);\n    setupLights(lights, camera);\n    if (_clippingEnabled) _clipping.endShadows(); //\n\n    _infoRender.calls = 0;\n    _infoRender.vertices = 0;\n    _infoRender.faces = 0;\n    _infoRender.points = 0;\n\n    if (renderTarget === undefined) {\n      renderTarget = null;\n    }\n\n    this.setRenderTarget(renderTarget);\n\n    if (this.autoClear || forceClear) {\n      this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil);\n    } //\n\n\n    if (scene.overrideMaterial) {\n      var overrideMaterial = scene.overrideMaterial;\n      renderObjects(opaqueObjects, camera, fog, overrideMaterial);\n      renderObjects(transparentObjects, camera, fog, overrideMaterial);\n    } else {\n      // opaque pass (front-to-back order)\n      state.setBlending(THREE.NoBlending);\n      renderObjects(opaqueObjects, camera, fog); // transparent pass (back-to-front order)\n\n      renderObjects(transparentObjects, camera, fog);\n    } // custom render plugins (post pass)\n\n\n    spritePlugin.render(scene, camera);\n    lensFlarePlugin.render(scene, camera, _currentViewport); // Generate mipmap if we're using any kind of mipmap filtering\n\n    if (renderTarget) {\n      var texture = renderTarget.texture;\n\n      if (texture.generateMipmaps && isPowerOfTwo(renderTarget) && texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) {\n        updateRenderTargetMipmap(renderTarget);\n      }\n    } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n    state.setDepthTest(true);\n    state.setDepthWrite(true);\n    state.setColorWrite(true); // _gl.finish();\n  };\n\n  function pushRenderItem(object, geometry, material, z, group) {\n    var array, index; // allocate the next position in the appropriate array\n\n    if (material.transparent) {\n      array = transparentObjects;\n      index = ++transparentObjectsLastIndex;\n    } else {\n      array = opaqueObjects;\n      index = ++opaqueObjectsLastIndex;\n    } // recycle existing render item or grow the array\n\n\n    var renderItem = array[index];\n\n    if (renderItem !== undefined) {\n      renderItem.id = object.id;\n      renderItem.object = object;\n      renderItem.geometry = geometry;\n      renderItem.material = material;\n      renderItem.z = _vector3.z;\n      renderItem.group = group;\n    } else {\n      renderItem = {\n        id: object.id,\n        object: object,\n        geometry: geometry,\n        material: material,\n        z: _vector3.z,\n        group: group\n      }; // assert( index === array.length );\n\n      array.push(renderItem);\n    }\n  } // TODO Duplicated code (Frustum)\n\n\n  function isObjectViewable(object) {\n    var geometry = object.geometry;\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n    _sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n    return isSphereViewable(_sphere);\n  }\n\n  function isSpriteViewable(sprite) {\n    _sphere.center.set(0, 0, 0);\n\n    _sphere.radius = 0.7071067811865476;\n\n    _sphere.applyMatrix4(sprite.matrixWorld);\n\n    return isSphereViewable(_sphere);\n  }\n\n  function isSphereViewable(sphere) {\n    if (!_frustum.intersectsSphere(sphere)) return false;\n    var numPlanes = _clipping.numPlanes;\n    if (numPlanes === 0) return true;\n    var planes = _this.clippingPlanes,\n        center = sphere.center,\n        negRad = -sphere.radius,\n        i = 0;\n\n    do {\n      // out when deeper than radius in the negative halfspace\n      if (planes[i].distanceToPoint(center) < negRad) return false;\n    } while (++i !== numPlanes);\n\n    return true;\n  }\n\n  function projectObject(object, camera) {\n    if (object.visible === false) return;\n\n    if (object.layers.test(camera.layers)) {\n      if (object instanceof THREE.Light) {\n        lights.push(object);\n      } else if (object instanceof THREE.Sprite) {\n        if (object.frustumCulled === false || isSpriteViewable(object) === true) {\n          sprites.push(object);\n        }\n      } else if (object instanceof THREE.LensFlare) {\n        lensFlares.push(object);\n      } else if (object instanceof THREE.ImmediateRenderObject) {\n        if (_this.sortObjects === true) {\n          _vector3.setFromMatrixPosition(object.matrixWorld);\n\n          _vector3.applyProjection(_projScreenMatrix);\n        }\n\n        pushRenderItem(object, null, object.material, _vector3.z, null);\n      } else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points) {\n        if (object instanceof THREE.SkinnedMesh) {\n          object.skeleton.update();\n        }\n\n        if (object.frustumCulled === false || isObjectViewable(object) === true) {\n          var material = object.material;\n\n          if (material.visible === true) {\n            if (_this.sortObjects === true) {\n              _vector3.setFromMatrixPosition(object.matrixWorld);\n\n              _vector3.applyProjection(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n\n            if (material instanceof THREE.MultiMaterial) {\n              var groups = geometry.groups;\n              var materials = material.materials;\n\n              for (var i = 0, l = groups.length; i < l; i++) {\n                var group = groups[i];\n                var groupMaterial = materials[group.materialIndex];\n\n                if (groupMaterial.visible === true) {\n                  pushRenderItem(object, geometry, groupMaterial, _vector3.z, group);\n                }\n              }\n            } else {\n              pushRenderItem(object, geometry, material, _vector3.z, null);\n            }\n          }\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera);\n    }\n  }\n\n  function renderObjects(renderList, camera, fog, overrideMaterial) {\n    for (var i = 0, l = renderList.length; i < l; i++) {\n      var renderItem = renderList[i];\n      var object = renderItem.object;\n      var geometry = renderItem.geometry;\n      var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n      var group = renderItem.group;\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n      if (object instanceof THREE.ImmediateRenderObject) {\n        setMaterial(material);\n        var program = setProgram(camera, fog, material, object);\n        _currentGeometryProgram = '';\n        object.render(function (object) {\n          _this.renderBufferImmediate(object, program, material);\n        });\n      } else {\n        _this.renderBufferDirect(camera, fog, geometry, material, object, group);\n      }\n    }\n  }\n\n  function initMaterial(material, fog, object) {\n    var materialProperties = properties.get(material);\n    var parameters = programCache.getParameters(material, _lights, fog, _clipping.numPlanes, object);\n    var code = programCache.getProgramCode(material, parameters);\n    var program = materialProperties.program;\n    var programChange = true;\n\n    if (program === undefined) {\n      // new material\n      material.addEventListener('dispose', onMaterialDispose);\n    } else if (program.code !== code) {\n      // changed glsl or parameters\n      releaseMaterialProgramReference(material);\n    } else if (parameters.shaderID !== undefined) {\n      // same glsl and uniform list\n      return;\n    } else {\n      // only rebuild uniform list\n      programChange = false;\n    }\n\n    if (programChange) {\n      if (parameters.shaderID) {\n        var shader = THREE.ShaderLib[parameters.shaderID];\n        materialProperties.__webglShader = {\n          name: material.type,\n          uniforms: THREE.UniformsUtils.clone(shader.uniforms),\n          vertexShader: shader.vertexShader,\n          fragmentShader: shader.fragmentShader\n        };\n      } else {\n        materialProperties.__webglShader = {\n          name: material.type,\n          uniforms: material.uniforms,\n          vertexShader: material.vertexShader,\n          fragmentShader: material.fragmentShader\n        };\n      }\n\n      material.__webglShader = materialProperties.__webglShader;\n      program = programCache.acquireProgram(material, parameters, code);\n      materialProperties.program = program;\n      material.program = program;\n    }\n\n    var attributes = program.getAttributes();\n\n    if (material.morphTargets) {\n      material.numSupportedMorphTargets = 0;\n\n      for (var i = 0; i < _this.maxMorphTargets; i++) {\n        if (attributes['morphTarget' + i] >= 0) {\n          material.numSupportedMorphTargets++;\n        }\n      }\n    }\n\n    if (material.morphNormals) {\n      material.numSupportedMorphNormals = 0;\n\n      for (var i = 0; i < _this.maxMorphNormals; i++) {\n        if (attributes['morphNormal' + i] >= 0) {\n          material.numSupportedMorphNormals++;\n        }\n      }\n    }\n\n    var uniforms = materialProperties.__webglShader.uniforms;\n\n    if (!(material instanceof THREE.ShaderMaterial) && !(material instanceof THREE.RawShaderMaterial) || material.clipping === true) {\n      materialProperties.numClippingPlanes = _clipping.numPlanes;\n      uniforms.clippingPlanes = _clipping.uniform;\n    }\n\n    if (material.lights) {\n      // store the light setup it was created for\n      materialProperties.lightsHash = _lights.hash; // wire up the material to this renderer's lighting state\n\n      uniforms.ambientLightColor.value = _lights.ambient;\n      uniforms.directionalLights.value = _lights.directional;\n      uniforms.spotLights.value = _lights.spot;\n      uniforms.pointLights.value = _lights.point;\n      uniforms.hemisphereLights.value = _lights.hemi;\n      uniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n      uniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n      uniforms.spotShadowMap.value = _lights.spotShadowMap;\n      uniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n      uniforms.pointShadowMap.value = _lights.pointShadowMap;\n      uniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n    }\n\n    var progUniforms = materialProperties.program.getUniforms(),\n        uniformsList = THREE.WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n    materialProperties.uniformsList = uniformsList;\n    materialProperties.dynamicUniforms = THREE.WebGLUniforms.splitDynamic(uniformsList, uniforms);\n  }\n\n  function setMaterial(material) {\n    if (material.side !== THREE.DoubleSide) state.enable(_gl.CULL_FACE);else state.disable(_gl.CULL_FACE);\n    state.setFlipSided(material.side === THREE.BackSide);\n\n    if (material.transparent === true) {\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n    } else {\n      state.setBlending(THREE.NoBlending);\n    }\n\n    state.setDepthFunc(material.depthFunc);\n    state.setDepthTest(material.depthTest);\n    state.setDepthWrite(material.depthWrite);\n    state.setColorWrite(material.colorWrite);\n    state.setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n  }\n\n  function setProgram(camera, fog, material, object) {\n    _usedTextureUnits = 0;\n    var materialProperties = properties.get(material);\n\n    if (_clippingEnabled) {\n      if (_localClippingEnabled || camera !== _currentCamera) {\n        var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n        // object instead of the material, once it becomes feasible\n        // (#8465, #8379)\n\n        _clipping.setState(material.clippingPlanes, material.clipShadows, camera, materialProperties, useCache);\n      }\n\n      if (materialProperties.numClippingPlanes !== undefined && materialProperties.numClippingPlanes !== _clipping.numPlanes) {\n        material.needsUpdate = true;\n      }\n    }\n\n    if (materialProperties.program === undefined) {\n      material.needsUpdate = true;\n    }\n\n    if (materialProperties.lightsHash !== undefined && materialProperties.lightsHash !== _lights.hash) {\n      material.needsUpdate = true;\n    }\n\n    if (material.needsUpdate) {\n      initMaterial(material, fog, object);\n      material.needsUpdate = false;\n    }\n\n    var refreshProgram = false;\n    var refreshMaterial = false;\n    var refreshLights = false;\n    var program = materialProperties.program,\n        p_uniforms = program.getUniforms(),\n        m_uniforms = materialProperties.__webglShader.uniforms;\n\n    if (program.id !== _currentProgram) {\n      _gl.useProgram(program.program);\n\n      _currentProgram = program.id;\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n\n    if (material.id !== _currentMaterialId) {\n      _currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n\n    if (refreshProgram || camera !== _currentCamera) {\n      p_uniforms.set(_gl, camera, 'projectionMatrix');\n\n      if (capabilities.logarithmicDepthBuffer) {\n        p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n      }\n\n      if (camera !== _currentCamera) {\n        _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n        // now, in case this material supports lights - or later, when\n        // the next material that does gets activated:\n\n        refreshMaterial = true; // set to true on material change\n\n        refreshLights = true; // remains set until update done\n      } // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n\n      if (material instanceof THREE.ShaderMaterial || material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshStandardMaterial || material.envMap) {\n        var uCamPos = p_uniforms.map.cameraPosition;\n\n        if (uCamPos !== undefined) {\n          uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n        }\n      }\n\n      if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshStandardMaterial || material instanceof THREE.ShaderMaterial || material.skinning) {\n        p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n      }\n\n      p_uniforms.set(_gl, _this, 'toneMappingExposure');\n      p_uniforms.set(_gl, _this, 'toneMappingWhitePoint');\n    } // skinning uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone texture must go before other textures\n    // not sure why, but otherwise weird things happen\n\n\n    if (material.skinning) {\n      p_uniforms.setOptional(_gl, object, 'bindMatrix');\n      p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n      var skeleton = object.skeleton;\n\n      if (skeleton) {\n        if (capabilities.floatVertexTextures && skeleton.useVertexTexture) {\n          p_uniforms.set(_gl, skeleton, 'boneTexture');\n          p_uniforms.set(_gl, skeleton, 'boneTextureWidth');\n          p_uniforms.set(_gl, skeleton, 'boneTextureHeight');\n        } else {\n          p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n        }\n      }\n    }\n\n    if (refreshMaterial) {\n      if (material.lights) {\n        // the current material requires lighting info\n        // note: all lighting uniforms are always set correctly\n        // they simply reference the renderer's state for their\n        // values\n        //\n        // use the current material's .needsUpdate flags to set\n        // the GL state when required\n        markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n      } // refresh uniforms common to several materials\n\n\n      if (fog && material.fog) {\n        refreshUniformsFog(m_uniforms, fog);\n      }\n\n      if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshStandardMaterial || material instanceof THREE.MeshDepthMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n      } // refresh single material specific uniforms\n\n\n      if (material instanceof THREE.LineBasicMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n      } else if (material instanceof THREE.LineDashedMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n        refreshUniformsDash(m_uniforms, material);\n      } else if (material instanceof THREE.PointsMaterial) {\n        refreshUniformsPoints(m_uniforms, material);\n      } else if (material instanceof THREE.MeshLambertMaterial) {\n        refreshUniformsLambert(m_uniforms, material);\n      } else if (material instanceof THREE.MeshPhongMaterial) {\n        refreshUniformsPhong(m_uniforms, material);\n      } else if (material instanceof THREE.MeshPhysicalMaterial) {\n        refreshUniformsPhysical(m_uniforms, material);\n      } else if (material instanceof THREE.MeshStandardMaterial) {\n        refreshUniformsStandard(m_uniforms, material);\n      } else if (material instanceof THREE.MeshDepthMaterial) {\n        if (material.displacementMap) {\n          m_uniforms.displacementMap.value = material.displacementMap;\n          m_uniforms.displacementScale.value = material.displacementScale;\n          m_uniforms.displacementBias.value = material.displacementBias;\n        }\n      } else if (material instanceof THREE.MeshNormalMaterial) {\n        m_uniforms.opacity.value = material.opacity;\n      }\n\n      THREE.WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, _this);\n    } // common matrices\n\n\n    p_uniforms.set(_gl, object, 'modelViewMatrix');\n    p_uniforms.set(_gl, object, 'normalMatrix');\n    p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld); // dynamic uniforms\n\n    var dynUniforms = materialProperties.dynamicUniforms;\n\n    if (dynUniforms !== null) {\n      THREE.WebGLUniforms.evalDynamic(dynUniforms, m_uniforms, object, camera);\n      THREE.WebGLUniforms.upload(_gl, dynUniforms, m_uniforms, _this);\n    }\n\n    return program;\n  } // Uniforms (refresh uniforms objects)\n\n\n  function refreshUniformsCommon(uniforms, material) {\n    uniforms.opacity.value = material.opacity;\n    uniforms.diffuse.value = material.color;\n\n    if (material.emissive) {\n      uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n    }\n\n    uniforms.map.value = material.map;\n    uniforms.specularMap.value = material.specularMap;\n    uniforms.alphaMap.value = material.alphaMap;\n\n    if (material.aoMap) {\n      uniforms.aoMap.value = material.aoMap;\n      uniforms.aoMapIntensity.value = material.aoMapIntensity;\n    } // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. specular map\n    // 3. normal map\n    // 4. bump map\n    // 5. alpha map\n    // 6. emissive map\n\n\n    var uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.specularMap) {\n      uvScaleMap = material.specularMap;\n    } else if (material.displacementMap) {\n      uvScaleMap = material.displacementMap;\n    } else if (material.normalMap) {\n      uvScaleMap = material.normalMap;\n    } else if (material.bumpMap) {\n      uvScaleMap = material.bumpMap;\n    } else if (material.roughnessMap) {\n      uvScaleMap = material.roughnessMap;\n    } else if (material.metalnessMap) {\n      uvScaleMap = material.metalnessMap;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    } else if (material.emissiveMap) {\n      uvScaleMap = material.emissiveMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      // backwards compatibility\n      if (uvScaleMap instanceof THREE.WebGLRenderTarget) {\n        uvScaleMap = uvScaleMap.texture;\n      }\n\n      var offset = uvScaleMap.offset;\n      var repeat = uvScaleMap.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n\n    uniforms.envMap.value = material.envMap; // don't flip CubeTexture envMaps, flip everything else:\n    //  WebGLRenderTargetCube will be flipped for backwards compatibility\n    //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n    // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\n    uniforms.flipEnvMap.value = !(material.envMap instanceof THREE.CubeTexture) ? 1 : -1;\n    uniforms.reflectivity.value = material.reflectivity;\n    uniforms.refractionRatio.value = material.refractionRatio;\n  }\n\n  function refreshUniformsLine(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n  }\n\n  function refreshUniformsDash(uniforms, material) {\n    uniforms.dashSize.value = material.dashSize;\n    uniforms.totalSize.value = material.dashSize + material.gapSize;\n    uniforms.scale.value = material.scale;\n  }\n\n  function refreshUniformsPoints(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n    uniforms.size.value = material.size * _pixelRatio;\n    uniforms.scale.value = _canvas.clientHeight * 0.5;\n    uniforms.map.value = material.map;\n\n    if (material.map !== null) {\n      var offset = material.map.offset;\n      var repeat = material.map.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n  }\n\n  function refreshUniformsFog(uniforms, fog) {\n    uniforms.fogColor.value = fog.color;\n\n    if (fog instanceof THREE.Fog) {\n      uniforms.fogNear.value = fog.near;\n      uniforms.fogFar.value = fog.far;\n    } else if (fog instanceof THREE.FogExp2) {\n      uniforms.fogDensity.value = fog.density;\n    }\n  }\n\n  function refreshUniformsLambert(uniforms, material) {\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n  }\n\n  function refreshUniformsPhong(uniforms, material) {\n    uniforms.specular.value = material.specular;\n    uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsStandard(uniforms, material) {\n    uniforms.roughness.value = material.roughness;\n    uniforms.metalness.value = material.metalness;\n\n    if (material.roughnessMap) {\n      uniforms.roughnessMap.value = material.roughnessMap;\n    }\n\n    if (material.metalnessMap) {\n      uniforms.metalnessMap.value = material.metalnessMap;\n    }\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n\n    if (material.envMap) {\n      //uniforms.envMap.value = material.envMap; // part of uniforms common\n      uniforms.envMapIntensity.value = material.envMapIntensity;\n    }\n  }\n\n  function refreshUniformsPhysical(uniforms, material) {\n    refreshUniformsStandard(uniforms, material);\n  } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n  function markUniformsLightsNeedsUpdate(uniforms, value) {\n    uniforms.ambientLightColor.needsUpdate = value;\n    uniforms.directionalLights.needsUpdate = value;\n    uniforms.pointLights.needsUpdate = value;\n    uniforms.spotLights.needsUpdate = value;\n    uniforms.hemisphereLights.needsUpdate = value;\n  } // Lighting\n\n\n  function setupShadows(lights) {\n    var lightShadowsLength = 0;\n\n    for (var i = 0, l = lights.length; i < l; i++) {\n      var light = lights[i];\n\n      if (light.castShadow) {\n        _lights.shadows[lightShadowsLength++] = light;\n      }\n    }\n\n    _lights.shadows.length = lightShadowsLength;\n  }\n\n  function setupLights(lights, camera) {\n    var l,\n        ll,\n        light,\n        r = 0,\n        g = 0,\n        b = 0,\n        color,\n        intensity,\n        distance,\n        shadowMap,\n        viewMatrix = camera.matrixWorldInverse,\n        directionalLength = 0,\n        pointLength = 0,\n        spotLength = 0,\n        hemiLength = 0;\n\n    for (l = 0, ll = lights.length; l < ll; l++) {\n      light = lights[l];\n      color = light.color;\n      intensity = light.intensity;\n      distance = light.distance;\n      shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n      if (light instanceof THREE.AmbientLight) {\n        r += color.r * intensity;\n        g += color.g * intensity;\n        b += color.b * intensity;\n      } else if (light instanceof THREE.DirectionalLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\n        _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        uniforms.direction.sub(_vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n        }\n\n        _lights.directionalShadowMap[directionalLength] = shadowMap;\n        _lights.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n        _lights.directional[directionalLength++] = uniforms;\n      } else if (light instanceof THREE.SpotLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(color).multiplyScalar(intensity);\n        uniforms.distance = distance;\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\n        _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        uniforms.direction.sub(_vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.coneCos = Math.cos(light.angle);\n        uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n        uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n        }\n\n        _lights.spotShadowMap[spotLength] = shadowMap;\n        _lights.spotShadowMatrix[spotLength] = light.shadow.matrix;\n        _lights.spot[spotLength++] = uniforms;\n      } else if (light instanceof THREE.PointLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.distance = light.distance;\n        uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          uniforms.shadowBias = light.shadow.bias;\n          uniforms.shadowRadius = light.shadow.radius;\n          uniforms.shadowMapSize = light.shadow.mapSize;\n        }\n\n        _lights.pointShadowMap[pointLength] = shadowMap;\n\n        if (_lights.pointShadowMatrix[pointLength] === undefined) {\n          _lights.pointShadowMatrix[pointLength] = new THREE.Matrix4();\n        } // for point lights we set the shadow matrix to be a translation-only matrix\n        // equal to inverse of the light's position\n\n\n        _vector3.setFromMatrixPosition(light.matrixWorld).negate();\n\n        _lights.pointShadowMatrix[pointLength].identity().setPosition(_vector3);\n\n        _lights.point[pointLength++] = uniforms;\n      } else if (light instanceof THREE.HemisphereLight) {\n        var uniforms = lightCache.get(light);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.direction.normalize();\n        uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n        uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n        _lights.hemi[hemiLength++] = uniforms;\n      }\n    }\n\n    _lights.ambient[0] = r;\n    _lights.ambient[1] = g;\n    _lights.ambient[2] = b;\n    _lights.directional.length = directionalLength;\n    _lights.spot.length = spotLength;\n    _lights.point.length = pointLength;\n    _lights.hemi.length = hemiLength;\n    _lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\n  } // GL state setting\n\n\n  this.setFaceCulling = function (cullFace, frontFaceDirection) {\n    state.setCullFace(cullFace);\n    state.setFlipSided(frontFaceDirection === THREE.FrontFaceDirectionCW);\n  }; // Textures\n\n\n  function allocTextureUnit() {\n    var textureUnit = _usedTextureUnits;\n\n    if (textureUnit >= capabilities.maxTextures) {\n      console.warn('WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures);\n    }\n\n    _usedTextureUnits += 1;\n    return textureUnit;\n  }\n\n  function setTextureParameters(textureType, texture, isPowerOfTwoImage) {\n    var extension;\n\n    if (isPowerOfTwoImage) {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL(texture.wrapS));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL(texture.wrapT));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL(texture.minFilter));\n    } else {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n      if (texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture);\n      }\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n      if (texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture);\n      }\n    }\n\n    extension = extensions.get('EXT_texture_filter_anisotropic');\n\n    if (extension) {\n      if (texture.type === THREE.FloatType && extensions.get('OES_texture_float_linear') === null) return;\n      if (texture.type === THREE.HalfFloatType && extensions.get('OES_texture_half_float_linear') === null) return;\n\n      if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n        _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, _this.getMaxAnisotropy()));\n\n        properties.get(texture).__currentAnisotropy = texture.anisotropy;\n      }\n    }\n  }\n\n  function uploadTexture(textureProperties, texture, slot) {\n    if (textureProperties.__webglInit === undefined) {\n      textureProperties.__webglInit = true;\n      texture.addEventListener('dispose', onTextureDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      _infoMemory.textures++;\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n    var image = clampToMaxSize(texture.image, capabilities.maxTextureSize);\n\n    if (textureNeedsPowerOfTwo(texture) && isPowerOfTwo(image) === false) {\n      image = makePowerOfTwo(image);\n    }\n\n    var isPowerOfTwoImage = isPowerOfTwo(image),\n        glFormat = paramThreeToGL(texture.format),\n        glType = paramThreeToGL(texture.type);\n    setTextureParameters(_gl.TEXTURE_2D, texture, isPowerOfTwoImage);\n    var mipmap,\n        mipmaps = texture.mipmaps;\n\n    if (texture instanceof THREE.DepthTexture) {\n      // populate depth texture with dummy data\n      var internalFormat = _gl.DEPTH_COMPONENT;\n\n      if (texture.type === THREE.FloatType) {\n        if (!_isWebGL2) throw new Error('Float Depth Texture only supported in WebGL2.0');\n        internalFormat = _gl.DEPTH_COMPONENT32F;\n      } else if (_isWebGL2) {\n        // WebGL 2.0 requires signed internalformat for glTexImage2D\n        internalFormat = _gl.DEPTH_COMPONENT16;\n      }\n\n      state.texImage2D(_gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null);\n    } else if (texture instanceof THREE.DataTexture) {\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data);\n      }\n    } else if (texture instanceof THREE.CompressedTexture) {\n      for (var i = 0, il = mipmaps.length; i < il; i++) {\n        mipmap = mipmaps[i];\n\n        if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n          if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n            state.compressedTexImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n          } else {\n            console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\");\n          }\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n      }\n    } else {\n      // regular Texture (image, video, canvas)\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image);\n      }\n    }\n\n    if (texture.generateMipmaps && isPowerOfTwoImage) _gl.generateMipmap(_gl.TEXTURE_2D);\n    textureProperties.__version = texture.version;\n    if (texture.onUpdate) texture.onUpdate(texture);\n  }\n\n  function setTexture2D(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.version > 0 && textureProperties.__version !== texture.version) {\n      var image = texture.image;\n\n      if (image === undefined) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined', texture);\n        return;\n      }\n\n      if (image.complete === false) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture);\n        return;\n      }\n\n      uploadTexture(textureProperties, texture, slot);\n      return;\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n  }\n\n  function clampToMaxSize(image, maxSize) {\n    if (image.width > maxSize || image.height > maxSize) {\n      // Warning: Scaling through the canvas will only work with images that use\n      // premultiplied alpha.\n      var scale = maxSize / Math.max(image.width, image.height);\n      var canvas = document.createElement('canvas');\n      canvas.width = Math.floor(image.width * scale);\n      canvas.height = Math.floor(image.height * scale);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n      console.warn('THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function isPowerOfTwo(image) {\n    return THREE.Math.isPowerOfTwo(image.width) && THREE.Math.isPowerOfTwo(image.height);\n  }\n\n  function textureNeedsPowerOfTwo(texture) {\n    if (texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping) return true;\n    if (texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) return true;\n    return false;\n  }\n\n  function makePowerOfTwo(image) {\n    if (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement) {\n      var canvas = document.createElement('canvas');\n      canvas.width = THREE.Math.nearestPowerOfTwo(image.width);\n      canvas.height = THREE.Math.nearestPowerOfTwo(image.height);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\n      console.warn('THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function setTextureCube(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image.length === 6) {\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        if (!textureProperties.__image__webglTextureCube) {\n          texture.addEventListener('dispose', onTextureDispose);\n          textureProperties.__image__webglTextureCube = _gl.createTexture();\n          _infoMemory.textures++;\n        }\n\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n        var isCompressed = texture instanceof THREE.CompressedTexture;\n        var isDataTexture = texture.image[0] instanceof THREE.DataTexture;\n        var cubeImage = [];\n\n        for (var i = 0; i < 6; i++) {\n          if (_this.autoScaleCubemaps && !isCompressed && !isDataTexture) {\n            cubeImage[i] = clampToMaxSize(texture.image[i], capabilities.maxCubemapSize);\n          } else {\n            cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n          }\n        }\n\n        var image = cubeImage[0],\n            isPowerOfTwoImage = isPowerOfTwo(image),\n            glFormat = paramThreeToGL(texture.format),\n            glType = paramThreeToGL(texture.type);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage);\n\n        for (var i = 0; i < 6; i++) {\n          if (!isCompressed) {\n            if (isDataTexture) {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n            } else {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[i]);\n            }\n          } else {\n            var mipmap,\n                mipmaps = cubeImage[i].mipmaps;\n\n            for (var j = 0, jl = mipmaps.length; j < jl; j++) {\n              mipmap = mipmaps[j];\n\n              if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n                if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n                  state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                } else {\n                  console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\");\n                }\n              } else {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n              }\n            }\n          }\n        }\n\n        if (texture.generateMipmaps && isPowerOfTwoImage) {\n          _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        }\n\n        textureProperties.__version = texture.version;\n        if (texture.onUpdate) texture.onUpdate(texture);\n      } else {\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n      }\n    }\n  }\n\n  function setTextureCubeDynamic(texture, slot) {\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_CUBE_MAP, properties.get(texture).__webglTexture);\n  }\n\n  this.allocTextureUnit = allocTextureUnit; //this.setTexture2D = setTexture2D;\n\n  this.setTexture2D = function () {\n    var warned = false; // backwards compatibility: peel texture.texture\n\n    return function (texture, slot) {\n      if (texture instanceof THREE.WebGLRenderTarget) {\n        if (!warned) {\n          console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\");\n          warned = true;\n        }\n\n        texture = texture.texture;\n      }\n\n      setTexture2D(texture, slot);\n    };\n  }();\n\n  this.setTexture = function () {\n    var warned = false;\n    return function (texture, slot) {\n      if (!warned) {\n        console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\");\n        warned = true;\n      }\n\n      _this.setTexture2D(texture, slot);\n    };\n  }();\n\n  this.setTextureCube = function () {\n    var warned = false;\n    return function (texture, slot) {\n      // backwards compatibility: peel texture.texture\n      if (texture instanceof THREE.WebGLRenderTargetCube) {\n        if (!warned) {\n          console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\");\n          warned = true;\n        }\n\n        texture = texture.texture;\n      } // currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n      // TODO: unify these code paths\n\n\n      if (texture instanceof THREE.CubeTexture || Array.isArray(texture.image) && texture.image.length === 6) {\n        // CompressedTexture can have Array in image :/\n        // this function alone should take care of cube textures\n        setTextureCube(texture, slot);\n      } else {\n        // assumed: texture property of THREE.WebGLRenderTargetCube\n        setTextureCubeDynamic(texture, slot);\n      }\n    };\n  }(); // Render targets\n  // Setup storage for target texture and bind it to correct framebuffer\n\n\n  function setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n    var glFormat = paramThreeToGL(renderTarget.texture.format);\n    var glType = paramThreeToGL(renderTarget.texture.type);\n    state.texImage2D(textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    _gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n  function setupRenderBufferStorage(renderbuffer, renderTarget) {\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n    if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else {\n      // FIXME: We don't support !depth !stencil\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height);\n    }\n\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n  } // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n  function setupDepthTexture(framebuffer, renderTarget) {\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n    if (isCube) throw new Error('Depth Texture with cube render targets is not supported!');\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    if (!(renderTarget.depthTexture instanceof THREE.DepthTexture)) {\n      throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n    } // upload an empty depth texture with framebuffer size\n\n\n    if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n      renderTarget.depthTexture.image.width = renderTarget.width;\n      renderTarget.depthTexture.image.height = renderTarget.height;\n      renderTarget.depthTexture.needsUpdate = true;\n    }\n\n    _this.setTexture2D(renderTarget.depthTexture, 0);\n\n    var webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n    _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n  } // Setup GL resources for a non-texture depth buffer\n\n\n  function setupDepthRenderbuffer(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n\n    if (renderTarget.depthTexture) {\n      if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n      setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n    } else {\n      if (isCube) {\n        renderTargetProperties.__webglDepthbuffer = [];\n\n        for (var i = 0; i < 6; i++) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\n          renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget);\n        }\n      } else {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n        renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n        setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget);\n      }\n    }\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  } // Set up GL resources for the render target\n\n\n  function setupRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(renderTarget.texture);\n    renderTarget.addEventListener('dispose', onRenderTargetDispose);\n    textureProperties.__webglTexture = _gl.createTexture();\n    _infoMemory.textures++;\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n    var isTargetPowerOfTwo = THREE.Math.isPowerOfTwo(renderTarget.width) && THREE.Math.isPowerOfTwo(renderTarget.height); // Setup framebuffer\n\n    if (isCube) {\n      renderTargetProperties.__webglFramebuffer = [];\n\n      for (var i = 0; i < 6; i++) {\n        renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n      }\n    } else {\n      renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n    } // Setup color buffer\n\n\n    if (isCube) {\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n      setTextureParameters(_gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo);\n\n      for (var i = 0; i < 6; i++) {\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n      }\n\n      if (renderTarget.texture.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n    } else {\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n      setTextureParameters(_gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo);\n      setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D);\n      if (renderTarget.texture.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_2D);\n      state.bindTexture(_gl.TEXTURE_2D, null);\n    } // Setup depth and stencil buffers\n\n\n    if (renderTarget.depthBuffer) {\n      setupDepthRenderbuffer(renderTarget);\n    }\n  }\n\n  this.getCurrentRenderTarget = function () {\n    return _currentRenderTarget;\n  };\n\n  this.setRenderTarget = function (renderTarget) {\n    _currentRenderTarget = renderTarget;\n\n    if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n      setupRenderTarget(renderTarget);\n    }\n\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n    var framebuffer;\n\n    if (renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n\n      if (isCube) {\n        framebuffer = renderTargetProperties.__webglFramebuffer[renderTarget.activeCubeFace];\n      } else {\n        framebuffer = renderTargetProperties.__webglFramebuffer;\n      }\n\n      _currentScissor.copy(renderTarget.scissor);\n\n      _currentScissorTest = renderTarget.scissorTest;\n\n      _currentViewport.copy(renderTarget.viewport);\n    } else {\n      framebuffer = null;\n\n      _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio);\n\n      _currentScissorTest = _scissorTest;\n\n      _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio);\n    }\n\n    if (_currentFramebuffer !== framebuffer) {\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      _currentFramebuffer = framebuffer;\n    }\n\n    state.scissor(_currentScissor);\n    state.setScissorTest(_currentScissorTest);\n    state.viewport(_currentViewport);\n\n    if (isCube) {\n      var textureProperties = properties.get(renderTarget.texture);\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel);\n    }\n  };\n\n  this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer) {\n    if (renderTarget instanceof THREE.WebGLRenderTarget === false) {\n      console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n      return;\n    }\n\n    var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n    if (framebuffer) {\n      var restore = false;\n\n      if (framebuffer !== _currentFramebuffer) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n        restore = true;\n      }\n\n      try {\n        var texture = renderTarget.texture;\n\n        if (texture.format !== THREE.RGBAFormat && paramThreeToGL(texture.format) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n          return;\n        }\n\n        if (texture.type !== THREE.UnsignedByteType && paramThreeToGL(texture.type) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && !(texture.type === THREE.FloatType && extensions.get('WEBGL_color_buffer_float')) && !(texture.type === THREE.HalfFloatType && extensions.get('EXT_color_buffer_half_float'))) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n          return;\n        }\n\n        if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n          // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n          if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n            _gl.readPixels(x, y, width, height, paramThreeToGL(texture.format), paramThreeToGL(texture.type), buffer);\n          }\n        } else {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n        }\n      } finally {\n        if (restore) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, _currentFramebuffer);\n        }\n      }\n    }\n  };\n\n  function updateRenderTargetMipmap(renderTarget) {\n    var target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n    var texture = properties.get(renderTarget.texture).__webglTexture;\n\n    state.bindTexture(target, texture);\n\n    _gl.generateMipmap(target);\n\n    state.bindTexture(target, null);\n  } // Fallback filters for non-power-of-2 textures\n\n\n  function filterFallback(f) {\n    if (f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter) {\n      return _gl.NEAREST;\n    }\n\n    return _gl.LINEAR;\n  } // Map three.js constants to WebGL constants\n\n\n  function paramThreeToGL(p) {\n    var extension;\n    if (p === THREE.RepeatWrapping) return _gl.REPEAT;\n    if (p === THREE.ClampToEdgeWrapping) return _gl.CLAMP_TO_EDGE;\n    if (p === THREE.MirroredRepeatWrapping) return _gl.MIRRORED_REPEAT;\n    if (p === THREE.NearestFilter) return _gl.NEAREST;\n    if (p === THREE.NearestMipMapNearestFilter) return _gl.NEAREST_MIPMAP_NEAREST;\n    if (p === THREE.NearestMipMapLinearFilter) return _gl.NEAREST_MIPMAP_LINEAR;\n    if (p === THREE.LinearFilter) return _gl.LINEAR;\n    if (p === THREE.LinearMipMapNearestFilter) return _gl.LINEAR_MIPMAP_NEAREST;\n    if (p === THREE.LinearMipMapLinearFilter) return _gl.LINEAR_MIPMAP_LINEAR;\n    if (p === THREE.UnsignedByteType) return _gl.UNSIGNED_BYTE;\n    if (p === THREE.UnsignedShort4444Type) return _gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === THREE.UnsignedShort5551Type) return _gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === THREE.UnsignedShort565Type) return _gl.UNSIGNED_SHORT_5_6_5;\n    if (p === THREE.ByteType) return _gl.BYTE;\n    if (p === THREE.ShortType) return _gl.SHORT;\n    if (p === THREE.UnsignedShortType) return _gl.UNSIGNED_SHORT;\n    if (p === THREE.IntType) return _gl.INT;\n    if (p === THREE.UnsignedIntType) return _gl.UNSIGNED_INT;\n    if (p === THREE.FloatType) return _gl.FLOAT;\n    extension = extensions.get('OES_texture_half_float');\n\n    if (extension !== null) {\n      if (p === THREE.HalfFloatType) return extension.HALF_FLOAT_OES;\n    }\n\n    if (p === THREE.AlphaFormat) return _gl.ALPHA;\n    if (p === THREE.RGBFormat) return _gl.RGB;\n    if (p === THREE.RGBAFormat) return _gl.RGBA;\n    if (p === THREE.LuminanceFormat) return _gl.LUMINANCE;\n    if (p === THREE.LuminanceAlphaFormat) return _gl.LUMINANCE_ALPHA;\n    if (p === THREE.DepthFormat) return _gl.DEPTH_COMPONENT;\n    if (p === THREE.AddEquation) return _gl.FUNC_ADD;\n    if (p === THREE.SubtractEquation) return _gl.FUNC_SUBTRACT;\n    if (p === THREE.ReverseSubtractEquation) return _gl.FUNC_REVERSE_SUBTRACT;\n    if (p === THREE.ZeroFactor) return _gl.ZERO;\n    if (p === THREE.OneFactor) return _gl.ONE;\n    if (p === THREE.SrcColorFactor) return _gl.SRC_COLOR;\n    if (p === THREE.OneMinusSrcColorFactor) return _gl.ONE_MINUS_SRC_COLOR;\n    if (p === THREE.SrcAlphaFactor) return _gl.SRC_ALPHA;\n    if (p === THREE.OneMinusSrcAlphaFactor) return _gl.ONE_MINUS_SRC_ALPHA;\n    if (p === THREE.DstAlphaFactor) return _gl.DST_ALPHA;\n    if (p === THREE.OneMinusDstAlphaFactor) return _gl.ONE_MINUS_DST_ALPHA;\n    if (p === THREE.DstColorFactor) return _gl.DST_COLOR;\n    if (p === THREE.OneMinusDstColorFactor) return _gl.ONE_MINUS_DST_COLOR;\n    if (p === THREE.SrcAlphaSaturateFactor) return _gl.SRC_ALPHA_SATURATE;\n    extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n      if (p === THREE.RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n      if (p === THREE.RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n      if (p === THREE.RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n    }\n\n    extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n      if (p === THREE.RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n      if (p === THREE.RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n      if (p === THREE.RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n    }\n\n    extension = extensions.get('WEBGL_compressed_texture_etc1');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_ETC1_Format) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n    }\n\n    extension = extensions.get('EXT_blend_minmax');\n\n    if (extension !== null) {\n      if (p === THREE.MinEquation) return extension.MIN_EXT;\n      if (p === THREE.MaxEquation) return extension.MAX_EXT;\n    }\n\n    return 0;\n  }\n}; // File:src/renderers/WebGLRenderTarget.js\n\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author Marius Kintel / https://github.com/kintel\r\n */\n\n/*\r\n In options, we can specify:\r\n * Texture parameters for an auto-generated target texture\r\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n*/\n\n\nTHREE.WebGLRenderTarget = function (width, height, options) {\n  this.uuid = THREE.Math.generateUUID();\n  this.width = width;\n  this.height = height;\n  this.scissor = new THREE.Vector4(0, 0, width, height);\n  this.scissorTest = false;\n  this.viewport = new THREE.Vector4(0, 0, width, height);\n  options = options || {};\n  if (options.minFilter === undefined) options.minFilter = THREE.LinearFilter;\n  this.texture = new THREE.Texture(undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n  this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n  this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n  this.depthTexture = null;\n};\n\nObject.assign(THREE.WebGLRenderTarget.prototype, THREE.EventDispatcher.prototype, {\n  setSize: function (width, height) {\n    if (this.width !== width || this.height !== height) {\n      this.width = width;\n      this.height = height;\n      this.dispose();\n    }\n\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.width = source.width;\n    this.height = source.height;\n    this.viewport.copy(source.viewport);\n    this.texture = source.texture.clone();\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    this.depthTexture = source.depthTexture;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n}); // File:src/renderers/WebGLRenderTargetCube.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\n\nTHREE.WebGLRenderTargetCube = function (width, height, options) {\n  THREE.WebGLRenderTarget.call(this, width, height, options);\n  this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\n  this.activeMipMapLevel = 0;\n};\n\nTHREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype);\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube; // File:src/renderers/webgl/WebGLBufferRenderer.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\nTHREE.WebGLBufferRenderer = function (_gl, extensions, _infoRender) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  function render(start, count) {\n    _gl.drawArrays(mode, start, count);\n\n    _infoRender.calls++;\n    _infoRender.vertices += count;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += count / 3;\n  }\n\n  function renderInstances(geometry) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n      return;\n    }\n\n    var position = geometry.attributes.position;\n    var count = 0;\n\n    if (position instanceof THREE.InterleavedBufferAttribute) {\n      count = position.data.count;\n      extension.drawArraysInstancedANGLE(mode, 0, count, geometry.maxInstancedCount);\n    } else {\n      count = position.count;\n      extension.drawArraysInstancedANGLE(mode, 0, count, geometry.maxInstancedCount);\n    }\n\n    _infoRender.calls++;\n    _infoRender.vertices += count * geometry.maxInstancedCount;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n  }\n\n  this.setMode = setMode;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}; // File:src/renderers/webgl/WebGLClipping.js\n\n\nTHREE.WebGLClipping = function () {\n  var scope = this,\n      globalState = null,\n      numGlobalPlanes = 0,\n      localClippingEnabled = false,\n      renderingShadows = false,\n      plane = new THREE.Plane(),\n      viewNormalMatrix = new THREE.Matrix3(),\n      uniform = {\n    value: null,\n    needsUpdate: false\n  };\n  this.uniform = uniform;\n  this.numPlanes = 0;\n\n  this.init = function (planes, enableLocalClipping, camera) {\n    var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n    // run another frame in order to reset the state:\n    numGlobalPlanes !== 0 || localClippingEnabled;\n    localClippingEnabled = enableLocalClipping;\n    globalState = projectPlanes(planes, camera, 0);\n    numGlobalPlanes = planes.length;\n    return enabled;\n  };\n\n  this.beginShadows = function () {\n    renderingShadows = true;\n    projectPlanes(null);\n  };\n\n  this.endShadows = function () {\n    renderingShadows = false;\n    resetGlobalState();\n  };\n\n  this.setState = function (planes, clipShadows, camera, cache, fromCache) {\n    if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n      // there's no local clipping\n      if (renderingShadows) {\n        // there's no global clipping\n        projectPlanes(null);\n      } else {\n        resetGlobalState();\n      }\n    } else {\n      var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n          lGlobal = nGlobal * 4,\n          dstArray = cache.clippingState || null;\n      uniform.value = dstArray; // ensure unique state\n\n      dstArray = projectPlanes(planes, camera, lGlobal, fromCache);\n\n      for (var i = 0; i !== lGlobal; ++i) {\n        dstArray[i] = globalState[i];\n      }\n\n      cache.clippingState = dstArray;\n      this.numPlanes += nGlobal;\n    }\n  };\n\n  function resetGlobalState() {\n    if (uniform.value !== globalState) {\n      uniform.value = globalState;\n      uniform.needsUpdate = numGlobalPlanes > 0;\n    }\n\n    scope.numPlanes = numGlobalPlanes;\n  }\n\n  function projectPlanes(planes, camera, dstOffset, skipTransform) {\n    var nPlanes = planes !== null ? planes.length : 0,\n        dstArray = null;\n\n    if (nPlanes !== 0) {\n      dstArray = uniform.value;\n\n      if (skipTransform !== true || dstArray === null) {\n        var flatSize = dstOffset + nPlanes * 4,\n            viewMatrix = camera.matrixWorldInverse;\n        viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n        if (dstArray === null || dstArray.length < flatSize) {\n          dstArray = new Float32Array(flatSize);\n        }\n\n        for (var i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n          plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n          plane.normal.toArray(dstArray, i4);\n          dstArray[i4 + 3] = plane.constant;\n        }\n      }\n\n      uniform.value = dstArray;\n      uniform.needsUpdate = true;\n    }\n\n    scope.numPlanes = nPlanes;\n    return dstArray;\n  }\n}; // File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLIndexedBufferRenderer = function (_gl, extensions, _infoRender) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  var type, size;\n\n  function setIndex(index) {\n    if (index.array instanceof Uint32Array && extensions.get('OES_element_index_uint')) {\n      type = _gl.UNSIGNED_INT;\n      size = 4;\n    } else {\n      type = _gl.UNSIGNED_SHORT;\n      size = 2;\n    }\n  }\n\n  function render(start, count) {\n    _gl.drawElements(mode, count, type, start * size);\n\n    _infoRender.calls++;\n    _infoRender.vertices += count;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += count / 3;\n  }\n\n  function renderInstances(geometry, start, count) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n      return;\n    }\n\n    extension.drawElementsInstancedANGLE(mode, count, type, start * size, geometry.maxInstancedCount);\n    _infoRender.calls++;\n    _infoRender.vertices += count * geometry.maxInstancedCount;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n  }\n\n  this.setMode = setMode;\n  this.setIndex = setIndex;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}; // File:src/renderers/webgl/WebGLExtensions.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLExtensions = function (gl) {\n  var extensions = {};\n\n  this.get = function (name) {\n    if (extensions[name] !== undefined) {\n      return extensions[name];\n    }\n\n    var extension;\n\n    switch (name) {\n      case 'WEBGL_depth_texture':\n        extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n        break;\n\n      case 'EXT_texture_filter_anisotropic':\n        extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n        break;\n\n      case 'WEBGL_compressed_texture_s3tc':\n        extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n        break;\n\n      case 'WEBGL_compressed_texture_pvrtc':\n        extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n        break;\n\n      case 'WEBGL_compressed_texture_etc1':\n        extension = gl.getExtension('WEBGL_compressed_texture_etc1');\n        break;\n\n      default:\n        extension = gl.getExtension(name);\n    }\n\n    if (extension === null) {\n      console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n    }\n\n    extensions[name] = extension;\n    return extension;\n  };\n}; // File:src/renderers/webgl/WebGLCapabilities.js\n\n\nTHREE.WebGLCapabilities = function (gl, extensions, parameters) {\n  function getMaxPrecision(precision) {\n    if (precision === 'highp') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n        return 'highp';\n      }\n\n      precision = 'mediump';\n    }\n\n    if (precision === 'mediump') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n        return 'mediump';\n      }\n    }\n\n    return 'lowp';\n  }\n\n  this.getMaxPrecision = getMaxPrecision;\n  this.precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n  this.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\n  this.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  this.maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n  this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  this.maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n  this.maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  this.maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n  this.maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n  this.maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n  this.vertexTextures = this.maxVertexTextures > 0;\n  this.floatFragmentTextures = !!extensions.get('OES_texture_float');\n  this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\n\n  var _maxPrecision = getMaxPrecision(this.precision);\n\n  if (_maxPrecision !== this.precision) {\n    console.warn('THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.');\n    this.precision = _maxPrecision;\n  }\n\n  if (this.logarithmicDepthBuffer) {\n    this.logarithmicDepthBuffer = !!extensions.get('EXT_frag_depth');\n  }\n}; // File:src/renderers/webgl/WebGLGeometries.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLGeometries = function (gl, properties, info) {\n  var geometries = {};\n\n  function get(object) {\n    var geometry = object.geometry;\n\n    if (geometries[geometry.id] !== undefined) {\n      return geometries[geometry.id];\n    }\n\n    geometry.addEventListener('dispose', onGeometryDispose);\n    var buffergeometry;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      buffergeometry = geometry;\n    } else if (geometry instanceof THREE.Geometry) {\n      if (geometry._bufferGeometry === undefined) {\n        geometry._bufferGeometry = new THREE.BufferGeometry().setFromObject(object);\n      }\n\n      buffergeometry = geometry._bufferGeometry;\n    }\n\n    geometries[geometry.id] = buffergeometry;\n    info.memory.geometries++;\n    return buffergeometry;\n  }\n\n  function onGeometryDispose(event) {\n    var geometry = event.target;\n    var buffergeometry = geometries[geometry.id];\n\n    if (buffergeometry.index !== null) {\n      deleteAttribute(buffergeometry.index);\n    }\n\n    deleteAttributes(buffergeometry.attributes);\n    geometry.removeEventListener('dispose', onGeometryDispose);\n    delete geometries[geometry.id]; // TODO\n\n    var property = properties.get(geometry);\n\n    if (property.wireframe) {\n      deleteAttribute(property.wireframe);\n    }\n\n    properties.delete(geometry);\n    var bufferproperty = properties.get(buffergeometry);\n\n    if (bufferproperty.wireframe) {\n      deleteAttribute(bufferproperty.wireframe);\n    }\n\n    properties.delete(buffergeometry); //\n\n    info.memory.geometries--;\n  }\n\n  function getAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      return properties.get(attribute.data).__webglBuffer;\n    }\n\n    return properties.get(attribute).__webglBuffer;\n  }\n\n  function deleteAttribute(attribute) {\n    var buffer = getAttributeBuffer(attribute);\n\n    if (buffer !== undefined) {\n      gl.deleteBuffer(buffer);\n      removeAttributeBuffer(attribute);\n    }\n  }\n\n  function deleteAttributes(attributes) {\n    for (var name in attributes) {\n      deleteAttribute(attributes[name]);\n    }\n  }\n\n  function removeAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      properties.delete(attribute.data);\n    } else {\n      properties.delete(attribute);\n    }\n  }\n\n  this.get = get;\n}; // File:src/renderers/webgl/WebGLLights.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLLights = function () {\n  var lights = {};\n\n  this.get = function (light) {\n    if (lights[light.id] !== undefined) {\n      return lights[light.id];\n    }\n\n    var uniforms;\n\n    switch (light.type) {\n      case 'DirectionalLight':\n        uniforms = {\n          direction: new THREE.Vector3(),\n          color: new THREE.Color(),\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new THREE.Vector2()\n        };\n        break;\n\n      case 'SpotLight':\n        uniforms = {\n          position: new THREE.Vector3(),\n          direction: new THREE.Vector3(),\n          color: new THREE.Color(),\n          distance: 0,\n          coneCos: 0,\n          penumbraCos: 0,\n          decay: 0,\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new THREE.Vector2()\n        };\n        break;\n\n      case 'PointLight':\n        uniforms = {\n          position: new THREE.Vector3(),\n          color: new THREE.Color(),\n          distance: 0,\n          decay: 0,\n          shadow: false,\n          shadowBias: 0,\n          shadowRadius: 1,\n          shadowMapSize: new THREE.Vector2()\n        };\n        break;\n\n      case 'HemisphereLight':\n        uniforms = {\n          direction: new THREE.Vector3(),\n          skyColor: new THREE.Color(),\n          groundColor: new THREE.Color()\n        };\n        break;\n    }\n\n    lights[light.id] = uniforms;\n    return uniforms;\n  };\n}; // File:src/renderers/webgl/WebGLObjects.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLObjects = function (gl, properties, info) {\n  var geometries = new THREE.WebGLGeometries(gl, properties, info); //\n\n  function update(object) {\n    // TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n    var geometry = geometries.get(object);\n\n    if (object.geometry instanceof THREE.Geometry) {\n      geometry.updateFromObject(object);\n    }\n\n    var index = geometry.index;\n    var attributes = geometry.attributes;\n\n    if (index !== null) {\n      updateAttribute(index, gl.ELEMENT_ARRAY_BUFFER);\n    }\n\n    for (var name in attributes) {\n      updateAttribute(attributes[name], gl.ARRAY_BUFFER);\n    } // morph targets\n\n\n    var morphAttributes = geometry.morphAttributes;\n\n    for (var name in morphAttributes) {\n      var array = morphAttributes[name];\n\n      for (var i = 0, l = array.length; i < l; i++) {\n        updateAttribute(array[i], gl.ARRAY_BUFFER);\n      }\n    }\n\n    return geometry;\n  }\n\n  function updateAttribute(attribute, bufferType) {\n    var data = attribute instanceof THREE.InterleavedBufferAttribute ? attribute.data : attribute;\n    var attributeProperties = properties.get(data);\n\n    if (attributeProperties.__webglBuffer === undefined) {\n      createBuffer(attributeProperties, data, bufferType);\n    } else if (attributeProperties.version !== data.version) {\n      updateBuffer(attributeProperties, data, bufferType);\n    }\n  }\n\n  function createBuffer(attributeProperties, data, bufferType) {\n    attributeProperties.__webglBuffer = gl.createBuffer();\n    gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n    var usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(bufferType, data.array, usage);\n    attributeProperties.version = data.version;\n  }\n\n  function updateBuffer(attributeProperties, data, bufferType) {\n    gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n\n    if (data.dynamic === false || data.updateRange.count === -1) {\n      // Not using update ranges\n      gl.bufferSubData(bufferType, 0, data.array);\n    } else if (data.updateRange.count === 0) {\n      console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.');\n    } else {\n      gl.bufferSubData(bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT, data.array.subarray(data.updateRange.offset, data.updateRange.offset + data.updateRange.count));\n      data.updateRange.count = 0; // reset range\n    }\n\n    attributeProperties.version = data.version;\n  }\n\n  function getAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      return properties.get(attribute.data).__webglBuffer;\n    }\n\n    return properties.get(attribute).__webglBuffer;\n  }\n\n  function getWireframeAttribute(geometry) {\n    var property = properties.get(geometry);\n\n    if (property.wireframe !== undefined) {\n      return property.wireframe;\n    }\n\n    var indices = [];\n    var index = geometry.index;\n    var attributes = geometry.attributes;\n    var position = attributes.position; // console.time( 'wireframe' );\n\n    if (index !== null) {\n      var edges = {};\n      var array = index.array;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var a = array[i + 0];\n        var b = array[i + 1];\n        var c = array[i + 2];\n        if (checkEdge(edges, a, b)) indices.push(a, b);\n        if (checkEdge(edges, b, c)) indices.push(b, c);\n        if (checkEdge(edges, c, a)) indices.push(c, a);\n      }\n    } else {\n      var array = attributes.position.array;\n\n      for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n        var a = i + 0;\n        var b = i + 1;\n        var c = i + 2;\n        indices.push(a, b, b, c, c, a);\n      }\n    } // console.timeEnd( 'wireframe' );\n\n\n    var TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n    var attribute = new THREE.BufferAttribute(new TypeArray(indices), 1);\n    updateAttribute(attribute, gl.ELEMENT_ARRAY_BUFFER);\n    property.wireframe = attribute;\n    return attribute;\n  }\n\n  function checkEdge(edges, a, b) {\n    if (a > b) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var list = edges[a];\n\n    if (list === undefined) {\n      edges[a] = [b];\n      return true;\n    } else if (list.indexOf(b) === -1) {\n      list.push(b);\n      return true;\n    }\n\n    return false;\n  }\n\n  this.getAttributeBuffer = getAttributeBuffer;\n  this.getWireframeAttribute = getWireframeAttribute;\n  this.update = update;\n}; // File:src/renderers/webgl/WebGLProgram.js\n\n\nTHREE.WebGLProgram = function () {\n  var programIdCount = 0;\n\n  function getEncodingComponents(encoding) {\n    switch (encoding) {\n      case THREE.LinearEncoding:\n        return ['Linear', '( value )'];\n\n      case THREE.sRGBEncoding:\n        return ['sRGB', '( value )'];\n\n      case THREE.RGBEEncoding:\n        return ['RGBE', '( value )'];\n\n      case THREE.RGBM7Encoding:\n        return ['RGBM', '( value, 7.0 )'];\n\n      case THREE.RGBM16Encoding:\n        return ['RGBM', '( value, 16.0 )'];\n\n      case THREE.RGBDEncoding:\n        return ['RGBD', '( value, 256.0 )'];\n\n      case THREE.GammaEncoding:\n        return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n      default:\n        throw new Error('unsupported encoding: ' + encoding);\n    }\n  }\n\n  function getTexelDecodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[0] + \"ToLinear\" + components[1] + \"; }\";\n  }\n\n  function getTexelEncodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[0] + components[1] + \"; }\";\n  }\n\n  function getToneMappingFunction(functionName, toneMapping) {\n    var toneMappingName;\n\n    switch (toneMapping) {\n      case THREE.LinearToneMapping:\n        toneMappingName = \"Linear\";\n        break;\n\n      case THREE.ReinhardToneMapping:\n        toneMappingName = \"Reinhard\";\n        break;\n\n      case THREE.Uncharted2ToneMapping:\n        toneMappingName = \"Uncharted2\";\n        break;\n\n      case THREE.CineonToneMapping:\n        toneMappingName = \"OptimizedCineon\";\n        break;\n\n      default:\n        throw new Error('unsupported toneMapping: ' + toneMapping);\n    }\n\n    return \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n  }\n\n  function generateExtensions(extensions, parameters, rendererExtensions) {\n    extensions = extensions || {};\n    var chunks = [extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ? '#extension GL_OES_standard_derivatives : enable' : '', (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '', extensions.drawBuffers && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '', (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n    return chunks.filter(filterEmptyLine).join('\\n');\n  }\n\n  function generateDefines(defines) {\n    var chunks = [];\n\n    for (var name in defines) {\n      var value = defines[name];\n      if (value === false) continue;\n      chunks.push('#define ' + name + ' ' + value);\n    }\n\n    return chunks.join('\\n');\n  }\n\n  function fetchAttributeLocations(gl, program, identifiers) {\n    var attributes = {};\n    var n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveAttrib(program, i);\n      var name = info.name; // console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n      attributes[name] = gl.getAttribLocation(program, name);\n    }\n\n    return attributes;\n  }\n\n  function filterEmptyLine(string) {\n    return string !== '';\n  }\n\n  function replaceLightNums(string, parameters) {\n    return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights);\n  }\n\n  function parseIncludes(string) {\n    var pattern = /#include +<([\\w\\d.]+)>/g;\n\n    function replace(match, include) {\n      var replace = THREE.ShaderChunk[include];\n\n      if (replace === undefined) {\n        throw new Error('Can not resolve #include <' + include + '>');\n      }\n\n      return parseIncludes(replace);\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  function unrollLoops(string) {\n    var pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n    function replace(match, start, end, snippet) {\n      var unroll = '';\n\n      for (var i = parseInt(start); i < parseInt(end); i++) {\n        unroll += snippet.replace(/\\[ i \\]/g, '[ ' + i + ' ]');\n      }\n\n      return unroll;\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  return function WebGLProgram(renderer, code, material, parameters) {\n    var gl = renderer.context;\n    var extensions = material.extensions;\n    var defines = material.defines;\n    var vertexShader = material.__webglShader.vertexShader;\n    var fragmentShader = material.__webglShader.fragmentShader;\n    var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n    if (parameters.shadowMapType === THREE.PCFShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n    } else if (parameters.shadowMapType === THREE.PCFSoftShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n    }\n\n    var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n    var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n    var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n    if (parameters.envMap) {\n      switch (material.envMap.mapping) {\n        case THREE.CubeReflectionMapping:\n        case THREE.CubeRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n\n        case THREE.CubeUVReflectionMapping:\n        case THREE.CubeUVRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n          break;\n\n        case THREE.EquirectangularReflectionMapping:\n        case THREE.EquirectangularRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n          break;\n\n        case THREE.SphericalReflectionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n          break;\n      }\n\n      switch (material.envMap.mapping) {\n        case THREE.CubeRefractionMapping:\n        case THREE.EquirectangularRefractionMapping:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n\n      switch (material.combine) {\n        case THREE.MultiplyOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n\n        case THREE.MixOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n\n        case THREE.AddOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n      }\n    }\n\n    var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0; // console.log( 'building new program ' );\n    //\n\n    var customExtensions = generateExtensions(extensions, parameters, renderer.extensions);\n    var customDefines = generateDefines(defines); //\n\n    var program = gl.createProgram();\n    var prefixVertex, prefixFragment;\n\n    if (material instanceof THREE.RawShaderMaterial) {\n      prefixVertex = '';\n      prefixFragment = '';\n    } else {\n      prefixVertex = ['precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + material.__webglShader.name, customDefines, parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes, parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [customExtensions, 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + material.__webglShader.name, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', '#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes, parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '', parameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', parameters.envMap && renderer.extensions.get('EXT_shader_texture_lod') ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', parameters.toneMapping !== THREE.NoToneMapping ? \"#define TONE_MAPPING\" : '', parameters.toneMapping !== THREE.NoToneMapping ? THREE.ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n      parameters.toneMapping !== THREE.NoToneMapping ? getToneMappingFunction(\"toneMapping\", parameters.toneMapping) : '', parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ? THREE.ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n      parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.outputEncoding ? getTexelEncodingFunction(\"linearToOutputTexel\", parameters.outputEncoding) : '', parameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n    }\n\n    vertexShader = parseIncludes(vertexShader, parameters);\n    vertexShader = replaceLightNums(vertexShader, parameters);\n    fragmentShader = parseIncludes(fragmentShader, parameters);\n    fragmentShader = replaceLightNums(fragmentShader, parameters);\n\n    if (material instanceof THREE.ShaderMaterial === false) {\n      vertexShader = unrollLoops(vertexShader);\n      fragmentShader = unrollLoops(fragmentShader);\n    }\n\n    var vertexGlsl = prefixVertex + vertexShader;\n    var fragmentGlsl = prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n    // console.log( '*FRAGMENT*', fragmentGlsl );\n\n    var glVertexShader = THREE.WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n    var glFragmentShader = THREE.WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n    gl.attachShader(program, glVertexShader);\n    gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n    if (material.index0AttributeName !== undefined) {\n      gl.bindAttribLocation(program, 0, material.index0AttributeName);\n    } else if (parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      gl.bindAttribLocation(program, 0, 'position');\n    }\n\n    gl.linkProgram(program);\n    var programLog = gl.getProgramInfoLog(program);\n    var vertexLog = gl.getShaderInfoLog(glVertexShader);\n    var fragmentLog = gl.getShaderInfoLog(glFragmentShader);\n    var runnable = true;\n    var haveDiagnostics = true; // console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n    // console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n      runnable = false;\n      console.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog);\n    } else if (programLog !== '') {\n      console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n    } else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        material: material,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    } // clean up\n\n\n    gl.deleteShader(glVertexShader);\n    gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n    var cachedUniforms;\n\n    this.getUniforms = function () {\n      if (cachedUniforms === undefined) {\n        cachedUniforms = new THREE.WebGLUniforms(gl, program, renderer);\n      }\n\n      return cachedUniforms;\n    }; // set up caching for attribute locations\n\n\n    var cachedAttributes;\n\n    this.getAttributes = function () {\n      if (cachedAttributes === undefined) {\n        cachedAttributes = fetchAttributeLocations(gl, program);\n      }\n\n      return cachedAttributes;\n    }; // free resource\n\n\n    this.destroy = function () {\n      gl.deleteProgram(program);\n      this.program = undefined;\n    }; // DEPRECATED\n\n\n    Object.defineProperties(this, {\n      uniforms: {\n        get: function () {\n          console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().');\n          return this.getUniforms();\n        }\n      },\n      attributes: {\n        get: function () {\n          console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().');\n          return this.getAttributes();\n        }\n      }\n    }); //\n\n    this.id = programIdCount++;\n    this.code = code;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n    return this;\n  };\n}(); // File:src/renderers/webgl/WebGLPrograms.js\n\n\nTHREE.WebGLPrograms = function (renderer, capabilities) {\n  var programs = [];\n  var shaderIDs = {\n    MeshDepthMaterial: 'depth',\n    MeshNormalMaterial: 'normal',\n    MeshBasicMaterial: 'basic',\n    MeshLambertMaterial: 'lambert',\n    MeshPhongMaterial: 'phong',\n    MeshStandardMaterial: 'physical',\n    MeshPhysicalMaterial: 'physical',\n    LineBasicMaterial: 'basic',\n    LineDashedMaterial: 'dashed',\n    PointsMaterial: 'points'\n  };\n  var parameterNames = [\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\", \"roughnessMap\", \"metalnessMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\", \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights', \"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"depthPacking\"];\n\n  function allocateBones(object) {\n    if (capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture) {\n      return 1024;\n    } else {\n      // default for when object is not specified\n      // ( for example when prebuilding shader to be used with multiple objects )\n      //\n      //  - leave some extra space for other uniforms\n      //  - limit here is ANGLE's 254 max uniform vectors\n      //    (up to 54 should be safe)\n      var nVertexUniforms = capabilities.maxVertexUniforms;\n      var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n      var maxBones = nVertexMatrices;\n\n      if (object !== undefined && object instanceof THREE.SkinnedMesh) {\n        maxBones = Math.min(object.skeleton.bones.length, maxBones);\n\n        if (maxBones < object.skeleton.bones.length) {\n          console.warn('WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)');\n        }\n      }\n\n      return maxBones;\n    }\n  }\n\n  function getTextureEncodingFromMap(map, gammaOverrideLinear) {\n    var encoding;\n\n    if (!map) {\n      encoding = THREE.LinearEncoding;\n    } else if (map instanceof THREE.Texture) {\n      encoding = map.encoding;\n    } else if (map instanceof THREE.WebGLRenderTarget) {\n      console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n      encoding = map.texture.encoding;\n    } // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\n\n    if (encoding === THREE.LinearEncoding && gammaOverrideLinear) {\n      encoding = THREE.GammaEncoding;\n    }\n\n    return encoding;\n  }\n\n  this.getParameters = function (material, lights, fog, nClipPlanes, object) {\n    var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n\n    var maxBones = allocateBones(object);\n    var precision = renderer.getPrecision();\n\n    if (material.precision !== null) {\n      precision = capabilities.getMaxPrecision(material.precision);\n\n      if (precision !== material.precision) {\n        console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n      }\n    }\n\n    var currentRenderTarget = renderer.getCurrentRenderTarget();\n    var parameters = {\n      shaderID: shaderID,\n      precision: precision,\n      supportsVertexTextures: capabilities.vertexTextures,\n      outputEncoding: getTextureEncodingFromMap(!currentRenderTarget ? null : currentRenderTarget.texture, renderer.gammaOutput),\n      map: !!material.map,\n      mapEncoding: getTextureEncodingFromMap(material.map, renderer.gammaInput),\n      envMap: !!material.envMap,\n      envMapMode: material.envMap && material.envMap.mapping,\n      envMapEncoding: getTextureEncodingFromMap(material.envMap, renderer.gammaInput),\n      envMapCubeUV: !!material.envMap && (material.envMap.mapping === THREE.CubeUVReflectionMapping || material.envMap.mapping === THREE.CubeUVRefractionMapping),\n      lightMap: !!material.lightMap,\n      aoMap: !!material.aoMap,\n      emissiveMap: !!material.emissiveMap,\n      emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, renderer.gammaInput),\n      bumpMap: !!material.bumpMap,\n      normalMap: !!material.normalMap,\n      displacementMap: !!material.displacementMap,\n      roughnessMap: !!material.roughnessMap,\n      metalnessMap: !!material.metalnessMap,\n      specularMap: !!material.specularMap,\n      alphaMap: !!material.alphaMap,\n      combine: material.combine,\n      vertexColors: material.vertexColors,\n      fog: fog,\n      useFog: material.fog,\n      fogExp: fog instanceof THREE.FogExp2,\n      flatShading: material.shading === THREE.FlatShading,\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n      skinning: material.skinning,\n      maxBones: maxBones,\n      useVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n      morphTargets: material.morphTargets,\n      morphNormals: material.morphNormals,\n      maxMorphTargets: renderer.maxMorphTargets,\n      maxMorphNormals: renderer.maxMorphNormals,\n      numDirLights: lights.directional.length,\n      numPointLights: lights.point.length,\n      numSpotLights: lights.spot.length,\n      numHemiLights: lights.hemi.length,\n      numClippingPlanes: nClipPlanes,\n      shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n      shadowMapType: renderer.shadowMap.type,\n      toneMapping: renderer.toneMapping,\n      physicallyCorrectLights: renderer.physicallyCorrectLights,\n      premultipliedAlpha: material.premultipliedAlpha,\n      alphaTest: material.alphaTest,\n      doubleSided: material.side === THREE.DoubleSide,\n      flipSided: material.side === THREE.BackSide,\n      depthPacking: material.depthPacking !== undefined ? material.depthPacking : false\n    };\n    return parameters;\n  };\n\n  this.getProgramCode = function (material, parameters) {\n    var array = [];\n\n    if (parameters.shaderID) {\n      array.push(parameters.shaderID);\n    } else {\n      array.push(material.fragmentShader);\n      array.push(material.vertexShader);\n    }\n\n    if (material.defines !== undefined) {\n      for (var name in material.defines) {\n        array.push(name);\n        array.push(material.defines[name]);\n      }\n    }\n\n    for (var i = 0; i < parameterNames.length; i++) {\n      array.push(parameters[parameterNames[i]]);\n    }\n\n    return array.join();\n  };\n\n  this.acquireProgram = function (material, parameters, code) {\n    var program; // Check if code has been already compiled\n\n    for (var p = 0, pl = programs.length; p < pl; p++) {\n      var programInfo = programs[p];\n\n      if (programInfo.code === code) {\n        program = programInfo;\n        ++program.usedTimes;\n        break;\n      }\n    }\n\n    if (program === undefined) {\n      program = new THREE.WebGLProgram(renderer, code, material, parameters);\n      programs.push(program);\n    }\n\n    return program;\n  };\n\n  this.releaseProgram = function (program) {\n    if (--program.usedTimes === 0) {\n      // Remove from unordered set\n      var i = programs.indexOf(program);\n      programs[i] = programs[programs.length - 1];\n      programs.pop(); // Free WebGL resources\n\n      program.destroy();\n    }\n  }; // Exposed for resource monitoring & error feedback via renderer.info:\n\n\n  this.programs = programs;\n}; // File:src/renderers/webgl/WebGLProperties.js\n\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\n\n\nTHREE.WebGLProperties = function () {\n  var properties = {};\n\n  this.get = function (object) {\n    var uuid = object.uuid;\n    var map = properties[uuid];\n\n    if (map === undefined) {\n      map = {};\n      properties[uuid] = map;\n    }\n\n    return map;\n  };\n\n  this.delete = function (object) {\n    delete properties[object.uuid];\n  };\n\n  this.clear = function () {\n    properties = {};\n  };\n}; // File:src/renderers/webgl/WebGLShader.js\n\n\nTHREE.WebGLShader = function () {\n  function addLineNumbers(string) {\n    var lines = string.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      lines[i] = i + 1 + ': ' + lines[i];\n    }\n\n    return lines.join('\\n');\n  }\n\n  return function WebGLShader(gl, type, string) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      console.error('THREE.WebGLShader: Shader couldn\\'t compile.');\n    }\n\n    if (gl.getShaderInfoLog(shader) !== '') {\n      console.warn('THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog(shader), addLineNumbers(string));\n    } // --enable-privileged-webgl-extension\n    // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\n    return shader;\n  };\n}(); // File:src/renderers/webgl/WebGLShadowMap.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.WebGLShadowMap = function (_renderer, _lights, _objects) {\n  var _gl = _renderer.context,\n      _state = _renderer.state,\n      _frustum = new THREE.Frustum(),\n      _projScreenMatrix = new THREE.Matrix4(),\n      _lightShadows = _lights.shadows,\n      _shadowMapSize = new THREE.Vector2(),\n      _lookTarget = new THREE.Vector3(),\n      _lightPositionWorld = new THREE.Vector3(),\n      _renderList = [],\n      _MorphingFlag = 1,\n      _SkinningFlag = 2,\n      _NumberOfMaterialVariants = (_MorphingFlag | _SkinningFlag) + 1,\n      _depthMaterials = new Array(_NumberOfMaterialVariants),\n      _distanceMaterials = new Array(_NumberOfMaterialVariants),\n      _materialCache = {};\n\n  var cubeDirections = [new THREE.Vector3(1, 0, 0), new THREE.Vector3(-1, 0, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, -1, 0)];\n  var cubeUps = [new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1)];\n  var cube2DViewPorts = [new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()]; // init\n\n  var depthMaterialTemplate = new THREE.MeshDepthMaterial();\n  depthMaterialTemplate.depthPacking = THREE.RGBADepthPacking;\n  depthMaterialTemplate.clipping = true;\n  var distanceShader = THREE.ShaderLib[\"distanceRGBA\"];\n  var distanceUniforms = THREE.UniformsUtils.clone(distanceShader.uniforms);\n\n  for (var i = 0; i !== _NumberOfMaterialVariants; ++i) {\n    var useMorphing = (i & _MorphingFlag) !== 0;\n    var useSkinning = (i & _SkinningFlag) !== 0;\n    var depthMaterial = depthMaterialTemplate.clone();\n    depthMaterial.morphTargets = useMorphing;\n    depthMaterial.skinning = useSkinning;\n    _depthMaterials[i] = depthMaterial;\n    var distanceMaterial = new THREE.ShaderMaterial({\n      defines: {\n        'USE_SHADOWMAP': ''\n      },\n      uniforms: distanceUniforms,\n      vertexShader: distanceShader.vertexShader,\n      fragmentShader: distanceShader.fragmentShader,\n      morphTargets: useMorphing,\n      skinning: useSkinning,\n      clipping: true\n    });\n    _distanceMaterials[i] = distanceMaterial;\n  } //\n\n\n  var scope = this;\n  this.enabled = false;\n  this.autoUpdate = true;\n  this.needsUpdate = false;\n  this.type = THREE.PCFShadowMap;\n  this.renderReverseSided = true;\n  this.renderSingleSided = true;\n\n  this.render = function (scene, camera) {\n    if (scope.enabled === false) return;\n    if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n    if (_lightShadows.length === 0) return; // Set GL state for depth map.\n\n    _state.clearColor(1, 1, 1, 1);\n\n    _state.disable(_gl.BLEND);\n\n    _state.setDepthTest(true);\n\n    _state.setScissorTest(false); // render depth map\n\n\n    var faceCount, isPointLight;\n\n    for (var i = 0, il = _lightShadows.length; i < il; i++) {\n      var light = _lightShadows[i];\n      var shadow = light.shadow;\n\n      if (shadow === undefined) {\n        console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n        continue;\n      }\n\n      var shadowCamera = shadow.camera;\n\n      _shadowMapSize.copy(shadow.mapSize);\n\n      if (light instanceof THREE.PointLight) {\n        faceCount = 6;\n        isPointLight = true;\n        var vpWidth = _shadowMapSize.x;\n        var vpHeight = _shadowMapSize.y; // These viewports map a cube-map onto a 2D texture with the\n        // following orientation:\n        //\n        //  xzXZ\n        //   y Y\n        //\n        // X - Positive x direction\n        // x - Negative x direction\n        // Y - Positive y direction\n        // y - Negative y direction\n        // Z - Positive z direction\n        // z - Negative z direction\n        // positive X\n\n        cube2DViewPorts[0].set(vpWidth * 2, vpHeight, vpWidth, vpHeight); // negative X\n\n        cube2DViewPorts[1].set(0, vpHeight, vpWidth, vpHeight); // positive Z\n\n        cube2DViewPorts[2].set(vpWidth * 3, vpHeight, vpWidth, vpHeight); // negative Z\n\n        cube2DViewPorts[3].set(vpWidth, vpHeight, vpWidth, vpHeight); // positive Y\n\n        cube2DViewPorts[4].set(vpWidth * 3, 0, vpWidth, vpHeight); // negative Y\n\n        cube2DViewPorts[5].set(vpWidth, 0, vpWidth, vpHeight);\n        _shadowMapSize.x *= 4.0;\n        _shadowMapSize.y *= 2.0;\n      } else {\n        faceCount = 1;\n        isPointLight = false;\n      }\n\n      if (shadow.map === null) {\n        var pars = {\n          minFilter: THREE.NearestFilter,\n          magFilter: THREE.NearestFilter,\n          format: THREE.RGBAFormat\n        };\n        shadow.map = new THREE.WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n        shadowCamera.updateProjectionMatrix();\n      }\n\n      if (shadow instanceof THREE.SpotLightShadow) {\n        shadow.update(light);\n      }\n\n      var shadowMap = shadow.map;\n      var shadowMatrix = shadow.matrix;\n\n      _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n      shadowCamera.position.copy(_lightPositionWorld);\n\n      _renderer.setRenderTarget(shadowMap);\n\n      _renderer.clear(); // render shadow map for each cube face (if omni-directional) or\n      // run a single pass if not\n\n\n      for (var face = 0; face < faceCount; face++) {\n        if (isPointLight) {\n          _lookTarget.copy(shadowCamera.position);\n\n          _lookTarget.add(cubeDirections[face]);\n\n          shadowCamera.up.copy(cubeUps[face]);\n          shadowCamera.lookAt(_lookTarget);\n          var vpDimensions = cube2DViewPorts[face];\n\n          _state.viewport(vpDimensions);\n        } else {\n          _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n\n          shadowCamera.lookAt(_lookTarget);\n        }\n\n        shadowCamera.updateMatrixWorld();\n        shadowCamera.matrixWorldInverse.getInverse(shadowCamera.matrixWorld); // compute shadow matrix\n\n        shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n        shadowMatrix.multiply(shadowCamera.projectionMatrix);\n        shadowMatrix.multiply(shadowCamera.matrixWorldInverse); // update camera matrices and frustum\n\n        _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n        _frustum.setFromMatrix(_projScreenMatrix); // set object matrices & frustum culling\n\n\n        _renderList.length = 0;\n        projectObject(scene, camera, shadowCamera); // render shadow map\n        // render regular objects\n\n        for (var j = 0, jl = _renderList.length; j < jl; j++) {\n          var object = _renderList[j];\n\n          var geometry = _objects.update(object);\n\n          var material = object.material;\n\n          if (material instanceof THREE.MultiMaterial) {\n            var groups = geometry.groups;\n            var materials = material.materials;\n\n            for (var k = 0, kl = groups.length; k < kl; k++) {\n              var group = groups[k];\n              var groupMaterial = materials[group.materialIndex];\n\n              if (groupMaterial.visible === true) {\n                var depthMaterial = getDepthMaterial(object, groupMaterial, isPointLight, _lightPositionWorld);\n\n                _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n              }\n            }\n          } else {\n            var depthMaterial = getDepthMaterial(object, material, isPointLight, _lightPositionWorld);\n\n            _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n          }\n        }\n      }\n    } // Restore GL state.\n\n\n    var clearColor = _renderer.getClearColor(),\n        clearAlpha = _renderer.getClearAlpha();\n\n    _renderer.setClearColor(clearColor, clearAlpha);\n\n    scope.needsUpdate = false;\n  };\n\n  function getDepthMaterial(object, material, isPointLight, lightPositionWorld) {\n    var geometry = object.geometry;\n    var result = null;\n    var materialVariants = _depthMaterials;\n    var customMaterial = object.customDepthMaterial;\n\n    if (isPointLight) {\n      materialVariants = _distanceMaterials;\n      customMaterial = object.customDistanceMaterial;\n    }\n\n    if (!customMaterial) {\n      var useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\n      var useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\n      var variantIndex = 0;\n      if (useMorphing) variantIndex |= _MorphingFlag;\n      if (useSkinning) variantIndex |= _SkinningFlag;\n      result = materialVariants[variantIndex];\n    } else {\n      result = customMaterial;\n    }\n\n    if (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n      // in this case we need a unique material instance reflecting the\n      // appropriate state\n      var keyA = result.uuid,\n          keyB = material.uuid;\n      var materialsForVariant = _materialCache[keyA];\n\n      if (materialsForVariant === undefined) {\n        materialsForVariant = {};\n        _materialCache[keyA] = materialsForVariant;\n      }\n\n      var cachedMaterial = materialsForVariant[keyB];\n\n      if (cachedMaterial === undefined) {\n        cachedMaterial = result.clone();\n        materialsForVariant[keyB] = cachedMaterial;\n      }\n\n      result = cachedMaterial;\n    }\n\n    result.visible = material.visible;\n    result.wireframe = material.wireframe;\n    var side = material.side;\n\n    if (scope.renderSingleSided && side == THREE.DoubleSide) {\n      side = THREE.FrontSide;\n    }\n\n    if (scope.renderReverseSided) {\n      if (side === THREE.FrontSide) side = THREE.BackSide;else if (side === THREE.BackSide) side = THREE.FrontSide;\n    }\n\n    result.side = side;\n    result.clipShadows = material.clipShadows;\n    result.clippingPlanes = material.clippingPlanes;\n    result.wireframeLinewidth = material.wireframeLinewidth;\n    result.linewidth = material.linewidth;\n\n    if (isPointLight && result.uniforms.lightPos !== undefined) {\n      result.uniforms.lightPos.value.copy(lightPositionWorld);\n    }\n\n    return result;\n  }\n\n  function projectObject(object, camera, shadowCamera) {\n    if (object.visible === false) return;\n\n    if (object.layers.test(camera.layers) && (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points)) {\n      if (object.castShadow && (object.frustumCulled === false || _frustum.intersectsObject(object) === true)) {\n        var material = object.material;\n\n        if (material.visible === true) {\n          object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n          _renderList.push(object);\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera, shadowCamera);\n    }\n  }\n}; // File:src/renderers/webgl/WebGLState.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLState = function (gl, extensions, paramThreeToGL) {\n  var _this = this;\n\n  this.buffers = {\n    color: new THREE.WebGLColorBuffer(gl, this),\n    depth: new THREE.WebGLDepthBuffer(gl, this),\n    stencil: new THREE.WebGLStencilBuffer(gl, this)\n  };\n  var maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  var newAttributes = new Uint8Array(maxVertexAttributes);\n  var enabledAttributes = new Uint8Array(maxVertexAttributes);\n  var attributeDivisors = new Uint8Array(maxVertexAttributes);\n  var capabilities = {};\n  var compressedTextureFormats = null;\n  var currentBlending = null;\n  var currentBlendEquation = null;\n  var currentBlendSrc = null;\n  var currentBlendDst = null;\n  var currentBlendEquationAlpha = null;\n  var currentBlendSrcAlpha = null;\n  var currentBlendDstAlpha = null;\n  var currentPremultipledAlpha = false;\n  var currentFlipSided = null;\n  var currentCullFace = null;\n  var currentLineWidth = null;\n  var currentPolygonOffsetFactor = null;\n  var currentPolygonOffsetUnits = null;\n  var currentScissorTest = null;\n  var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  var currentTextureSlot = null;\n  var currentBoundTextures = {};\n  var currentScissor = new THREE.Vector4();\n  var currentViewport = new THREE.Vector4();\n\n  function createTexture(type, target, count) {\n    var data = new Uint8Array(3);\n    var texture = gl.createTexture();\n    gl.bindTexture(type, texture);\n    gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    for (var i = 0; i < count; i++) {\n      gl.texImage2D(target + i, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, data);\n    }\n\n    return texture;\n  }\n\n  var emptyTextures = {};\n  emptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n  emptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); //\n\n  this.init = function () {\n    this.clearColor(0, 0, 0, 1);\n    this.clearDepth(1);\n    this.clearStencil(0);\n    this.enable(gl.DEPTH_TEST);\n    this.setDepthFunc(THREE.LessEqualDepth);\n    this.setFlipSided(false);\n    this.setCullFace(THREE.CullFaceBack);\n    this.enable(gl.CULL_FACE);\n    this.enable(gl.BLEND);\n    this.setBlending(THREE.NormalBlending);\n  };\n\n  this.initAttributes = function () {\n    for (var i = 0, l = newAttributes.length; i < l; i++) {\n      newAttributes[i] = 0;\n    }\n  };\n\n  this.enableAttribute = function (attribute) {\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== 0) {\n      var extension = extensions.get('ANGLE_instanced_arrays');\n      extension.vertexAttribDivisorANGLE(attribute, 0);\n      attributeDivisors[attribute] = 0;\n    }\n  };\n\n  this.enableAttributeAndDivisor = function (attribute, meshPerAttribute, extension) {\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== meshPerAttribute) {\n      extension.vertexAttribDivisorANGLE(attribute, meshPerAttribute);\n      attributeDivisors[attribute] = meshPerAttribute;\n    }\n  };\n\n  this.disableUnusedAttributes = function () {\n    for (var i = 0, l = enabledAttributes.length; i !== l; ++i) {\n      if (enabledAttributes[i] !== newAttributes[i]) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n  };\n\n  this.enable = function (id) {\n    if (capabilities[id] !== true) {\n      gl.enable(id);\n      capabilities[id] = true;\n    }\n  };\n\n  this.disable = function (id) {\n    if (capabilities[id] !== false) {\n      gl.disable(id);\n      capabilities[id] = false;\n    }\n  };\n\n  this.getCompressedTextureFormats = function () {\n    if (compressedTextureFormats === null) {\n      compressedTextureFormats = [];\n\n      if (extensions.get('WEBGL_compressed_texture_pvrtc') || extensions.get('WEBGL_compressed_texture_s3tc') || extensions.get('WEBGL_compressed_texture_etc1')) {\n        var formats = gl.getParameter(gl.COMPRESSED_TEXTURE_FORMATS);\n\n        for (var i = 0; i < formats.length; i++) {\n          compressedTextureFormats.push(formats[i]);\n        }\n      }\n    }\n\n    return compressedTextureFormats;\n  };\n\n  this.setBlending = function (blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n    if (blending !== THREE.NoBlending) {\n      this.enable(gl.BLEND);\n    } else {\n      this.disable(gl.BLEND);\n      currentBlending = blending; // no blending, that is\n\n      return;\n    }\n\n    if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n      if (blending === THREE.AdditiveBlending) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ONE, gl.ONE);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n        }\n      } else if (blending === THREE.SubtractiveBlending) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n        }\n      } else if (blending === THREE.MultiplyBlending) {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n        } else {\n          gl.blendEquation(gl.FUNC_ADD);\n          gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n        }\n      } else {\n        if (premultipliedAlpha) {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        } else {\n          gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n          gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        }\n      }\n\n      currentBlending = blending;\n      currentPremultipledAlpha = premultipliedAlpha;\n    }\n\n    if (blending === THREE.CustomBlending) {\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n\n      if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(paramThreeToGL(blendEquation), paramThreeToGL(blendEquationAlpha));\n        currentBlendEquation = blendEquation;\n        currentBlendEquationAlpha = blendEquationAlpha;\n      }\n\n      if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n        gl.blendFuncSeparate(paramThreeToGL(blendSrc), paramThreeToGL(blendDst), paramThreeToGL(blendSrcAlpha), paramThreeToGL(blendDstAlpha));\n        currentBlendSrc = blendSrc;\n        currentBlendDst = blendDst;\n        currentBlendSrcAlpha = blendSrcAlpha;\n        currentBlendDstAlpha = blendDstAlpha;\n      }\n    } else {\n      currentBlendEquation = null;\n      currentBlendSrc = null;\n      currentBlendDst = null;\n      currentBlendEquationAlpha = null;\n      currentBlendSrcAlpha = null;\n      currentBlendDstAlpha = null;\n    }\n  }; // TODO Deprecate\n\n\n  this.setColorWrite = function (colorWrite) {\n    this.buffers.color.setMask(colorWrite);\n  };\n\n  this.setDepthTest = function (depthTest) {\n    this.buffers.depth.setTest(depthTest);\n  };\n\n  this.setDepthWrite = function (depthWrite) {\n    this.buffers.depth.setMask(depthWrite);\n  };\n\n  this.setDepthFunc = function (depthFunc) {\n    this.buffers.depth.setFunc(depthFunc);\n  };\n\n  this.setStencilTest = function (stencilTest) {\n    this.buffers.stencil.setTest(stencilTest);\n  };\n\n  this.setStencilWrite = function (stencilWrite) {\n    this.buffers.stencil.setMask(stencilWrite);\n  };\n\n  this.setStencilFunc = function (stencilFunc, stencilRef, stencilMask) {\n    this.buffers.stencil.setFunc(stencilFunc, stencilRef, stencilMask);\n  };\n\n  this.setStencilOp = function (stencilFail, stencilZFail, stencilZPass) {\n    this.buffers.stencil.setOp(stencilFail, stencilZFail, stencilZPass);\n  }; //\n\n\n  this.setFlipSided = function (flipSided) {\n    if (currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(gl.CW);\n      } else {\n        gl.frontFace(gl.CCW);\n      }\n\n      currentFlipSided = flipSided;\n    }\n  };\n\n  this.setCullFace = function (cullFace) {\n    if (cullFace !== THREE.CullFaceNone) {\n      this.enable(gl.CULL_FACE);\n\n      if (cullFace !== currentCullFace) {\n        if (cullFace === THREE.CullFaceBack) {\n          gl.cullFace(gl.BACK);\n        } else if (cullFace === THREE.CullFaceFront) {\n          gl.cullFace(gl.FRONT);\n        } else {\n          gl.cullFace(gl.FRONT_AND_BACK);\n        }\n      }\n    } else {\n      this.disable(gl.CULL_FACE);\n    }\n\n    currentCullFace = cullFace;\n  };\n\n  this.setLineWidth = function (width) {\n    if (width !== currentLineWidth) {\n      gl.lineWidth(width);\n      currentLineWidth = width;\n    }\n  };\n\n  this.setPolygonOffset = function (polygonOffset, factor, units) {\n    if (polygonOffset) {\n      this.enable(gl.POLYGON_OFFSET_FILL);\n\n      if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n        gl.polygonOffset(factor, units);\n        currentPolygonOffsetFactor = factor;\n        currentPolygonOffsetUnits = units;\n      }\n    } else {\n      this.disable(gl.POLYGON_OFFSET_FILL);\n    }\n  };\n\n  this.getScissorTest = function () {\n    return currentScissorTest;\n  };\n\n  this.setScissorTest = function (scissorTest) {\n    currentScissorTest = scissorTest;\n\n    if (scissorTest) {\n      this.enable(gl.SCISSOR_TEST);\n    } else {\n      this.disable(gl.SCISSOR_TEST);\n    }\n  }; // texture\n\n\n  this.activeTexture = function (webglSlot) {\n    if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n    if (currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      currentTextureSlot = webglSlot;\n    }\n  };\n\n  this.bindTexture = function (webglType, webglTexture) {\n    if (currentTextureSlot === null) {\n      _this.activeTexture();\n    }\n\n    var boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture === undefined) {\n      boundTexture = {\n        type: undefined,\n        texture: undefined\n      };\n      currentBoundTextures[currentTextureSlot] = boundTexture;\n    }\n\n    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n      gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  };\n\n  this.compressedTexImage2D = function () {\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  this.texImage2D = function () {\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error(error);\n    }\n  }; // TODO Deprecate\n\n\n  this.clearColor = function (r, g, b, a) {\n    this.buffers.color.setClear(r, g, b, a);\n  };\n\n  this.clearDepth = function (depth) {\n    this.buffers.depth.setClear(depth);\n  };\n\n  this.clearStencil = function (stencil) {\n    this.buffers.stencil.setClear(stencil);\n  }; //\n\n\n  this.scissor = function (scissor) {\n    if (currentScissor.equals(scissor) === false) {\n      gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n      currentScissor.copy(scissor);\n    }\n  };\n\n  this.viewport = function (viewport) {\n    if (currentViewport.equals(viewport) === false) {\n      gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n      currentViewport.copy(viewport);\n    }\n  }; //\n\n\n  this.reset = function () {\n    for (var i = 0; i < enabledAttributes.length; i++) {\n      if (enabledAttributes[i] === 1) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n\n    capabilities = {};\n    compressedTextureFormats = null;\n    currentTextureSlot = null;\n    currentBoundTextures = {};\n    currentBlending = null;\n    currentFlipSided = null;\n    currentCullFace = null;\n    this.buffers.color.reset();\n    this.buffers.depth.reset();\n    this.buffers.stencil.reset();\n  };\n};\n\nTHREE.WebGLColorBuffer = function (gl, state) {\n  var locked = false;\n  var color = new THREE.Vector4();\n  var currentColorMask = null;\n  var currentColorClear = new THREE.Vector4();\n\n  this.setMask = function (colorMask) {\n    if (currentColorMask !== colorMask && !locked) {\n      gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n      currentColorMask = colorMask;\n    }\n  };\n\n  this.setLocked = function (lock) {\n    locked = lock;\n  };\n\n  this.setClear = function (r, g, b, a) {\n    color.set(r, g, b, a);\n\n    if (currentColorClear.equals(color) === false) {\n      gl.clearColor(r, g, b, a);\n      currentColorClear.copy(color);\n    }\n  };\n\n  this.reset = function () {\n    locked = false;\n    currentColorMask = null;\n    currentColorClear = new THREE.Vector4();\n  };\n};\n\nTHREE.WebGLDepthBuffer = function (gl, state) {\n  var locked = false;\n  var currentDepthMask = null;\n  var currentDepthFunc = null;\n  var currentDepthClear = null;\n\n  this.setTest = function (depthTest) {\n    if (depthTest) {\n      state.enable(gl.DEPTH_TEST);\n    } else {\n      state.disable(gl.DEPTH_TEST);\n    }\n  };\n\n  this.setMask = function (depthMask) {\n    if (currentDepthMask !== depthMask && !locked) {\n      gl.depthMask(depthMask);\n      currentDepthMask = depthMask;\n    }\n  };\n\n  this.setFunc = function (depthFunc) {\n    if (currentDepthFunc !== depthFunc) {\n      if (depthFunc) {\n        switch (depthFunc) {\n          case THREE.NeverDepth:\n            gl.depthFunc(gl.NEVER);\n            break;\n\n          case THREE.AlwaysDepth:\n            gl.depthFunc(gl.ALWAYS);\n            break;\n\n          case THREE.LessDepth:\n            gl.depthFunc(gl.LESS);\n            break;\n\n          case THREE.LessEqualDepth:\n            gl.depthFunc(gl.LEQUAL);\n            break;\n\n          case THREE.EqualDepth:\n            gl.depthFunc(gl.EQUAL);\n            break;\n\n          case THREE.GreaterEqualDepth:\n            gl.depthFunc(gl.GEQUAL);\n            break;\n\n          case THREE.GreaterDepth:\n            gl.depthFunc(gl.GREATER);\n            break;\n\n          case THREE.NotEqualDepth:\n            gl.depthFunc(gl.NOTEQUAL);\n            break;\n\n          default:\n            gl.depthFunc(gl.LEQUAL);\n        }\n      } else {\n        gl.depthFunc(gl.LEQUAL);\n      }\n\n      currentDepthFunc = depthFunc;\n    }\n  };\n\n  this.setLocked = function (lock) {\n    locked = lock;\n  };\n\n  this.setClear = function (depth) {\n    if (currentDepthClear !== depth) {\n      gl.clearDepth(depth);\n      currentDepthClear = depth;\n    }\n  };\n\n  this.reset = function () {\n    locked = false;\n    currentDepthMask = null;\n    currentDepthFunc = null;\n    currentDepthClear = null;\n  };\n};\n\nTHREE.WebGLStencilBuffer = function (gl, state) {\n  var locked = false;\n  var currentStencilMask = null;\n  var currentStencilFunc = null;\n  var currentStencilRef = null;\n  var currentStencilFuncMask = null;\n  var currentStencilFail = null;\n  var currentStencilZFail = null;\n  var currentStencilZPass = null;\n  var currentStencilClear = null;\n\n  this.setTest = function (stencilTest) {\n    if (stencilTest) {\n      state.enable(gl.STENCIL_TEST);\n    } else {\n      state.disable(gl.STENCIL_TEST);\n    }\n  };\n\n  this.setMask = function (stencilMask) {\n    if (currentStencilMask !== stencilMask && !locked) {\n      gl.stencilMask(stencilMask);\n      currentStencilMask = stencilMask;\n    }\n  };\n\n  this.setFunc = function (stencilFunc, stencilRef, stencilMask) {\n    if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n      gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n      currentStencilFunc = stencilFunc;\n      currentStencilRef = stencilRef;\n      currentStencilFuncMask = stencilMask;\n    }\n  };\n\n  this.setOp = function (stencilFail, stencilZFail, stencilZPass) {\n    if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n      gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n      currentStencilFail = stencilFail;\n      currentStencilZFail = stencilZFail;\n      currentStencilZPass = stencilZPass;\n    }\n  };\n\n  this.setLocked = function (lock) {\n    locked = lock;\n  };\n\n  this.setClear = function (stencil) {\n    if (currentStencilClear !== stencil) {\n      gl.clearStencil(stencil);\n      currentStencilClear = stencil;\n    }\n  };\n\n  this.reset = function () {\n    locked = false;\n    currentStencilMask = null;\n    currentStencilFunc = null;\n    currentStencilRef = null;\n    currentStencilFuncMask = null;\n    currentStencilFail = null;\n    currentStencilZFail = null;\n    currentStencilZPass = null;\n    currentStencilClear = null;\n  };\n}; // File:src/renderers/webgl/WebGLUniforms.js\n\n/**\r\n *\r\n * Uniforms of a program.\r\n * Those form a tree structure with a special top-level container for the root,\r\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\r\n *\r\n *\r\n * Properties of inner nodes including the top-level container:\r\n *\r\n * .seq - array of nested uniforms\r\n * .map - nested uniforms by name\r\n *\r\n *\r\n * Methods of all nodes except the top-level container:\r\n *\r\n * .setValue( gl, value, [renderer] )\r\n *\r\n * \t\tuploads a uniform value(s)\r\n *  \tthe 'renderer' parameter is needed for sampler uniforms\r\n *\r\n *\r\n * Static methods of the top-level container (renderer factorizations):\r\n *\r\n * .upload( gl, seq, values, renderer )\r\n *\r\n * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n *\r\n * .seqWithValue( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with corresponding entry in values\r\n *\r\n * .splitDynamic( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with dynamic entry and removes them from 'seq'\r\n *\r\n *\r\n * Methods of the top-level container (renderer factorizations):\r\n *\r\n * .setValue( gl, name, value )\r\n *\r\n * \t\tsets uniform with  name 'name' to 'value'\r\n *\r\n * .set( gl, obj, prop )\r\n *\r\n * \t\tsets uniform from object and property with same name than uniform\r\n *\r\n * .setOptional( gl, obj, prop )\r\n *\r\n * \t\tlike .set for an optional property of the object\r\n *\r\n *\r\n * @author tschw\r\n *\r\n */\n\n\nTHREE.WebGLUniforms = function () {\n  // scope\n  // --- Base for inner nodes (including the root) ---\n  var UniformContainer = function () {\n    this.seq = [];\n    this.map = {};\n  },\n      // --- Utilities ---\n  // Array Caches (provide typed arrays for temporary by size)\n  arrayCacheF32 = [],\n      arrayCacheI32 = [],\n      uncacheTemporaryArrays = function () {\n    arrayCacheF32.length = 0;\n    arrayCacheI32.length = 0;\n  },\n      // Flattening for arrays of vectors and matrices\n  flatten = function (array, nBlocks, blockSize) {\n    var firstElem = array[0];\n    if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n    // see http://jacksondunstan.com/articles/983\n\n    var n = nBlocks * blockSize,\n        r = arrayCacheF32[n];\n\n    if (r === undefined) {\n      r = new Float32Array(n);\n      arrayCacheF32[n] = r;\n    }\n\n    if (nBlocks !== 0) {\n      firstElem.toArray(r, 0);\n\n      for (var i = 1, offset = 0; i !== nBlocks; ++i) {\n        offset += blockSize;\n        array[i].toArray(r, offset);\n      }\n    }\n\n    return r;\n  },\n      // Texture unit allocation\n  allocTexUnits = function (renderer, n) {\n    var r = arrayCacheI32[n];\n\n    if (r === undefined) {\n      r = new Int32Array(n);\n      arrayCacheI32[n] = r;\n    }\n\n    for (var i = 0; i !== n; ++i) r[i] = renderer.allocTextureUnit();\n\n    return r;\n  },\n      // --- Setters ---\n  // Note: Defining these methods externally, because they come in a bunch\n  // and this way their names minify.\n  // Single scalar\n  setValue1f = function (gl, v) {\n    gl.uniform1f(this.addr, v);\n  },\n      setValue1i = function (gl, v) {\n    gl.uniform1i(this.addr, v);\n  },\n      // Single float vector (from flat array or THREE.VectorN)\n  setValue2fv = function (gl, v) {\n    if (v.x === undefined) gl.uniform2fv(this.addr, v);else gl.uniform2f(this.addr, v.x, v.y);\n  },\n      setValue3fv = function (gl, v) {\n    if (v.x !== undefined) gl.uniform3f(this.addr, v.x, v.y, v.z);else if (v.r !== undefined) gl.uniform3f(this.addr, v.r, v.g, v.b);else gl.uniform3fv(this.addr, v);\n  },\n      setValue4fv = function (gl, v) {\n    if (v.x === undefined) gl.uniform4fv(this.addr, v);else gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n  },\n      // Single matrix (from flat array or MatrixN)\n  setValue2fm = function (gl, v) {\n    gl.uniformMatrix2fv(this.addr, false, v.elements || v);\n  },\n      setValue3fm = function (gl, v) {\n    gl.uniformMatrix3fv(this.addr, false, v.elements || v);\n  },\n      setValue4fm = function (gl, v) {\n    gl.uniformMatrix4fv(this.addr, false, v.elements || v);\n  },\n      // Single texture (2D / Cube)\n  setValueT1 = function (gl, v, renderer) {\n    var unit = renderer.allocTextureUnit();\n    gl.uniform1i(this.addr, unit);\n    if (v) renderer.setTexture2D(v, unit);\n  },\n      setValueT6 = function (gl, v, renderer) {\n    var unit = renderer.allocTextureUnit();\n    gl.uniform1i(this.addr, unit);\n    if (v) renderer.setTextureCube(v, unit);\n  },\n      // Integer / Boolean vectors or arrays thereof (always flat arrays)\n  setValue2iv = function (gl, v) {\n    gl.uniform2iv(this.addr, v);\n  },\n      setValue3iv = function (gl, v) {\n    gl.uniform3iv(this.addr, v);\n  },\n      setValue4iv = function (gl, v) {\n    gl.uniform4iv(this.addr, v);\n  },\n      // Helper to pick the right setter for the singular case\n  getSingularSetter = function (type) {\n    switch (type) {\n      case 0x1406:\n        return setValue1f;\n      // FLOAT\n\n      case 0x8b50:\n        return setValue2fv;\n      // _VEC2\n\n      case 0x8b51:\n        return setValue3fv;\n      // _VEC3\n\n      case 0x8b52:\n        return setValue4fv;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValue2fm;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValue3fm;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValue4fm;\n      // _MAT4\n\n      case 0x8b5e:\n        return setValueT1;\n      // SAMPLER_2D\n\n      case 0x8b60:\n        return setValueT6;\n      // SAMPLER_CUBE\n\n      case 0x1404:\n      case 0x8b56:\n        return setValue1i;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValue2iv;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValue3iv;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValue4iv;\n      // _VEC4\n    }\n  },\n      // Array of scalars\n  setValue1fv = function (gl, v) {\n    gl.uniform1fv(this.addr, v);\n  },\n      setValue1iv = function (gl, v) {\n    gl.uniform1iv(this.addr, v);\n  },\n      // Array of vectors (flat or from THREE classes)\n  setValueV2a = function (gl, v) {\n    gl.uniform2fv(this.addr, flatten(v, this.size, 2));\n  },\n      setValueV3a = function (gl, v) {\n    gl.uniform3fv(this.addr, flatten(v, this.size, 3));\n  },\n      setValueV4a = function (gl, v) {\n    gl.uniform4fv(this.addr, flatten(v, this.size, 4));\n  },\n      // Array of matrices (flat or from THREE clases)\n  setValueM2a = function (gl, v) {\n    gl.uniformMatrix2fv(this.addr, false, flatten(v, this.size, 4));\n  },\n      setValueM3a = function (gl, v) {\n    gl.uniformMatrix3fv(this.addr, false, flatten(v, this.size, 9));\n  },\n      setValueM4a = function (gl, v) {\n    gl.uniformMatrix4fv(this.addr, false, flatten(v, this.size, 16));\n  },\n      // Array of textures (2D / Cube)\n  setValueT1a = function (gl, v, renderer) {\n    var n = v.length,\n        units = allocTexUnits(renderer, n);\n    gl.uniform1iv(this.addr, units);\n\n    for (var i = 0; i !== n; ++i) {\n      var tex = v[i];\n      if (tex) renderer.setTexture2D(tex, units[i]);\n    }\n  },\n      setValueT6a = function (gl, v, renderer) {\n    var n = v.length,\n        units = allocTexUnits(renderer, n);\n    gl.uniform1iv(this.addr, units);\n\n    for (var i = 0; i !== n; ++i) {\n      var tex = v[i];\n      if (tex) renderer.setTextureCube(tex, units[i]);\n    }\n  },\n      // Helper to pick the right setter for a pure (bottom-level) array\n  getPureArraySetter = function (type) {\n    switch (type) {\n      case 0x1406:\n        return setValue1fv;\n      // FLOAT\n\n      case 0x8b50:\n        return setValueV2a;\n      // _VEC2\n\n      case 0x8b51:\n        return setValueV3a;\n      // _VEC3\n\n      case 0x8b52:\n        return setValueV4a;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValueM2a;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValueM3a;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValueM4a;\n      // _MAT4\n\n      case 0x8b5e:\n        return setValueT1a;\n      // SAMPLER_2D\n\n      case 0x8b60:\n        return setValueT6a;\n      // SAMPLER_CUBE\n\n      case 0x1404:\n      case 0x8b56:\n        return setValue1iv;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValue2iv;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValue3iv;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValue4iv;\n      // _VEC4\n    }\n  },\n      // --- Uniform Classes ---\n  SingleUniform = function SingleUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  },\n      PureArrayUniform = function (id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.size = activeInfo.size;\n    this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  },\n      StructuredUniform = function (id) {\n    this.id = id;\n    UniformContainer.call(this); // mix-in\n  };\n\n  StructuredUniform.prototype.setValue = function (gl, value) {\n    // Note: Don't need an extra 'renderer' parameter, since samplers\n    // are not allowed in structured uniforms.\n    var seq = this.seq;\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      u.setValue(gl, value[u.id]);\n    }\n  }; // --- Top-level ---\n  // Parser - builds up the property tree from the path strings\n\n\n  var RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g,\n      // extracts\n  // \t- the identifier (member name or array index)\n  //  - followed by an optional right bracket (found when array index)\n  //  - followed by an optional left bracket or dot (type of subscript)\n  //\n  // Note: These portions can be read in a non-overlapping fashion and\n  // allow straightforward parsing of the hierarchy that WebGL encodes\n  // in the uniform names.\n  addUniform = function (container, uniformObject) {\n    container.seq.push(uniformObject);\n    container.map[uniformObject.id] = uniformObject;\n  },\n      parseUniform = function (activeInfo, addr, container) {\n    var path = activeInfo.name,\n        pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n    RePathPart.lastIndex = 0;\n\n    for (;;) {\n      var match = RePathPart.exec(path),\n          matchEnd = RePathPart.lastIndex,\n          id = match[1],\n          idIsIndex = match[2] === ']',\n          subscript = match[3];\n      if (idIsIndex) id = id | 0; // convert to integer\n\n      if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n        // bare name or \"pure\" bottom-level array \"[0]\" suffix\n        addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n        break;\n      } else {\n        // step into inner node / create it in case it doesn't exist\n        var map = container.map,\n            next = map[id];\n\n        if (next === undefined) {\n          next = new StructuredUniform(id);\n          addUniform(container, next);\n        }\n\n        container = next;\n      }\n    }\n  },\n      // Root Container\n  WebGLUniforms = function WebGLUniforms(gl, program, renderer) {\n    UniformContainer.call(this);\n    this.renderer = renderer;\n    var n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var i = 0; i !== n; ++i) {\n      var info = gl.getActiveUniform(program, i),\n          path = info.name,\n          addr = gl.getUniformLocation(program, path);\n      parseUniform(info, addr, this);\n    }\n  };\n\n  WebGLUniforms.prototype.setValue = function (gl, name, value) {\n    var u = this.map[name];\n    if (u !== undefined) u.setValue(gl, value, this.renderer);\n  };\n\n  WebGLUniforms.prototype.set = function (gl, object, name) {\n    var u = this.map[name];\n    if (u !== undefined) u.setValue(gl, object[name], this.renderer);\n  };\n\n  WebGLUniforms.prototype.setOptional = function (gl, object, name) {\n    var v = object[name];\n    if (v !== undefined) this.setValue(gl, name, v);\n  }; // Static interface\n\n\n  WebGLUniforms.upload = function (gl, seq, values, renderer) {\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i],\n          v = values[u.id];\n\n      if (v.needsUpdate !== false) {\n        // note: always updating when .needsUpdate is undefined\n        u.setValue(gl, v.value, renderer);\n      }\n    }\n  };\n\n  WebGLUniforms.seqWithValue = function (seq, values) {\n    var r = [];\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      if (u.id in values) r.push(u);\n    }\n\n    return r;\n  };\n\n  WebGLUniforms.splitDynamic = function (seq, values) {\n    var r = null,\n        n = seq.length,\n        w = 0;\n\n    for (var i = 0; i !== n; ++i) {\n      var u = seq[i],\n          v = values[u.id];\n\n      if (v && v.dynamic === true) {\n        if (r === null) r = [];\n        r.push(u);\n      } else {\n        // in-place compact 'seq', removing the matches\n        if (w < i) seq[w] = u;\n        ++w;\n      }\n    }\n\n    if (w < n) seq.length = w;\n    return r;\n  };\n\n  WebGLUniforms.evalDynamic = function (seq, values, object, camera) {\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var v = values[seq[i].id],\n          f = v.onUpdateCallback;\n      if (f !== undefined) f.call(v, object, camera);\n    }\n  };\n\n  return WebGLUniforms;\n}(); // File:src/renderers/webgl/plugins/LensFlarePlugin.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.LensFlarePlugin = function (renderer, flares) {\n  var gl = renderer.context;\n  var state = renderer.state;\n  var vertexBuffer, elementBuffer;\n  var shader, program, attributes, uniforms;\n  var tempTexture, occlusionTexture;\n\n  function init() {\n    var vertices = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]); // buffers\n\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW); // textures\n\n    tempTexture = gl.createTexture();\n    occlusionTexture = gl.createTexture();\n    state.bindTexture(gl.TEXTURE_2D, tempTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    shader = {\n      vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"uniform sampler2D occlusionMap;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if ( renderType == 2 ) {\", \"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\", \"vVisibility =        visibility.r / 9.0;\", \"vVisibility *= 1.0 - visibility.g / 9.0;\", \"vVisibility *=       visibility.b / 9.0;\", \"vVisibility *= 1.0 - visibility.a / 9.0;\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n      fragmentShader: [\"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", // pink square\n      \"if ( renderType == 0 ) {\", \"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\", // restore\n      \"} else if ( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n      \"} else {\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * vVisibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n    };\n    program = createProgram(shader);\n    attributes = {\n      vertex: gl.getAttribLocation(program, \"position\"),\n      uv: gl.getAttribLocation(program, \"uv\")\n    };\n    uniforms = {\n      renderType: gl.getUniformLocation(program, \"renderType\"),\n      map: gl.getUniformLocation(program, \"map\"),\n      occlusionMap: gl.getUniformLocation(program, \"occlusionMap\"),\n      opacity: gl.getUniformLocation(program, \"opacity\"),\n      color: gl.getUniformLocation(program, \"color\"),\n      scale: gl.getUniformLocation(program, \"scale\"),\n      rotation: gl.getUniformLocation(program, \"rotation\"),\n      screenPosition: gl.getUniformLocation(program, \"screenPosition\")\n    };\n  }\n  /*\r\n   * Render lens flares\r\n   * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n   *         reads these back and calculates occlusion.\r\n   */\n\n\n  this.render = function (scene, camera, viewport) {\n    if (flares.length === 0) return;\n    var tempPosition = new THREE.Vector3();\n    var invAspect = viewport.w / viewport.z,\n        halfViewportWidth = viewport.z * 0.5,\n        halfViewportHeight = viewport.w * 0.5;\n    var size = 16 / viewport.w,\n        scale = new THREE.Vector2(size * invAspect, size);\n    var screenPosition = new THREE.Vector3(1, 1, 0),\n        screenPositionPixels = new THREE.Vector2(1, 1);\n    var validArea = new THREE.Box2();\n    validArea.min.set(0, 0);\n    validArea.max.set(viewport.z - 16, viewport.w - 16);\n\n    if (program === undefined) {\n      init();\n    }\n\n    gl.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.vertex);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes(); // loop through all lens flares to update their occlusion and positions\n    // setup gl and common used attribs/uniforms\n\n    gl.uniform1i(uniforms.occlusionMap, 0);\n    gl.uniform1i(uniforms.map, 1);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    state.disable(gl.CULL_FACE);\n    state.setDepthWrite(false);\n\n    for (var i = 0, l = flares.length; i < l; i++) {\n      size = 16 / viewport.w;\n      scale.set(size * invAspect, size); // calc object screen position\n\n      var flare = flares[i];\n      tempPosition.set(flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14]);\n      tempPosition.applyMatrix4(camera.matrixWorldInverse);\n      tempPosition.applyProjection(camera.projectionMatrix); // setup arrays for gl programs\n\n      screenPosition.copy(tempPosition); // horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n      screenPositionPixels.x = viewport.x + screenPosition.x * halfViewportWidth + halfViewportWidth - 8;\n      screenPositionPixels.y = viewport.y + screenPosition.y * halfViewportHeight + halfViewportHeight - 8; // screen cull\n\n      if (validArea.containsPoint(screenPositionPixels) === true) {\n        // save current RGB to temp texture\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, null);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0); // render pink quad\n\n        gl.uniform1i(uniforms.renderType, 0);\n        gl.uniform2f(uniforms.scale, scale.x, scale.y);\n        gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n        state.disable(gl.BLEND);\n        state.enable(gl.DEPTH_TEST);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // copy result to occlusionMap\n\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0); // restore graphics\n\n        gl.uniform1i(uniforms.renderType, 1);\n        state.disable(gl.DEPTH_TEST);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // update object positions\n\n        flare.positionScreen.copy(screenPosition);\n\n        if (flare.customUpdateCallback) {\n          flare.customUpdateCallback(flare);\n        } else {\n          flare.updateLensFlares();\n        } // render flares\n\n\n        gl.uniform1i(uniforms.renderType, 2);\n        state.enable(gl.BLEND);\n\n        for (var j = 0, jl = flare.lensFlares.length; j < jl; j++) {\n          var sprite = flare.lensFlares[j];\n\n          if (sprite.opacity > 0.001 && sprite.scale > 0.001) {\n            screenPosition.x = sprite.x;\n            screenPosition.y = sprite.y;\n            screenPosition.z = sprite.z;\n            size = sprite.size * sprite.scale / viewport.w;\n            scale.x = size * invAspect;\n            scale.y = size;\n            gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n            gl.uniform2f(uniforms.scale, scale.x, scale.y);\n            gl.uniform1f(uniforms.rotation, sprite.rotation);\n            gl.uniform1f(uniforms.opacity, sprite.opacity);\n            gl.uniform3f(uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b);\n            state.setBlending(sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst);\n            renderer.setTexture2D(sprite.texture, 1);\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n      }\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    state.enable(gl.DEPTH_TEST);\n    state.setDepthWrite(true);\n    renderer.resetGLState();\n  };\n\n  function createProgram(shader) {\n    var program = gl.createProgram();\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n    gl.shaderSource(fragmentShader, prefix + shader.fragmentShader);\n    gl.shaderSource(vertexShader, prefix + shader.vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.compileShader(vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n    return program;\n  }\n}; // File:src/renderers/webgl/plugins/SpritePlugin.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.SpritePlugin = function (renderer, sprites) {\n  var gl = renderer.context;\n  var state = renderer.state;\n  var vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n  var texture; // decompose matrixWorld\n\n  var spritePosition = new THREE.Vector3();\n  var spriteRotation = new THREE.Quaternion();\n  var spriteScale = new THREE.Vector3();\n\n  function init() {\n    var vertices = new Float32Array([-0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]);\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n    program = createProgram();\n    attributes = {\n      position: gl.getAttribLocation(program, 'position'),\n      uv: gl.getAttribLocation(program, 'uv')\n    };\n    uniforms = {\n      uvOffset: gl.getUniformLocation(program, 'uvOffset'),\n      uvScale: gl.getUniformLocation(program, 'uvScale'),\n      rotation: gl.getUniformLocation(program, 'rotation'),\n      scale: gl.getUniformLocation(program, 'scale'),\n      color: gl.getUniformLocation(program, 'color'),\n      map: gl.getUniformLocation(program, 'map'),\n      opacity: gl.getUniformLocation(program, 'opacity'),\n      modelViewMatrix: gl.getUniformLocation(program, 'modelViewMatrix'),\n      projectionMatrix: gl.getUniformLocation(program, 'projectionMatrix'),\n      fogType: gl.getUniformLocation(program, 'fogType'),\n      fogDensity: gl.getUniformLocation(program, 'fogDensity'),\n      fogNear: gl.getUniformLocation(program, 'fogNear'),\n      fogFar: gl.getUniformLocation(program, 'fogFar'),\n      fogColor: gl.getUniformLocation(program, 'fogColor'),\n      alphaTest: gl.getUniformLocation(program, 'alphaTest')\n    };\n    var canvas = document.createElement('canvas');\n    canvas.width = 8;\n    canvas.height = 8;\n    var context = canvas.getContext('2d');\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 8, 8);\n    texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n  }\n\n  this.render = function (scene, camera) {\n    if (sprites.length === 0) return; // setup gl\n\n    if (program === undefined) {\n      init();\n    }\n\n    gl.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.position);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes();\n    state.disable(gl.CULL_FACE);\n    state.enable(gl.BLEND);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.position, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.uniformMatrix4fv(uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n    state.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(uniforms.map, 0);\n    var oldFogType = 0;\n    var sceneFogType = 0;\n    var fog = scene.fog;\n\n    if (fog) {\n      gl.uniform3f(uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b);\n\n      if (fog instanceof THREE.Fog) {\n        gl.uniform1f(uniforms.fogNear, fog.near);\n        gl.uniform1f(uniforms.fogFar, fog.far);\n        gl.uniform1i(uniforms.fogType, 1);\n        oldFogType = 1;\n        sceneFogType = 1;\n      } else if (fog instanceof THREE.FogExp2) {\n        gl.uniform1f(uniforms.fogDensity, fog.density);\n        gl.uniform1i(uniforms.fogType, 2);\n        oldFogType = 2;\n        sceneFogType = 2;\n      }\n    } else {\n      gl.uniform1i(uniforms.fogType, 0);\n      oldFogType = 0;\n      sceneFogType = 0;\n    } // update positions and sort\n\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      sprite.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, sprite.matrixWorld);\n      sprite.z = -sprite.modelViewMatrix.elements[14];\n    }\n\n    sprites.sort(painterSortStable); // render all sprites\n\n    var scale = [];\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      var material = sprite.material;\n      gl.uniform1f(uniforms.alphaTest, material.alphaTest);\n      gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements);\n      sprite.matrixWorld.decompose(spritePosition, spriteRotation, spriteScale);\n      scale[0] = spriteScale.x;\n      scale[1] = spriteScale.y;\n      var fogType = 0;\n\n      if (scene.fog && material.fog) {\n        fogType = sceneFogType;\n      }\n\n      if (oldFogType !== fogType) {\n        gl.uniform1i(uniforms.fogType, fogType);\n        oldFogType = fogType;\n      }\n\n      if (material.map !== null) {\n        gl.uniform2f(uniforms.uvOffset, material.map.offset.x, material.map.offset.y);\n        gl.uniform2f(uniforms.uvScale, material.map.repeat.x, material.map.repeat.y);\n      } else {\n        gl.uniform2f(uniforms.uvOffset, 0, 0);\n        gl.uniform2f(uniforms.uvScale, 1, 1);\n      }\n\n      gl.uniform1f(uniforms.opacity, material.opacity);\n      gl.uniform3f(uniforms.color, material.color.r, material.color.g, material.color.b);\n      gl.uniform1f(uniforms.rotation, material.rotation);\n      gl.uniform2fv(uniforms.scale, scale);\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst);\n      state.setDepthTest(material.depthTest);\n      state.setDepthWrite(material.depthWrite);\n\n      if (material.map) {\n        renderer.setTexture2D(material.map, 0);\n      } else {\n        renderer.setTexture2D(texture, 0);\n      }\n\n      gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    renderer.resetGLState();\n  };\n\n  function createProgram() {\n    var program = gl.createProgram();\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(vertexShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform float rotation;', 'uniform vec2 scale;', 'uniform vec2 uvOffset;', 'uniform vec2 uvScale;', 'attribute vec2 position;', 'attribute vec2 uv;', 'varying vec2 vUV;', 'void main() {', 'vUV = uvOffset + uv * uvScale;', 'vec2 alignedPosition = position * scale;', 'vec2 rotatedPosition;', 'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;', 'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;', 'vec4 finalPosition;', 'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );', 'finalPosition.xy += rotatedPosition;', 'finalPosition = projectionMatrix * finalPosition;', 'gl_Position = finalPosition;', '}'].join('\\n'));\n    gl.shaderSource(fragmentShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform vec3 color;', 'uniform sampler2D map;', 'uniform float opacity;', 'uniform int fogType;', 'uniform vec3 fogColor;', 'uniform float fogDensity;', 'uniform float fogNear;', 'uniform float fogFar;', 'uniform float alphaTest;', 'varying vec2 vUV;', 'void main() {', 'vec4 texture = texture2D( map, vUV );', 'if ( texture.a < alphaTest ) discard;', 'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );', 'if ( fogType > 0 ) {', 'float depth = gl_FragCoord.z / gl_FragCoord.w;', 'float fogFactor = 0.0;', 'if ( fogType == 1 ) {', 'fogFactor = smoothstep( fogNear, fogFar, depth );', '} else {', 'const float LOG2 = 1.442695;', 'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );', 'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );', '}', 'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );', '}', '}'].join('\\n'));\n    gl.compileShader(vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    return program;\n  }\n\n  function painterSortStable(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return b.id - a.id;\n    }\n  }\n}; // File:src/Three.Legacy.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nObject.assign(THREE, {\n  Face4: function (a, b, c, d, normal, color, materialIndex) {\n    console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n    return new THREE.Face3(a, b, c, normal, color, materialIndex);\n  },\n  LineStrip: 0,\n  LinePieces: 1,\n  MeshFaceMaterial: THREE.MultiMaterial,\n  PointCloud: function (geometry, material) {\n    console.warn('THREE.PointCloud has been renamed to THREE.Points.');\n    return new THREE.Points(geometry, material);\n  },\n  Particle: THREE.Sprite,\n  ParticleSystem: function (geometry, material) {\n    console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n    return new THREE.Points(geometry, material);\n  },\n  PointCloudMaterial: function (parameters) {\n    console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n    return new THREE.PointsMaterial(parameters);\n  },\n  ParticleBasicMaterial: function (parameters) {\n    console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n    return new THREE.PointsMaterial(parameters);\n  },\n  ParticleSystemMaterial: function (parameters) {\n    console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n    return new THREE.PointsMaterial(parameters);\n  },\n  Vertex: function (x, y, z) {\n    console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n    return new THREE.Vector3(x, y, z);\n  }\n}); //\n\nObject.assign(THREE.Box2.prototype, {\n  empty: function () {\n    console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n    return this.isEmpty();\n  },\n  isIntersectionBox: function (box) {\n    console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  }\n});\nObject.assign(THREE.Box3.prototype, {\n  empty: function () {\n    console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n    return this.isEmpty();\n  },\n  isIntersectionBox: function (box) {\n    console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  },\n  isIntersectionSphere: function (sphere) {\n    console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n    return this.intersectsSphere(sphere);\n  }\n});\nObject.assign(THREE.Matrix3.prototype, {\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n    return vector.applyMatrix3(this);\n  },\n  multiplyVector3Array: function (a) {\n    console.warn('THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.');\n    return this.applyToVector3Array(a);\n  }\n});\nObject.assign(THREE.Matrix4.prototype, {\n  extractPosition: function (m) {\n    console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n    return this.copyPosition(m);\n  },\n  setRotationFromQuaternion: function (q) {\n    console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n    return this.makeRotationFromQuaternion(q);\n  },\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.');\n    return vector.applyProjection(this);\n  },\n  multiplyVector4: function (vector) {\n    console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  multiplyVector3Array: function (a) {\n    console.warn('THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.');\n    return this.applyToVector3Array(a);\n  },\n  rotateAxis: function (v) {\n    console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n    v.transformDirection(this);\n  },\n  crossVector: function (vector) {\n    console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  translate: function (v) {\n    console.error('THREE.Matrix4: .translate() has been removed.');\n  },\n  rotateX: function (angle) {\n    console.error('THREE.Matrix4: .rotateX() has been removed.');\n  },\n  rotateY: function (angle) {\n    console.error('THREE.Matrix4: .rotateY() has been removed.');\n  },\n  rotateZ: function (angle) {\n    console.error('THREE.Matrix4: .rotateZ() has been removed.');\n  },\n  rotateByAxis: function (axis, angle) {\n    console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n  }\n});\nObject.assign(THREE.Plane.prototype, {\n  isIntersectionLine: function (line) {\n    console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n    return this.intersectsLine(line);\n  }\n});\nObject.assign(THREE.Quaternion.prototype, {\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n    return vector.applyQuaternion(this);\n  }\n});\nObject.assign(THREE.Ray.prototype, {\n  isIntersectionBox: function (box) {\n    console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  },\n  isIntersectionPlane: function (plane) {\n    console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n    return this.intersectsPlane(plane);\n  },\n  isIntersectionSphere: function (sphere) {\n    console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n    return this.intersectsSphere(sphere);\n  }\n});\nObject.assign(THREE.Vector3.prototype, {\n  setEulerFromRotationMatrix: function () {\n    console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n  },\n  setEulerFromQuaternion: function () {\n    console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n  },\n  getPositionFromMatrix: function (m) {\n    console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n    return this.setFromMatrixPosition(m);\n  },\n  getScaleFromMatrix: function (m) {\n    console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n    return this.setFromMatrixScale(m);\n  },\n  getColumnFromMatrix: function (index, matrix) {\n    console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n    return this.setFromMatrixColumn(matrix, index);\n  }\n}); //\n\nObject.assign(THREE.Object3D.prototype, {\n  getChildByName: function (name) {\n    console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n    return this.getObjectByName(name);\n  },\n  renderDepth: function (value) {\n    console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n  },\n  translate: function (distance, axis) {\n    console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n    return this.translateOnAxis(axis, distance);\n  }\n});\nObject.defineProperties(THREE.Object3D.prototype, {\n  eulerOrder: {\n    get: function () {\n      console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n      return this.rotation.order;\n    },\n    set: function (value) {\n      console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n      this.rotation.order = value;\n    }\n  },\n  useQuaternion: {\n    get: function () {\n      console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n    },\n    set: function (value) {\n      console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n    }\n  }\n});\nObject.defineProperties(THREE.LOD.prototype, {\n  objects: {\n    get: function () {\n      console.warn('THREE.LOD: .objects has been renamed to .levels.');\n      return this.levels;\n    }\n  }\n}); //\n\nTHREE.PerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n  console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. \" + \"Use .setFocalLength and .filmGauge for a photographic setup.\");\n  if (filmGauge !== undefined) this.filmGauge = filmGauge;\n  this.setFocalLength(focalLength);\n}; //\n\n\nObject.defineProperties(THREE.Light.prototype, {\n  onlyShadow: {\n    set: function (value) {\n      console.warn('THREE.Light: .onlyShadow has been removed.');\n    }\n  },\n  shadowCameraFov: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n      this.shadow.camera.fov = value;\n    }\n  },\n  shadowCameraLeft: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n      this.shadow.camera.left = value;\n    }\n  },\n  shadowCameraRight: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n      this.shadow.camera.right = value;\n    }\n  },\n  shadowCameraTop: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n      this.shadow.camera.top = value;\n    }\n  },\n  shadowCameraBottom: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n      this.shadow.camera.bottom = value;\n    }\n  },\n  shadowCameraNear: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n      this.shadow.camera.near = value;\n    }\n  },\n  shadowCameraFar: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n      this.shadow.camera.far = value;\n    }\n  },\n  shadowCameraVisible: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n    }\n  },\n  shadowBias: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n      this.shadow.bias = value;\n    }\n  },\n  shadowDarkness: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowDarkness has been removed.');\n    }\n  },\n  shadowMapWidth: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n      this.shadow.mapSize.width = value;\n    }\n  },\n  shadowMapHeight: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n      this.shadow.mapSize.height = value;\n    }\n  }\n}); //\n\nObject.defineProperties(THREE.BufferAttribute.prototype, {\n  length: {\n    get: function () {\n      console.warn('THREE.BufferAttribute: .length has been deprecated. Please use .count.');\n      return this.array.length;\n    }\n  }\n});\nObject.assign(THREE.BufferGeometry.prototype, {\n  addIndex: function (index) {\n    console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n    this.setIndex(index);\n  },\n  addDrawCall: function (start, count, indexOffset) {\n    if (indexOffset !== undefined) {\n      console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n    }\n\n    console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n    this.addGroup(start, count);\n  },\n  clearDrawCalls: function () {\n    console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n    this.clearGroups();\n  },\n  computeTangents: function () {\n    console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');\n  },\n  computeOffsets: function () {\n    console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n  }\n});\nObject.defineProperties(THREE.BufferGeometry.prototype, {\n  drawcalls: {\n    get: function () {\n      console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n      return this.groups;\n    }\n  },\n  offsets: {\n    get: function () {\n      console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n      return this.groups;\n    }\n  }\n}); //\n\nObject.defineProperties(THREE.Material.prototype, {\n  wrapAround: {\n    get: function () {\n      console.warn('THREE.' + this.type + ': .wrapAround has been removed.');\n    },\n    set: function (value) {\n      console.warn('THREE.' + this.type + ': .wrapAround has been removed.');\n    }\n  },\n  wrapRGB: {\n    get: function () {\n      console.warn('THREE.' + this.type + ': .wrapRGB has been removed.');\n      return new THREE.Color();\n    }\n  }\n});\nObject.defineProperties(THREE.MeshPhongMaterial.prototype, {\n  metal: {\n    get: function () {\n      console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');\n      return false;\n    },\n    set: function (value) {\n      console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');\n    }\n  }\n});\nObject.defineProperties(THREE.ShaderMaterial.prototype, {\n  derivatives: {\n    get: function () {\n      console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n      return this.extensions.derivatives;\n    },\n    set: function (value) {\n      console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n      this.extensions.derivatives = value;\n    }\n  }\n}); //\n\nTHREE.EventDispatcher.prototype = Object.assign(Object.create({\n  // Note: Extra base ensures these properties are not 'assign'ed.\n  constructor: THREE.EventDispatcher,\n  apply: function (target) {\n    console.warn(\"THREE.EventDispatcher: .apply is deprecated, \" + \"just inherit or Object.assign the prototype to mix-in.\");\n    Object.assign(target, this);\n  }\n}), THREE.EventDispatcher.prototype); //\n\nObject.assign(THREE.WebGLRenderer.prototype, {\n  supportsFloatTextures: function () {\n    console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n    return this.extensions.get('OES_texture_float');\n  },\n  supportsHalfFloatTextures: function () {\n    console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n    return this.extensions.get('OES_texture_half_float');\n  },\n  supportsStandardDerivatives: function () {\n    console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n    return this.extensions.get('OES_standard_derivatives');\n  },\n  supportsCompressedTextureS3TC: function () {\n    console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n    return this.extensions.get('WEBGL_compressed_texture_s3tc');\n  },\n  supportsCompressedTexturePVRTC: function () {\n    console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n    return this.extensions.get('WEBGL_compressed_texture_pvrtc');\n  },\n  supportsBlendMinMax: function () {\n    console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n    return this.extensions.get('EXT_blend_minmax');\n  },\n  supportsVertexTextures: function () {\n    return this.capabilities.vertexTextures;\n  },\n  supportsInstancedArrays: function () {\n    console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n    return this.extensions.get('ANGLE_instanced_arrays');\n  },\n  enableScissorTest: function (boolean) {\n    console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n    this.setScissorTest(boolean);\n  },\n  initMaterial: function () {\n    console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n  },\n  addPrePlugin: function () {\n    console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n  },\n  addPostPlugin: function () {\n    console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n  },\n  updateShadowMap: function () {\n    console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n  }\n});\nObject.defineProperties(THREE.WebGLRenderer.prototype, {\n  shadowMapEnabled: {\n    get: function () {\n      return this.shadowMap.enabled;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n      this.shadowMap.enabled = value;\n    }\n  },\n  shadowMapType: {\n    get: function () {\n      return this.shadowMap.type;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n      this.shadowMap.type = value;\n    }\n  },\n  shadowMapCullFace: {\n    get: function () {\n      return this.shadowMap.cullFace;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.');\n      this.shadowMap.cullFace = value;\n    }\n  }\n});\nObject.defineProperties(THREE.WebGLShadowMap.prototype, {\n  cullFace: {\n    get: function () {\n      return this.renderReverseSided ? THREE.CullFaceFront : THREE.CullFaceBack;\n    },\n    set: function (cullFace) {\n      var value = cullFace !== THREE.CullFaceBack;\n      console.warn(\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\");\n      this.renderReverseSided = value;\n    }\n  }\n}); //\n\nObject.defineProperties(THREE.WebGLRenderTarget.prototype, {\n  wrapS: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n      return this.texture.wrapS;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n      this.texture.wrapS = value;\n    }\n  },\n  wrapT: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n      return this.texture.wrapT;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n      this.texture.wrapT = value;\n    }\n  },\n  magFilter: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n      return this.texture.magFilter;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n      this.texture.magFilter = value;\n    }\n  },\n  minFilter: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n      return this.texture.minFilter;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n      this.texture.minFilter = value;\n    }\n  },\n  anisotropy: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n      return this.texture.anisotropy;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n      this.texture.anisotropy = value;\n    }\n  },\n  offset: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n      return this.texture.offset;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n      this.texture.offset = value;\n    }\n  },\n  repeat: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n      return this.texture.repeat;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n      this.texture.repeat = value;\n    }\n  },\n  format: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n      return this.texture.format;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n      this.texture.format = value;\n    }\n  },\n  type: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n      return this.texture.type;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n      this.texture.type = value;\n    }\n  },\n  generateMipmaps: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n      return this.texture.generateMipmaps;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n      this.texture.generateMipmaps = value;\n    }\n  }\n}); //\n\nObject.assign(THREE.Audio.prototype, {\n  load: function (file) {\n    console.warn('THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.');\n    var scope = this;\n    var audioLoader = new THREE.AudioLoader();\n    audioLoader.load(file, function (buffer) {\n      scope.setBuffer(buffer);\n    });\n    return this;\n  }\n});\nObject.assign(THREE.AudioAnalyser.prototype, {\n  getData: function (file) {\n    console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n    return this.getFrequencyData();\n  }\n}); //\n\nTHREE.GeometryUtils = {\n  merge: function (geometry1, geometry2, materialIndexOffset) {\n    console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n    var matrix;\n\n    if (geometry2 instanceof THREE.Mesh) {\n      geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n      matrix = geometry2.matrix;\n      geometry2 = geometry2.geometry;\n    }\n\n    geometry1.merge(geometry2, matrix, materialIndexOffset);\n  },\n  center: function (geometry) {\n    console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n    return geometry.center();\n  }\n};\nTHREE.ImageUtils = {\n  crossOrigin: undefined,\n  loadTexture: function (url, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n    var loader = new THREE.TextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(url, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  },\n  loadTextureCube: function (urls, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n    var loader = new THREE.CubeTextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(urls, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  },\n  loadCompressedTexture: function () {\n    console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n  },\n  loadCompressedTextureCube: function () {\n    console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n  }\n}; //\n\nTHREE.Projector = function () {\n  console.error('THREE.Projector has been moved to /examples/js/renderers/Projector.js.');\n\n  this.projectVector = function (vector, camera) {\n    console.warn('THREE.Projector: .projectVector() is now vector.project().');\n    vector.project(camera);\n  };\n\n  this.unprojectVector = function (vector, camera) {\n    console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');\n    vector.unproject(camera);\n  };\n\n  this.pickingRay = function (vector, camera) {\n    console.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');\n  };\n}; //\n\n\nTHREE.CanvasRenderer = function () {\n  console.error('THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js');\n  this.domElement = document.createElement('canvas');\n\n  this.clear = function () {};\n\n  this.render = function () {};\n\n  this.setClearColor = function () {};\n\n  this.setSize = function () {};\n}; // File:src/extras/CurveUtils.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\n\n\nTHREE.CurveUtils = {\n  tangentQuadraticBezier: function (t, p0, p1, p2) {\n    return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);\n  },\n  // Puay Bing, thanks for helping with this derivative!\n  tangentCubicBezier: function (t, p0, p1, p2, p3) {\n    return -3 * p0 * (1 - t) * (1 - t) + 3 * p1 * (1 - t) * (1 - t) - 6 * t * p1 * (1 - t) + 6 * t * p2 * (1 - t) - 3 * t * t * p2 + 3 * t * t * p3;\n  },\n  tangentSpline: function (t, p0, p1, p2, p3) {\n    // To check if my formulas are correct\n    var h00 = 6 * t * t - 6 * t; // derived from 2t^3 − 3t^2 + 1\n\n    var h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n\n    var h01 = -6 * t * t + 6 * t; // − 2t3 + 3t2\n\n    var h11 = 3 * t * t - 2 * t; // t3 − t2\n\n    return h00 + h10 + h01 + h11;\n  },\n  // Catmull-Rom\n  interpolate: function (p0, p1, p2, p3, t) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    var t2 = t * t;\n    var t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n  }\n}; // File:src/extras/SceneUtils.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.SceneUtils = {\n  createMultiMaterialObject: function (geometry, materials) {\n    var group = new THREE.Group();\n\n    for (var i = 0, l = materials.length; i < l; i++) {\n      group.add(new THREE.Mesh(geometry, materials[i]));\n    }\n\n    return group;\n  },\n  detach: function (child, parent, scene) {\n    child.applyMatrix(parent.matrixWorld);\n    parent.remove(child);\n    scene.add(child);\n  },\n  attach: function (child, scene, parent) {\n    var matrixWorldInverse = new THREE.Matrix4();\n    matrixWorldInverse.getInverse(parent.matrixWorld);\n    child.applyMatrix(matrixWorldInverse);\n    scene.remove(child);\n    parent.add(child);\n  }\n}; // File:src/extras/ShapeUtils.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\n\nTHREE.ShapeUtils = {\n  // calculate area of the contour polygon\n  area: function (contour) {\n    var n = contour.length;\n    var a = 0.0;\n\n    for (var p = n - 1, q = 0; q < n; p = q++) {\n      a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n    }\n\n    return a * 0.5;\n  },\n  triangulate: function () {\n    /**\r\n     * This code is a quick port of code written in C++ which was submitted to\r\n     * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n     * See original code and more information here:\r\n     * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n     *\r\n     * ported to actionscript by Zevan Rosser\r\n     * www.actionsnippet.com\r\n     *\r\n     * ported to javascript by Joshua Koo\r\n     * http://www.lab4games.net/zz85/blog\r\n     *\r\n     */\n    function snip(contour, u, v, w, n, verts) {\n      var p;\n      var ax, ay, bx, by;\n      var cx, cy, px, py;\n      ax = contour[verts[u]].x;\n      ay = contour[verts[u]].y;\n      bx = contour[verts[v]].x;\n      by = contour[verts[v]].y;\n      cx = contour[verts[w]].x;\n      cy = contour[verts[w]].y;\n      if (Number.EPSILON > (bx - ax) * (cy - ay) - (by - ay) * (cx - ax)) return false;\n      var aX, aY, bX, bY, cX, cY;\n      var apx, apy, bpx, bpy, cpx, cpy;\n      var cCROSSap, bCROSScp, aCROSSbp;\n      aX = cx - bx;\n      aY = cy - by;\n      bX = ax - cx;\n      bY = ay - cy;\n      cX = bx - ax;\n      cY = by - ay;\n\n      for (p = 0; p < n; p++) {\n        px = contour[verts[p]].x;\n        py = contour[verts[p]].y;\n        if (px === ax && py === ay || px === bx && py === by || px === cx && py === cy) continue;\n        apx = px - ax;\n        apy = py - ay;\n        bpx = px - bx;\n        bpy = py - by;\n        cpx = px - cx;\n        cpy = py - cy; // see if p is inside triangle abc\n\n        aCROSSbp = aX * bpy - aY * bpx;\n        cCROSSap = cX * apy - cY * apx;\n        bCROSScp = bX * cpy - bY * cpx;\n        if (aCROSSbp >= -Number.EPSILON && bCROSScp >= -Number.EPSILON && cCROSSap >= -Number.EPSILON) return false;\n      }\n\n      return true;\n    } // takes in an contour array and returns\n\n\n    return function (contour, indices) {\n      var n = contour.length;\n      if (n < 3) return null;\n      var result = [],\n          verts = [],\n          vertIndices = [];\n      /* we want a counter-clockwise polygon in verts */\n\n      var u, v, w;\n\n      if (THREE.ShapeUtils.area(contour) > 0.0) {\n        for (v = 0; v < n; v++) verts[v] = v;\n      } else {\n        for (v = 0; v < n; v++) verts[v] = n - 1 - v;\n      }\n\n      var nv = n;\n      /*  remove nv - 2 vertices, creating 1 triangle every time */\n\n      var count = 2 * nv;\n      /* error detection */\n\n      for (v = nv - 1; nv > 2;) {\n        /* if we loop, it is probably a non-simple polygon */\n        if (count-- <= 0) {\n          //** Triangulate: ERROR - probable bad polygon!\n          //throw ( \"Warning, unable to triangulate polygon!\" );\n          //return null;\n          // Sometimes warning is fine, especially polygons are triangulated in reverse.\n          console.warn('THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()');\n          if (indices) return vertIndices;\n          return result;\n        }\n        /* three consecutive vertices in current polygon, <u,v,w> */\n\n\n        u = v;\n        if (nv <= u) u = 0;\n        /* previous */\n\n        v = u + 1;\n        if (nv <= v) v = 0;\n        /* new v    */\n\n        w = v + 1;\n        if (nv <= w) w = 0;\n        /* next     */\n\n        if (snip(contour, u, v, w, nv, verts)) {\n          var a, b, c, s, t;\n          /* true names of the vertices */\n\n          a = verts[u];\n          b = verts[v];\n          c = verts[w];\n          /* output Triangle */\n\n          result.push([contour[a], contour[b], contour[c]]);\n          vertIndices.push([verts[u], verts[v], verts[w]]);\n          /* remove v from the remaining polygon */\n\n          for (s = v, t = v + 1; t < nv; s++, t++) {\n            verts[s] = verts[t];\n          }\n\n          nv--;\n          /* reset error detection counter */\n\n          count = 2 * nv;\n        }\n      }\n\n      if (indices) return vertIndices;\n      return result;\n    };\n  }(),\n  triangulateShape: function (contour, holes) {\n    function point_in_segment_2D_colin(inSegPt1, inSegPt2, inOtherPt) {\n      // inOtherPt needs to be collinear to the inSegment\n      if (inSegPt1.x !== inSegPt2.x) {\n        if (inSegPt1.x < inSegPt2.x) {\n          return inSegPt1.x <= inOtherPt.x && inOtherPt.x <= inSegPt2.x;\n        } else {\n          return inSegPt2.x <= inOtherPt.x && inOtherPt.x <= inSegPt1.x;\n        }\n      } else {\n        if (inSegPt1.y < inSegPt2.y) {\n          return inSegPt1.y <= inOtherPt.y && inOtherPt.y <= inSegPt2.y;\n        } else {\n          return inSegPt2.y <= inOtherPt.y && inOtherPt.y <= inSegPt1.y;\n        }\n      }\n    }\n\n    function intersect_segments_2D(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs) {\n      var seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,\n          seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n      var seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,\n          seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n      var seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n      var seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n      var limit = seg1dy * seg2dx - seg1dx * seg2dy;\n      var perpSeg1 = seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n      if (Math.abs(limit) > Number.EPSILON) {\n        // not parallel\n        var perpSeg2;\n\n        if (limit > 0) {\n          if (perpSeg1 < 0 || perpSeg1 > limit) return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if (perpSeg2 < 0 || perpSeg2 > limit) return [];\n        } else {\n          if (perpSeg1 > 0 || perpSeg1 < limit) return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if (perpSeg2 > 0 || perpSeg2 < limit) return [];\n        } // i.e. to reduce rounding errors\n        // intersection at endpoint of segment#1?\n\n\n        if (perpSeg2 === 0) {\n          if (inExcludeAdjacentSegs && (perpSeg1 === 0 || perpSeg1 === limit)) return [];\n          return [inSeg1Pt1];\n        }\n\n        if (perpSeg2 === limit) {\n          if (inExcludeAdjacentSegs && (perpSeg1 === 0 || perpSeg1 === limit)) return [];\n          return [inSeg1Pt2];\n        } // intersection at endpoint of segment#2?\n\n\n        if (perpSeg1 === 0) return [inSeg2Pt1];\n        if (perpSeg1 === limit) return [inSeg2Pt2]; // return real intersection point\n\n        var factorSeg1 = perpSeg2 / limit;\n        return [{\n          x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n          y: inSeg1Pt1.y + factorSeg1 * seg1dy\n        }];\n      } else {\n        // parallel or collinear\n        if (perpSeg1 !== 0 || seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy) return []; // they are collinear or degenerate\n\n        var seg1Pt = seg1dx === 0 && seg1dy === 0; // segment1 is just a point?\n\n        var seg2Pt = seg2dx === 0 && seg2dy === 0; // segment2 is just a point?\n        // both segments are points\n\n        if (seg1Pt && seg2Pt) {\n          if (inSeg1Pt1.x !== inSeg2Pt1.x || inSeg1Pt1.y !== inSeg2Pt1.y) return []; // they are distinct  points\n\n          return [inSeg1Pt1]; // they are the same point\n        } // segment#1  is a single point\n\n\n        if (seg1Pt) {\n          if (!point_in_segment_2D_colin(inSeg2Pt1, inSeg2Pt2, inSeg1Pt1)) return []; // but not in segment#2\n\n          return [inSeg1Pt1];\n        } // segment#2  is a single point\n\n\n        if (seg2Pt) {\n          if (!point_in_segment_2D_colin(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1)) return []; // but not in segment#1\n\n          return [inSeg2Pt1];\n        } // they are collinear segments, which might overlap\n\n\n        var seg1min, seg1max, seg1minVal, seg1maxVal;\n        var seg2min, seg2max, seg2minVal, seg2maxVal;\n\n        if (seg1dx !== 0) {\n          // the segments are NOT on a vertical line\n          if (inSeg1Pt1.x < inSeg1Pt2.x) {\n            seg1min = inSeg1Pt1;\n            seg1minVal = inSeg1Pt1.x;\n            seg1max = inSeg1Pt2;\n            seg1maxVal = inSeg1Pt2.x;\n          } else {\n            seg1min = inSeg1Pt2;\n            seg1minVal = inSeg1Pt2.x;\n            seg1max = inSeg1Pt1;\n            seg1maxVal = inSeg1Pt1.x;\n          }\n\n          if (inSeg2Pt1.x < inSeg2Pt2.x) {\n            seg2min = inSeg2Pt1;\n            seg2minVal = inSeg2Pt1.x;\n            seg2max = inSeg2Pt2;\n            seg2maxVal = inSeg2Pt2.x;\n          } else {\n            seg2min = inSeg2Pt2;\n            seg2minVal = inSeg2Pt2.x;\n            seg2max = inSeg2Pt1;\n            seg2maxVal = inSeg2Pt1.x;\n          }\n        } else {\n          // the segments are on a vertical line\n          if (inSeg1Pt1.y < inSeg1Pt2.y) {\n            seg1min = inSeg1Pt1;\n            seg1minVal = inSeg1Pt1.y;\n            seg1max = inSeg1Pt2;\n            seg1maxVal = inSeg1Pt2.y;\n          } else {\n            seg1min = inSeg1Pt2;\n            seg1minVal = inSeg1Pt2.y;\n            seg1max = inSeg1Pt1;\n            seg1maxVal = inSeg1Pt1.y;\n          }\n\n          if (inSeg2Pt1.y < inSeg2Pt2.y) {\n            seg2min = inSeg2Pt1;\n            seg2minVal = inSeg2Pt1.y;\n            seg2max = inSeg2Pt2;\n            seg2maxVal = inSeg2Pt2.y;\n          } else {\n            seg2min = inSeg2Pt2;\n            seg2minVal = inSeg2Pt2.y;\n            seg2max = inSeg2Pt1;\n            seg2maxVal = inSeg2Pt1.y;\n          }\n        }\n\n        if (seg1minVal <= seg2minVal) {\n          if (seg1maxVal < seg2minVal) return [];\n\n          if (seg1maxVal === seg2minVal) {\n            if (inExcludeAdjacentSegs) return [];\n            return [seg2min];\n          }\n\n          if (seg1maxVal <= seg2maxVal) return [seg2min, seg1max];\n          return [seg2min, seg2max];\n        } else {\n          if (seg1minVal > seg2maxVal) return [];\n\n          if (seg1minVal === seg2maxVal) {\n            if (inExcludeAdjacentSegs) return [];\n            return [seg1min];\n          }\n\n          if (seg1maxVal <= seg2maxVal) return [seg1min, seg1max];\n          return [seg1min, seg2max];\n        }\n      }\n    }\n\n    function isPointInsideAngle(inVertex, inLegFromPt, inLegToPt, inOtherPt) {\n      // The order of legs is important\n      // translation of all points, so that Vertex is at (0,0)\n      var legFromPtX = inLegFromPt.x - inVertex.x,\n          legFromPtY = inLegFromPt.y - inVertex.y;\n      var legToPtX = inLegToPt.x - inVertex.x,\n          legToPtY = inLegToPt.y - inVertex.y;\n      var otherPtX = inOtherPt.x - inVertex.x,\n          otherPtY = inOtherPt.y - inVertex.y; // main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\n      var from2toAngle = legFromPtX * legToPtY - legFromPtY * legToPtX;\n      var from2otherAngle = legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n      if (Math.abs(from2toAngle) > Number.EPSILON) {\n        // angle != 180 deg.\n        var other2toAngle = otherPtX * legToPtY - otherPtY * legToPtX; // console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n        if (from2toAngle > 0) {\n          // main angle < 180 deg.\n          return from2otherAngle >= 0 && other2toAngle >= 0;\n        } else {\n          // main angle > 180 deg.\n          return from2otherAngle >= 0 || other2toAngle >= 0;\n        }\n      } else {\n        // angle == 180 deg.\n        // console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n        return from2otherAngle > 0;\n      }\n    }\n\n    function removeHoles(contour, holes) {\n      var shape = contour.concat(); // work on this shape\n\n      var hole;\n\n      function isCutLineInsideAngles(inShapeIdx, inHoleIdx) {\n        // Check if hole point lies within angle around shape point\n        var lastShapeIdx = shape.length - 1;\n        var prevShapeIdx = inShapeIdx - 1;\n        if (prevShapeIdx < 0) prevShapeIdx = lastShapeIdx;\n        var nextShapeIdx = inShapeIdx + 1;\n        if (nextShapeIdx > lastShapeIdx) nextShapeIdx = 0;\n        var insideAngle = isPointInsideAngle(shape[inShapeIdx], shape[prevShapeIdx], shape[nextShapeIdx], hole[inHoleIdx]);\n\n        if (!insideAngle) {\n          // console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n          return false;\n        } // Check if shape point lies within angle around hole point\n\n\n        var lastHoleIdx = hole.length - 1;\n        var prevHoleIdx = inHoleIdx - 1;\n        if (prevHoleIdx < 0) prevHoleIdx = lastHoleIdx;\n        var nextHoleIdx = inHoleIdx + 1;\n        if (nextHoleIdx > lastHoleIdx) nextHoleIdx = 0;\n        insideAngle = isPointInsideAngle(hole[inHoleIdx], hole[prevHoleIdx], hole[nextHoleIdx], shape[inShapeIdx]);\n\n        if (!insideAngle) {\n          // console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n          return false;\n        }\n\n        return true;\n      }\n\n      function intersectsShapeEdge(inShapePt, inHolePt) {\n        // checks for intersections with shape edges\n        var sIdx, nextIdx, intersection;\n\n        for (sIdx = 0; sIdx < shape.length; sIdx++) {\n          nextIdx = sIdx + 1;\n          nextIdx %= shape.length;\n          intersection = intersect_segments_2D(inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true);\n          if (intersection.length > 0) return true;\n        }\n\n        return false;\n      }\n\n      var indepHoles = [];\n\n      function intersectsHoleEdge(inShapePt, inHolePt) {\n        // checks for intersections with hole edges\n        var ihIdx, chkHole, hIdx, nextIdx, intersection;\n\n        for (ihIdx = 0; ihIdx < indepHoles.length; ihIdx++) {\n          chkHole = holes[indepHoles[ihIdx]];\n\n          for (hIdx = 0; hIdx < chkHole.length; hIdx++) {\n            nextIdx = hIdx + 1;\n            nextIdx %= chkHole.length;\n            intersection = intersect_segments_2D(inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true);\n            if (intersection.length > 0) return true;\n          }\n        }\n\n        return false;\n      }\n\n      var holeIndex,\n          shapeIndex,\n          shapePt,\n          holePt,\n          holeIdx,\n          cutKey,\n          failedCuts = [],\n          tmpShape1,\n          tmpShape2,\n          tmpHole1,\n          tmpHole2;\n\n      for (var h = 0, hl = holes.length; h < hl; h++) {\n        indepHoles.push(h);\n      }\n\n      var minShapeIndex = 0;\n      var counter = indepHoles.length * 2;\n\n      while (indepHoles.length > 0) {\n        counter--;\n\n        if (counter < 0) {\n          console.log(\"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\");\n          break;\n        } // search for shape-vertex and hole-vertex,\n        // which can be connected without intersections\n\n\n        for (shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex++) {\n          shapePt = shape[shapeIndex];\n          holeIndex = -1; // search for hole which can be reached without intersections\n\n          for (var h = 0; h < indepHoles.length; h++) {\n            holeIdx = indepHoles[h]; // prevent multiple checks\n\n            cutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n            if (failedCuts[cutKey] !== undefined) continue;\n            hole = holes[holeIdx];\n\n            for (var h2 = 0; h2 < hole.length; h2++) {\n              holePt = hole[h2];\n              if (!isCutLineInsideAngles(shapeIndex, h2)) continue;\n              if (intersectsShapeEdge(shapePt, holePt)) continue;\n              if (intersectsHoleEdge(shapePt, holePt)) continue;\n              holeIndex = h2;\n              indepHoles.splice(h, 1);\n              tmpShape1 = shape.slice(0, shapeIndex + 1);\n              tmpShape2 = shape.slice(shapeIndex);\n              tmpHole1 = hole.slice(holeIndex);\n              tmpHole2 = hole.slice(0, holeIndex + 1);\n              shape = tmpShape1.concat(tmpHole1).concat(tmpHole2).concat(tmpShape2);\n              minShapeIndex = shapeIndex; // Debug only, to show the selected cuts\n              // glob_CutLines.push( [ shapePt, holePt ] );\n\n              break;\n            }\n\n            if (holeIndex >= 0) break; // hole-vertex found\n\n            failedCuts[cutKey] = true; // remember failure\n          }\n\n          if (holeIndex >= 0) break; // hole-vertex found\n        }\n      }\n\n      return shape;\n      /* shape with no holes */\n    }\n\n    var i,\n        il,\n        f,\n        face,\n        key,\n        index,\n        allPointsMap = {}; // To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n    var allpoints = contour.concat();\n\n    for (var h = 0, hl = holes.length; h < hl; h++) {\n      Array.prototype.push.apply(allpoints, holes[h]);\n    } //console.log( \"allpoints\",allpoints, allpoints.length );\n    // prepare all points map\n\n\n    for (i = 0, il = allpoints.length; i < il; i++) {\n      key = allpoints[i].x + \":\" + allpoints[i].y;\n\n      if (allPointsMap[key] !== undefined) {\n        console.warn(\"THREE.Shape: Duplicate point\", key);\n      }\n\n      allPointsMap[key] = i;\n    } // remove holes by cutting paths to holes and adding them to the shape\n\n\n    var shapeWithoutHoles = removeHoles(contour, holes);\n    var triangles = THREE.ShapeUtils.triangulate(shapeWithoutHoles, false); // True returns indices for points of spooled shape\n    //console.log( \"triangles\",triangles, triangles.length );\n    // check all face vertices against all points map\n\n    for (i = 0, il = triangles.length; i < il; i++) {\n      face = triangles[i];\n\n      for (f = 0; f < 3; f++) {\n        key = face[f].x + \":\" + face[f].y;\n        index = allPointsMap[key];\n\n        if (index !== undefined) {\n          face[f] = index;\n        }\n      }\n    }\n\n    return triangles.concat();\n  },\n  isClockWise: function (pts) {\n    return THREE.ShapeUtils.area(pts) < 0;\n  },\n  // Bezier Curves formulas obtained from\n  // http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n  // Quad Bezier Functions\n  b2: function () {\n    function b2p0(t, p) {\n      var k = 1 - t;\n      return k * k * p;\n    }\n\n    function b2p1(t, p) {\n      return 2 * (1 - t) * t * p;\n    }\n\n    function b2p2(t, p) {\n      return t * t * p;\n    }\n\n    return function (t, p0, p1, p2) {\n      return b2p0(t, p0) + b2p1(t, p1) + b2p2(t, p2);\n    };\n  }(),\n  // Cubic Bezier Functions\n  b3: function () {\n    function b3p0(t, p) {\n      var k = 1 - t;\n      return k * k * k * p;\n    }\n\n    function b3p1(t, p) {\n      var k = 1 - t;\n      return 3 * k * k * t * p;\n    }\n\n    function b3p2(t, p) {\n      var k = 1 - t;\n      return 3 * k * t * t * p;\n    }\n\n    function b3p3(t, p) {\n      return t * t * t * p;\n    }\n\n    return function (t, p0, p1, p2, p3) {\n      return b3p0(t, p0) + b3p1(t, p1) + b3p2(t, p2) + b3p3(t, p3);\n    };\n  }()\n}; // File:src/extras/core/Curve.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\n\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\n\nTHREE.Curve = function () {};\n\nTHREE.Curve.prototype = {\n  constructor: THREE.Curve,\n  // Virtual base class method to overwrite and implement in subclasses\n  //\t- t [0 .. 1]\n  getPoint: function (t) {\n    console.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");\n    return null;\n  },\n  // Get point at relative position in curve according to arc length\n  // - u [0 .. 1]\n  getPointAt: function (u) {\n    var t = this.getUtoTmapping(u);\n    return this.getPoint(t);\n  },\n  // Get sequence of points using getPoint( t )\n  getPoints: function (divisions) {\n    if (!divisions) divisions = 5;\n    var d,\n        pts = [];\n\n    for (d = 0; d <= divisions; d++) {\n      pts.push(this.getPoint(d / divisions));\n    }\n\n    return pts;\n  },\n  // Get sequence of points using getPointAt( u )\n  getSpacedPoints: function (divisions) {\n    if (!divisions) divisions = 5;\n    var d,\n        pts = [];\n\n    for (d = 0; d <= divisions; d++) {\n      pts.push(this.getPointAt(d / divisions));\n    }\n\n    return pts;\n  },\n  // Get total curve arc length\n  getLength: function () {\n    var lengths = this.getLengths();\n    return lengths[lengths.length - 1];\n  },\n  // Get list of cumulative segment lengths\n  getLengths: function (divisions) {\n    if (!divisions) divisions = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200;\n\n    if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n      //console.log( \"cached\", this.cacheArcLengths );\n      return this.cacheArcLengths;\n    }\n\n    this.needsUpdate = false;\n    var cache = [];\n    var current,\n        last = this.getPoint(0);\n    var p,\n        sum = 0;\n    cache.push(0);\n\n    for (p = 1; p <= divisions; p++) {\n      current = this.getPoint(p / divisions);\n      sum += current.distanceTo(last);\n      cache.push(sum);\n      last = current;\n    }\n\n    this.cacheArcLengths = cache;\n    return cache; // { sums: cache, sum:sum }; Sum is in the last element.\n  },\n  updateArcLengths: function () {\n    this.needsUpdate = true;\n    this.getLengths();\n  },\n  // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n  getUtoTmapping: function (u, distance) {\n    var arcLengths = this.getLengths();\n    var i = 0,\n        il = arcLengths.length;\n    var targetArcLength; // The targeted u distance value to get\n\n    if (distance) {\n      targetArcLength = distance;\n    } else {\n      targetArcLength = u * arcLengths[il - 1];\n    } //var time = Date.now();\n    // binary search for the index with largest value smaller than target u distance\n\n\n    var low = 0,\n        high = il - 1,\n        comparison;\n\n    while (low <= high) {\n      i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n      comparison = arcLengths[i] - targetArcLength;\n\n      if (comparison < 0) {\n        low = i + 1;\n      } else if (comparison > 0) {\n        high = i - 1;\n      } else {\n        high = i;\n        break; // DONE\n      }\n    }\n\n    i = high; //console.log('b' , i, low, high, Date.now()- time);\n\n    if (arcLengths[i] === targetArcLength) {\n      var t = i / (il - 1);\n      return t;\n    } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n    var lengthBefore = arcLengths[i];\n    var lengthAfter = arcLengths[i + 1];\n    var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n    var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n    var t = (i + segmentFraction) / (il - 1);\n    return t;\n  },\n  // Returns a unit vector tangent at t\n  // In case any sub curve does not implement its tangent derivation,\n  // 2 points a small delta apart will be used to find its gradient\n  // which seems to give a reasonable approximation\n  getTangent: function (t) {\n    var delta = 0.0001;\n    var t1 = t - delta;\n    var t2 = t + delta; // Capping in case of danger\n\n    if (t1 < 0) t1 = 0;\n    if (t2 > 1) t2 = 1;\n    var pt1 = this.getPoint(t1);\n    var pt2 = this.getPoint(t2);\n    var vec = pt2.clone().sub(pt1);\n    return vec.normalize();\n  },\n  getTangentAt: function (u) {\n    var t = this.getUtoTmapping(u);\n    return this.getTangent(t);\n  }\n}; // TODO: Transformation for Curves?\n\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\n// A Factory method for creating new curve subclasses\n\nTHREE.Curve.create = function (constructor, getPointFunc) {\n  constructor.prototype = Object.create(THREE.Curve.prototype);\n  constructor.prototype.constructor = constructor;\n  constructor.prototype.getPoint = getPointFunc;\n  return constructor;\n}; // File:src/extras/core/CurvePath.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\n\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\n\n\nTHREE.CurvePath = function () {\n  this.curves = [];\n  this.autoClose = false; // Automatically closes the path\n};\n\nTHREE.CurvePath.prototype = Object.assign(Object.create(THREE.Curve.prototype), {\n  constructor: THREE.CurvePath,\n  add: function (curve) {\n    this.curves.push(curve);\n  },\n  closePath: function () {\n    // TODO Test\n    // and verify for vector3 (needs to implement equals)\n    // Add a line curve if start and end of lines are not connected\n    var startPoint = this.curves[0].getPoint(0);\n    var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n    if (!startPoint.equals(endPoint)) {\n      this.curves.push(new THREE.LineCurve(endPoint, startPoint));\n    }\n  },\n  // To get accurate point with reference to\n  // entire path distance at time t,\n  // following has to be done:\n  // 1. Length of each sub path have to be known\n  // 2. Locate and identify type of curve\n  // 3. Get t for the curve\n  // 4. Return curve.getPointAt(t')\n  getPoint: function (t) {\n    var d = t * this.getLength();\n    var curveLengths = this.getCurveLengths();\n    var i = 0; // To think about boundaries points.\n\n    while (i < curveLengths.length) {\n      if (curveLengths[i] >= d) {\n        var diff = curveLengths[i] - d;\n        var curve = this.curves[i];\n        var u = 1 - diff / curve.getLength();\n        return curve.getPointAt(u);\n      }\n\n      i++;\n    }\n\n    return null; // loop where sum != 0, sum > d , sum+1 <d\n  },\n  // We cannot use the default THREE.Curve getPoint() with getLength() because in\n  // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n  // getPoint() depends on getLength\n  getLength: function () {\n    var lens = this.getCurveLengths();\n    return lens[lens.length - 1];\n  },\n  // Compute lengths and cache them\n  // We cannot overwrite getLengths() because UtoT mapping uses it.\n  getCurveLengths: function () {\n    // We use cache values if curves and cache array are same length\n    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n      return this.cacheLengths;\n    } // Get length of sub-curve\n    // Push sums into cached array\n\n\n    var lengths = [],\n        sums = 0;\n\n    for (var i = 0, l = this.curves.length; i < l; i++) {\n      sums += this.curves[i].getLength();\n      lengths.push(sums);\n    }\n\n    this.cacheLengths = lengths;\n    return lengths;\n  },\n\n  /**************************************************************\r\n   *\tCreate Geometries Helpers\r\n   **************************************************************/\n  /// Generate geometry from path points (for Line or Points objects)\n  createPointsGeometry: function (divisions) {\n    var pts = this.getPoints(divisions);\n    return this.createGeometry(pts);\n  },\n  // Generate geometry from equidistant sampling along the path\n  createSpacedPointsGeometry: function (divisions) {\n    var pts = this.getSpacedPoints(divisions);\n    return this.createGeometry(pts);\n  },\n  createGeometry: function (points) {\n    var geometry = new THREE.Geometry();\n\n    for (var i = 0, l = points.length; i < l; i++) {\n      var point = points[i];\n      geometry.vertices.push(new THREE.Vector3(point.x, point.y, point.z || 0));\n    }\n\n    return geometry;\n  }\n}); // File:src/extras/core/Font.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Font = function (data) {\n  this.data = data;\n};\n\nObject.assign(THREE.Font.prototype, {\n  generateShapes: function (text, size, divisions) {\n    function createPaths(text) {\n      var chars = String(text).split('');\n      var scale = size / data.resolution;\n      var offset = 0;\n      var paths = [];\n\n      for (var i = 0; i < chars.length; i++) {\n        var ret = createPath(chars[i], scale, offset);\n        offset += ret.offset;\n        paths.push(ret.path);\n      }\n\n      return paths;\n    }\n\n    function createPath(c, scale, offset) {\n      var glyph = data.glyphs[c] || data.glyphs['?'];\n      if (!glyph) return;\n      var path = new THREE.Path();\n      var pts = [],\n          b2 = THREE.ShapeUtils.b2,\n          b3 = THREE.ShapeUtils.b3;\n      var x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n      if (glyph.o) {\n        var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n        for (var i = 0, l = outline.length; i < l;) {\n          var action = outline[i++];\n\n          switch (action) {\n            case 'm':\n              // moveTo\n              x = outline[i++] * scale + offset;\n              y = outline[i++] * scale;\n              path.moveTo(x, y);\n              break;\n\n            case 'l':\n              // lineTo\n              x = outline[i++] * scale + offset;\n              y = outline[i++] * scale;\n              path.lineTo(x, y);\n              break;\n\n            case 'q':\n              // quadraticCurveTo\n              cpx = outline[i++] * scale + offset;\n              cpy = outline[i++] * scale;\n              cpx1 = outline[i++] * scale + offset;\n              cpy1 = outline[i++] * scale;\n              path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n              laste = pts[pts.length - 1];\n\n              if (laste) {\n                cpx0 = laste.x;\n                cpy0 = laste.y;\n\n                for (var i2 = 1; i2 <= divisions; i2++) {\n                  var t = i2 / divisions;\n                  b2(t, cpx0, cpx1, cpx);\n                  b2(t, cpy0, cpy1, cpy);\n                }\n              }\n\n              break;\n\n            case 'b':\n              // bezierCurveTo\n              cpx = outline[i++] * scale + offset;\n              cpy = outline[i++] * scale;\n              cpx1 = outline[i++] * scale + offset;\n              cpy1 = outline[i++] * scale;\n              cpx2 = outline[i++] * scale + offset;\n              cpy2 = outline[i++] * scale;\n              path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n              laste = pts[pts.length - 1];\n\n              if (laste) {\n                cpx0 = laste.x;\n                cpy0 = laste.y;\n\n                for (var i2 = 1; i2 <= divisions; i2++) {\n                  var t = i2 / divisions;\n                  b3(t, cpx0, cpx1, cpx2, cpx);\n                  b3(t, cpy0, cpy1, cpy2, cpy);\n                }\n              }\n\n              break;\n          }\n        }\n      }\n\n      return {\n        offset: glyph.ha * scale,\n        path: path\n      };\n    } //\n\n\n    if (size === undefined) size = 100;\n    if (divisions === undefined) divisions = 4;\n    var data = this.data;\n    var paths = createPaths(text);\n    var shapes = [];\n\n    for (var p = 0, pl = paths.length; p < pl; p++) {\n      Array.prototype.push.apply(shapes, paths[p].toShapes());\n    }\n\n    return shapes;\n  }\n}); // File:src/extras/core/Path.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\n\nTHREE.Path = function (points) {\n  THREE.CurvePath.call(this);\n  this.actions = [];\n\n  if (points) {\n    this.fromPoints(points);\n  }\n};\n\nTHREE.Path.prototype = Object.assign(Object.create(THREE.CurvePath.prototype), {\n  constructor: THREE.Path,\n  // TODO Clean up PATH API\n  // Create path using straight lines to connect all points\n  // - vectors: array of Vector2\n  fromPoints: function (vectors) {\n    this.moveTo(vectors[0].x, vectors[0].y);\n\n    for (var i = 1, l = vectors.length; i < l; i++) {\n      this.lineTo(vectors[i].x, vectors[i].y);\n    }\n  },\n  moveTo: function (x, y) {\n    this.actions.push({\n      action: 'moveTo',\n      args: [x, y]\n    });\n  },\n  lineTo: function (x, y) {\n    var lastargs = this.actions[this.actions.length - 1].args;\n    var x0 = lastargs[lastargs.length - 2];\n    var y0 = lastargs[lastargs.length - 1];\n    var curve = new THREE.LineCurve(new THREE.Vector2(x0, y0), new THREE.Vector2(x, y));\n    this.curves.push(curve);\n    this.actions.push({\n      action: 'lineTo',\n      args: [x, y]\n    });\n  },\n  quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n    var lastargs = this.actions[this.actions.length - 1].args;\n    var x0 = lastargs[lastargs.length - 2];\n    var y0 = lastargs[lastargs.length - 1];\n    var curve = new THREE.QuadraticBezierCurve(new THREE.Vector2(x0, y0), new THREE.Vector2(aCPx, aCPy), new THREE.Vector2(aX, aY));\n    this.curves.push(curve);\n    this.actions.push({\n      action: 'quadraticCurveTo',\n      args: [aCPx, aCPy, aX, aY]\n    });\n  },\n  bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n    var lastargs = this.actions[this.actions.length - 1].args;\n    var x0 = lastargs[lastargs.length - 2];\n    var y0 = lastargs[lastargs.length - 1];\n    var curve = new THREE.CubicBezierCurve(new THREE.Vector2(x0, y0), new THREE.Vector2(aCP1x, aCP1y), new THREE.Vector2(aCP2x, aCP2y), new THREE.Vector2(aX, aY));\n    this.curves.push(curve);\n    this.actions.push({\n      action: 'bezierCurveTo',\n      args: [aCP1x, aCP1y, aCP2x, aCP2y, aX, aY]\n    });\n  },\n  splineThru: function (pts\n  /*Array of Vector*/\n  ) {\n    var args = Array.prototype.slice.call(arguments);\n    var lastargs = this.actions[this.actions.length - 1].args;\n    var x0 = lastargs[lastargs.length - 2];\n    var y0 = lastargs[lastargs.length - 1];\n    var npts = [new THREE.Vector2(x0, y0)];\n    Array.prototype.push.apply(npts, pts);\n    var curve = new THREE.SplineCurve(npts);\n    this.curves.push(curve);\n    this.actions.push({\n      action: 'splineThru',\n      args: args\n    });\n  },\n  arc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    var lastargs = this.actions[this.actions.length - 1].args;\n    var x0 = lastargs[lastargs.length - 2];\n    var y0 = lastargs[lastargs.length - 1];\n    this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n  },\n  absarc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n  },\n  ellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    var lastargs = this.actions[this.actions.length - 1].args;\n    var x0 = lastargs[lastargs.length - 2];\n    var y0 = lastargs[lastargs.length - 1];\n    this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n  },\n  absellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    var args = [aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation || 0 // aRotation is optional.\n    ];\n    var curve = new THREE.EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n    this.curves.push(curve);\n    var lastPoint = curve.getPoint(1);\n    args.push(lastPoint.x);\n    args.push(lastPoint.y);\n    this.actions.push({\n      action: 'ellipse',\n      args: args\n    });\n  },\n  getSpacedPoints: function (divisions) {\n    if (!divisions) divisions = 40;\n    var points = [];\n\n    for (var i = 0; i < divisions; i++) {\n      points.push(this.getPoint(i / divisions)); //if ( !this.getPoint( i / divisions ) ) throw \"DIE\";\n    }\n\n    if (this.autoClose) {\n      points.push(points[0]);\n    }\n\n    return points;\n  },\n  getPoints: function (divisions) {\n    divisions = divisions || 12;\n    var b2 = THREE.ShapeUtils.b2;\n    var b3 = THREE.ShapeUtils.b3;\n    var points = [];\n    var cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0, laste, tx, ty;\n\n    for (var i = 0, l = this.actions.length; i < l; i++) {\n      var item = this.actions[i];\n      var action = item.action;\n      var args = item.args;\n\n      switch (action) {\n        case 'moveTo':\n          points.push(new THREE.Vector2(args[0], args[1]));\n          break;\n\n        case 'lineTo':\n          points.push(new THREE.Vector2(args[0], args[1]));\n          break;\n\n        case 'quadraticCurveTo':\n          cpx = args[2];\n          cpy = args[3];\n          cpx1 = args[0];\n          cpy1 = args[1];\n\n          if (points.length > 0) {\n            laste = points[points.length - 1];\n            cpx0 = laste.x;\n            cpy0 = laste.y;\n          } else {\n            laste = this.actions[i - 1].args;\n            cpx0 = laste[laste.length - 2];\n            cpy0 = laste[laste.length - 1];\n          }\n\n          for (var j = 1; j <= divisions; j++) {\n            var t = j / divisions;\n            tx = b2(t, cpx0, cpx1, cpx);\n            ty = b2(t, cpy0, cpy1, cpy);\n            points.push(new THREE.Vector2(tx, ty));\n          }\n\n          break;\n\n        case 'bezierCurveTo':\n          cpx = args[4];\n          cpy = args[5];\n          cpx1 = args[0];\n          cpy1 = args[1];\n          cpx2 = args[2];\n          cpy2 = args[3];\n\n          if (points.length > 0) {\n            laste = points[points.length - 1];\n            cpx0 = laste.x;\n            cpy0 = laste.y;\n          } else {\n            laste = this.actions[i - 1].args;\n            cpx0 = laste[laste.length - 2];\n            cpy0 = laste[laste.length - 1];\n          }\n\n          for (var j = 1; j <= divisions; j++) {\n            var t = j / divisions;\n            tx = b3(t, cpx0, cpx1, cpx2, cpx);\n            ty = b3(t, cpy0, cpy1, cpy2, cpy);\n            points.push(new THREE.Vector2(tx, ty));\n          }\n\n          break;\n\n        case 'splineThru':\n          laste = this.actions[i - 1].args;\n          var last = new THREE.Vector2(laste[laste.length - 2], laste[laste.length - 1]);\n          var spts = [last];\n          var n = divisions * args[0].length;\n          spts = spts.concat(args[0]);\n          var spline = new THREE.SplineCurve(spts);\n\n          for (var j = 1; j <= n; j++) {\n            points.push(spline.getPointAt(j / n));\n          }\n\n          break;\n\n        case 'arc':\n          var aX = args[0],\n              aY = args[1],\n              aRadius = args[2],\n              aStartAngle = args[3],\n              aEndAngle = args[4],\n              aClockwise = !!args[5];\n          var deltaAngle = aEndAngle - aStartAngle;\n          var angle;\n          var tdivisions = divisions * 2;\n\n          for (var j = 1; j <= tdivisions; j++) {\n            var t = j / tdivisions;\n\n            if (!aClockwise) {\n              t = 1 - t;\n            }\n\n            angle = aStartAngle + t * deltaAngle;\n            tx = aX + aRadius * Math.cos(angle);\n            ty = aY + aRadius * Math.sin(angle); //console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n            points.push(new THREE.Vector2(tx, ty));\n          } //console.log(points);\n\n\n          break;\n\n        case 'ellipse':\n          var aX = args[0],\n              aY = args[1],\n              xRadius = args[2],\n              yRadius = args[3],\n              aStartAngle = args[4],\n              aEndAngle = args[5],\n              aClockwise = !!args[6],\n              aRotation = args[7];\n          var deltaAngle = aEndAngle - aStartAngle;\n          var angle;\n          var tdivisions = divisions * 2;\n          var cos, sin;\n\n          if (aRotation !== 0) {\n            cos = Math.cos(aRotation);\n            sin = Math.sin(aRotation);\n          }\n\n          for (var j = 1; j <= tdivisions; j++) {\n            var t = j / tdivisions;\n\n            if (!aClockwise) {\n              t = 1 - t;\n            }\n\n            angle = aStartAngle + t * deltaAngle;\n            tx = aX + xRadius * Math.cos(angle);\n            ty = aY + yRadius * Math.sin(angle);\n\n            if (aRotation !== 0) {\n              var x = tx,\n                  y = ty; // Rotate the point about the center of the ellipse.\n\n              tx = (x - aX) * cos - (y - aY) * sin + aX;\n              ty = (x - aX) * sin + (y - aY) * cos + aY;\n            } //console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n\n            points.push(new THREE.Vector2(tx, ty));\n          } //console.log(points);\n\n\n          break;\n      } // end switch\n\n    } // Normalize to remove the closing point by default.\n\n\n    var lastPoint = points[points.length - 1];\n    if (Math.abs(lastPoint.x - points[0].x) < Number.EPSILON && Math.abs(lastPoint.y - points[0].y) < Number.EPSILON) points.splice(points.length - 1, 1);\n\n    if (this.autoClose) {\n      points.push(points[0]);\n    }\n\n    return points;\n  },\n  toShapes: function (isCCW, noHoles) {\n    function extractSubpaths(inActions) {\n      var subPaths = [],\n          lastPath = new THREE.Path();\n\n      for (var i = 0, l = inActions.length; i < l; i++) {\n        var item = inActions[i];\n        var args = item.args;\n        var action = item.action;\n\n        if (action === 'moveTo') {\n          if (lastPath.actions.length !== 0) {\n            subPaths.push(lastPath);\n            lastPath = new THREE.Path();\n          }\n        }\n\n        lastPath[action].apply(lastPath, args);\n      }\n\n      if (lastPath.actions.length !== 0) {\n        subPaths.push(lastPath);\n      } // console.log(subPaths);\n\n\n      return subPaths;\n    }\n\n    function toShapesNoHoles(inSubpaths) {\n      var shapes = [];\n\n      for (var i = 0, l = inSubpaths.length; i < l; i++) {\n        var tmpPath = inSubpaths[i];\n        var tmpShape = new THREE.Shape();\n        tmpShape.actions = tmpPath.actions;\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n      } //console.log(\"shape\", shapes);\n\n\n      return shapes;\n    }\n\n    function isPointInsidePolygon(inPt, inPolygon) {\n      var polyLen = inPolygon.length; // inPt on polygon contour => immediate success    or\n      // toggling of inside/outside at every single! intersection point of an edge\n      //  with the horizontal line through inPt, left of inPt\n      //  not counting lowerY endpoints of edges and whole edges on that line\n\n      var inside = false;\n\n      for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n        var edgeLowPt = inPolygon[p];\n        var edgeHighPt = inPolygon[q];\n        var edgeDx = edgeHighPt.x - edgeLowPt.x;\n        var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n        if (Math.abs(edgeDy) > Number.EPSILON) {\n          // not parallel\n          if (edgeDy < 0) {\n            edgeLowPt = inPolygon[q];\n            edgeDx = -edgeDx;\n            edgeHighPt = inPolygon[p];\n            edgeDy = -edgeDy;\n          }\n\n          if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n          if (inPt.y === edgeLowPt.y) {\n            if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n            // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n          } else {\n            var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n            if (perpEdge === 0) return true; // inPt is on contour ?\n\n            if (perpEdge < 0) continue;\n            inside = !inside; // true intersection left of inPt\n          }\n        } else {\n          // parallel or collinear\n          if (inPt.y !== edgeLowPt.y) continue; // parallel\n          // edge lies on the same horizontal line as inPt\n\n          if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n          // continue;\n        }\n      }\n\n      return inside;\n    }\n\n    var isClockWise = THREE.ShapeUtils.isClockWise;\n    var subPaths = extractSubpaths(this.actions);\n    if (subPaths.length === 0) return [];\n    if (noHoles === true) return toShapesNoHoles(subPaths);\n    var solid,\n        tmpPath,\n        tmpShape,\n        shapes = [];\n\n    if (subPaths.length === 1) {\n      tmpPath = subPaths[0];\n      tmpShape = new THREE.Shape();\n      tmpShape.actions = tmpPath.actions;\n      tmpShape.curves = tmpPath.curves;\n      shapes.push(tmpShape);\n      return shapes;\n    }\n\n    var holesFirst = !isClockWise(subPaths[0].getPoints());\n    holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n    var betterShapeHoles = [];\n    var newShapes = [];\n    var newShapeHoles = [];\n    var mainIdx = 0;\n    var tmpPoints;\n    newShapes[mainIdx] = undefined;\n    newShapeHoles[mainIdx] = [];\n\n    for (var i = 0, l = subPaths.length; i < l; i++) {\n      tmpPath = subPaths[i];\n      tmpPoints = tmpPath.getPoints();\n      solid = isClockWise(tmpPoints);\n      solid = isCCW ? !solid : solid;\n\n      if (solid) {\n        if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n        newShapes[mainIdx] = {\n          s: new THREE.Shape(),\n          p: tmpPoints\n        };\n        newShapes[mainIdx].s.actions = tmpPath.actions;\n        newShapes[mainIdx].s.curves = tmpPath.curves;\n        if (holesFirst) mainIdx++;\n        newShapeHoles[mainIdx] = []; //console.log('cw', i);\n      } else {\n        newShapeHoles[mainIdx].push({\n          h: tmpPath,\n          p: tmpPoints[0]\n        }); //console.log('ccw', i);\n      }\n    } // only Holes? -> probably all Shapes with wrong orientation\n\n\n    if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n    if (newShapes.length > 1) {\n      var ambiguous = false;\n      var toChange = [];\n\n      for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n        betterShapeHoles[sIdx] = [];\n      }\n\n      for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n        var sho = newShapeHoles[sIdx];\n\n        for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n          var ho = sho[hIdx];\n          var hole_unassigned = true;\n\n          for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n            if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n              if (sIdx !== s2Idx) toChange.push({\n                froms: sIdx,\n                tos: s2Idx,\n                hole: hIdx\n              });\n\n              if (hole_unassigned) {\n                hole_unassigned = false;\n                betterShapeHoles[s2Idx].push(ho);\n              } else {\n                ambiguous = true;\n              }\n            }\n          }\n\n          if (hole_unassigned) {\n            betterShapeHoles[sIdx].push(ho);\n          }\n        }\n      } // console.log(\"ambiguous: \", ambiguous);\n\n\n      if (toChange.length > 0) {\n        // console.log(\"to change: \", toChange);\n        if (!ambiguous) newShapeHoles = betterShapeHoles;\n      }\n    }\n\n    var tmpHoles;\n\n    for (var i = 0, il = newShapes.length; i < il; i++) {\n      tmpShape = newShapes[i].s;\n      shapes.push(tmpShape);\n      tmpHoles = newShapeHoles[i];\n\n      for (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n        tmpShape.holes.push(tmpHoles[j].h);\n      }\n    } //console.log(\"shape\", shapes);\n\n\n    return shapes;\n  }\n}); // File:src/extras/core/Shape.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nTHREE.Shape = function () {\n  THREE.Path.apply(this, arguments);\n  this.holes = [];\n};\n\nTHREE.Shape.prototype = Object.assign(Object.create(THREE.Path.prototype), {\n  constructor: THREE.Shape,\n  // Convenience method to return ExtrudeGeometry\n  extrude: function (options) {\n    return new THREE.ExtrudeGeometry(this, options);\n  },\n  // Convenience method to return ShapeGeometry\n  makeGeometry: function (options) {\n    return new THREE.ShapeGeometry(this, options);\n  },\n  getPointsHoles: function (divisions) {\n    var holesPts = [];\n\n    for (var i = 0, l = this.holes.length; i < l; i++) {\n      holesPts[i] = this.holes[i].getPoints(divisions);\n    }\n\n    return holesPts;\n  },\n  // Get points of shape and holes (keypoints based on segments parameter)\n  extractAllPoints: function (divisions) {\n    return {\n      shape: this.getPoints(divisions),\n      holes: this.getPointsHoles(divisions)\n    };\n  },\n  extractPoints: function (divisions) {\n    return this.extractAllPoints(divisions);\n  }\n}); // File:src/extras/curves/LineCurve.js\n\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\n\nTHREE.LineCurve = function (v1, v2) {\n  this.v1 = v1;\n  this.v2 = v2;\n};\n\nTHREE.LineCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\n\nTHREE.LineCurve.prototype.getPoint = function (t) {\n  var point = this.v2.clone().sub(this.v1);\n  point.multiplyScalar(t).add(this.v1);\n  return point;\n}; // Line curve is linear, so we can overwrite default getPointAt\n\n\nTHREE.LineCurve.prototype.getPointAt = function (u) {\n  return this.getPoint(u);\n};\n\nTHREE.LineCurve.prototype.getTangent = function (t) {\n  var tangent = this.v2.clone().sub(this.v1);\n  return tangent.normalize();\n}; // File:src/extras/curves/QuadraticBezierCurve.js\n\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\n\n\nTHREE.QuadraticBezierCurve = function (v0, v1, v2) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n};\n\nTHREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\n\nTHREE.QuadraticBezierCurve.prototype.getPoint = function (t) {\n  var b2 = THREE.ShapeUtils.b2;\n  return new THREE.Vector2(b2(t, this.v0.x, this.v1.x, this.v2.x), b2(t, this.v0.y, this.v1.y, this.v2.y));\n};\n\nTHREE.QuadraticBezierCurve.prototype.getTangent = function (t) {\n  var tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\n  return new THREE.Vector2(tangentQuadraticBezier(t, this.v0.x, this.v1.x, this.v2.x), tangentQuadraticBezier(t, this.v0.y, this.v1.y, this.v2.y)).normalize();\n}; // File:src/extras/curves/CubicBezierCurve.js\n\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\n\n\nTHREE.CubicBezierCurve = function (v0, v1, v2, v3) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n  this.v3 = v3;\n};\n\nTHREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\n\nTHREE.CubicBezierCurve.prototype.getPoint = function (t) {\n  var b3 = THREE.ShapeUtils.b3;\n  return new THREE.Vector2(b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y));\n};\n\nTHREE.CubicBezierCurve.prototype.getTangent = function (t) {\n  var tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\n  return new THREE.Vector2(tangentCubicBezier(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), tangentCubicBezier(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y)).normalize();\n}; // File:src/extras/curves/SplineCurve.js\n\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\n\n\nTHREE.SplineCurve = function (points\n/* array of Vector2 */\n) {\n  this.points = points == undefined ? [] : points;\n};\n\nTHREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\n\nTHREE.SplineCurve.prototype.getPoint = function (t) {\n  var points = this.points;\n  var point = (points.length - 1) * t;\n  var intPoint = Math.floor(point);\n  var weight = point - intPoint;\n  var point0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n  var point1 = points[intPoint];\n  var point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n  var point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n  var interpolate = THREE.CurveUtils.interpolate;\n  return new THREE.Vector2(interpolate(point0.x, point1.x, point2.x, point3.x, weight), interpolate(point0.y, point1.y, point2.y, point3.y, weight));\n}; // File:src/extras/curves/EllipseCurve.js\n\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\n\n\nTHREE.EllipseCurve = function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n  this.aX = aX;\n  this.aY = aY;\n  this.xRadius = xRadius;\n  this.yRadius = yRadius;\n  this.aStartAngle = aStartAngle;\n  this.aEndAngle = aEndAngle;\n  this.aClockwise = aClockwise;\n  this.aRotation = aRotation || 0;\n};\n\nTHREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\n\nTHREE.EllipseCurve.prototype.getPoint = function (t) {\n  var deltaAngle = this.aEndAngle - this.aStartAngle;\n  if (deltaAngle < 0) deltaAngle += Math.PI * 2;\n  if (deltaAngle > Math.PI * 2) deltaAngle -= Math.PI * 2;\n  var angle;\n\n  if (this.aClockwise === true) {\n    angle = this.aEndAngle + (1 - t) * (Math.PI * 2 - deltaAngle);\n  } else {\n    angle = this.aStartAngle + t * deltaAngle;\n  }\n\n  var x = this.aX + this.xRadius * Math.cos(angle);\n  var y = this.aY + this.yRadius * Math.sin(angle);\n\n  if (this.aRotation !== 0) {\n    var cos = Math.cos(this.aRotation);\n    var sin = Math.sin(this.aRotation);\n    var tx = x,\n        ty = y; // Rotate the point about the center of the ellipse.\n\n    x = (tx - this.aX) * cos - (ty - this.aY) * sin + this.aX;\n    y = (tx - this.aX) * sin + (ty - this.aY) * cos + this.aY;\n  }\n\n  return new THREE.Vector2(x, y);\n}; // File:src/extras/curves/ArcCurve.js\n\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\n\n\nTHREE.ArcCurve = function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n  THREE.EllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n};\n\nTHREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype);\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve; // File:src/extras/curves/LineCurve3.js\n\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\n\nTHREE.LineCurve3 = THREE.Curve.create(function (v1, v2) {\n  this.v1 = v1;\n  this.v2 = v2;\n}, function (t) {\n  var vector = new THREE.Vector3();\n  vector.subVectors(this.v2, this.v1); // diff\n\n  vector.multiplyScalar(t);\n  vector.add(this.v1);\n  return vector;\n}); // File:src/extras/curves/QuadraticBezierCurve3.js\n\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\n\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(function (v0, v1, v2) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n}, function (t) {\n  var b2 = THREE.ShapeUtils.b2;\n  return new THREE.Vector3(b2(t, this.v0.x, this.v1.x, this.v2.x), b2(t, this.v0.y, this.v1.y, this.v2.y), b2(t, this.v0.z, this.v1.z, this.v2.z));\n}); // File:src/extras/curves/CubicBezierCurve3.js\n\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\n\nTHREE.CubicBezierCurve3 = THREE.Curve.create(function (v0, v1, v2, v3) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n  this.v3 = v3;\n}, function (t) {\n  var b3 = THREE.ShapeUtils.b3;\n  return new THREE.Vector3(b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y), b3(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z));\n}); // File:src/extras/curves/SplineCurve3.js\n\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\n\nTHREE.SplineCurve3 = THREE.Curve.create(function (points\n/* array of Vector3 */\n) {\n  console.warn('THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3');\n  this.points = points == undefined ? [] : points;\n}, function (t) {\n  var points = this.points;\n  var point = (points.length - 1) * t;\n  var intPoint = Math.floor(point);\n  var weight = point - intPoint;\n  var point0 = points[intPoint == 0 ? intPoint : intPoint - 1];\n  var point1 = points[intPoint];\n  var point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n  var point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n  var interpolate = THREE.CurveUtils.interpolate;\n  return new THREE.Vector3(interpolate(point0.x, point1.x, point2.x, point3.x, weight), interpolate(point0.y, point1.y, point2.y, point3.y, weight), interpolate(point0.z, point1.z, point2.z, point3.z, weight));\n}); // File:src/extras/curves/CatmullRomCurve3.js\n\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\n\nTHREE.CatmullRomCurve3 = function () {\n  var tmp = new THREE.Vector3(),\n      px = new CubicPoly(),\n      py = new CubicPoly(),\n      pz = new CubicPoly();\n  /*\r\n  Based on an optimized c++ solution in\r\n   - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n   - http://ideone.com/NoEbVM\r\n  \n  This CubicPoly class could be used for reusing some variables and calculations,\r\n  but for three.js curve use, it could be possible inlined and flatten into a single function call\r\n  which can be placed in CurveUtils.\r\n  */\n\n  function CubicPoly() {}\n  /*\r\n   * Compute coefficients for a cubic polynomial\r\n   *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n   * such that\r\n   *   p(0) = x0, p(1) = x1\r\n   *  and\r\n   *   p'(0) = t0, p'(1) = t1.\r\n   */\n\n\n  CubicPoly.prototype.init = function (x0, x1, t0, t1) {\n    this.c0 = x0;\n    this.c1 = t0;\n    this.c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n    this.c3 = 2 * x0 - 2 * x1 + t0 + t1;\n  };\n\n  CubicPoly.prototype.initNonuniformCatmullRom = function (x0, x1, x2, x3, dt0, dt1, dt2) {\n    // compute tangents when parameterized in [t1,t2]\n    var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n    var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n    t1 *= dt1;\n    t2 *= dt1; // initCubicPoly\n\n    this.init(x1, x2, t1, t2);\n  }; // standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\n\n\n  CubicPoly.prototype.initCatmullRom = function (x0, x1, x2, x3, tension) {\n    this.init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n  };\n\n  CubicPoly.prototype.calc = function (t) {\n    var t2 = t * t;\n    var t3 = t2 * t;\n    return this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\n  }; // Subclass Three.js curve\n\n\n  return THREE.Curve.create(function (p\n  /* array of Vector3 */\n  ) {\n    this.points = p || [];\n    this.closed = false;\n  }, function (t) {\n    var points = this.points,\n        point,\n        intPoint,\n        weight,\n        l;\n    l = points.length;\n    if (l < 2) console.log('duh, you need at least 2 points');\n    point = (l - (this.closed ? 0 : 1)) * t;\n    intPoint = Math.floor(point);\n    weight = point - intPoint;\n\n    if (this.closed) {\n      intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / points.length) + 1) * points.length;\n    } else if (weight === 0 && intPoint === l - 1) {\n      intPoint = l - 2;\n      weight = 1;\n    }\n\n    var p0, p1, p2, p3; // 4 points\n\n    if (this.closed || intPoint > 0) {\n      p0 = points[(intPoint - 1) % l];\n    } else {\n      // extrapolate first point\n      tmp.subVectors(points[0], points[1]).add(points[0]);\n      p0 = tmp;\n    }\n\n    p1 = points[intPoint % l];\n    p2 = points[(intPoint + 1) % l];\n\n    if (this.closed || intPoint + 2 < l) {\n      p3 = points[(intPoint + 2) % l];\n    } else {\n      // extrapolate last point\n      tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n      p3 = tmp;\n    }\n\n    if (this.type === undefined || this.type === 'centripetal' || this.type === 'chordal') {\n      // init Centripetal / Chordal Catmull-Rom\n      var pow = this.type === 'chordal' ? 0.5 : 0.25;\n      var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n      var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n      var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n      if (dt1 < 1e-4) dt1 = 1.0;\n      if (dt0 < 1e-4) dt0 = dt1;\n      if (dt2 < 1e-4) dt2 = dt1;\n      px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n      py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n      pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n    } else if (this.type === 'catmullrom') {\n      var tension = this.tension !== undefined ? this.tension : 0.5;\n      px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, tension);\n      py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, tension);\n      pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, tension);\n    }\n\n    var v = new THREE.Vector3(px.calc(weight), py.calc(weight), pz.calc(weight));\n    return v;\n  });\n}(); // File:src/extras/curves/ClosedSplineCurve3.js\n\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\n\n\nTHREE.ClosedSplineCurve3 = function (points) {\n  console.warn('THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.');\n  THREE.CatmullRomCurve3.call(this, points);\n  this.type = 'catmullrom';\n  this.closed = true;\n};\n\nTHREE.ClosedSplineCurve3.prototype = Object.create(THREE.CatmullRomCurve3.prototype); // File:src/extras/geometries/BoxGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\n\nTHREE.BoxGeometry = function (width, height, depth, widthSegments, heightSegments, depthSegments) {\n  THREE.Geometry.call(this);\n  this.type = 'BoxGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    depth: depth,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    depthSegments: depthSegments\n  };\n  this.fromBufferGeometry(new THREE.BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments));\n  this.mergeVertices();\n};\n\nTHREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\nTHREE.CubeGeometry = THREE.BoxGeometry; // File:src/extras/geometries/BoxBufferGeometry.js\n\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\n\nTHREE.BoxBufferGeometry = function (width, height, depth, widthSegments, heightSegments, depthSegments) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'BoxBufferGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    depth: depth,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    depthSegments: depthSegments\n  };\n  var scope = this; // segments\n\n  widthSegments = Math.floor(widthSegments) || 1;\n  heightSegments = Math.floor(heightSegments) || 1;\n  depthSegments = Math.floor(depthSegments) || 1; // these are used to calculate buffer length\n\n  var vertexCount = calculateVertexCount(widthSegments, heightSegments, depthSegments);\n  var indexCount = calculateIndexCount(widthSegments, heightSegments, depthSegments); // buffers\n\n  var indices = new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount);\n  var vertices = new Float32Array(vertexCount * 3);\n  var normals = new Float32Array(vertexCount * 3);\n  var uvs = new Float32Array(vertexCount * 2); // offset variables\n\n  var vertexBufferOffset = 0;\n  var uvBufferOffset = 0;\n  var indexBufferOffset = 0;\n  var numberOfVertices = 0; // group variables\n\n  var groupStart = 0; // build each side of the box geometry\n\n  buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n  buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n  buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n  buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n  buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n  buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n  // build geometry\n\n  this.setIndex(new THREE.BufferAttribute(indices, 1));\n  this.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n  this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2)); // helper functions\n\n  function calculateVertexCount(w, h, d) {\n    var vertices = 0; // calculate the amount of vertices for each side (plane)\n\n    vertices += (w + 1) * (h + 1) * 2; // xy\n\n    vertices += (w + 1) * (d + 1) * 2; // xz\n\n    vertices += (d + 1) * (h + 1) * 2; // zy\n\n    return vertices;\n  }\n\n  function calculateIndexCount(w, h, d) {\n    var index = 0; // calculate the amount of squares for each side\n\n    index += w * h * 2; // xy\n\n    index += w * d * 2; // xz\n\n    index += d * h * 2; // zy\n\n    return index * 6; // two triangles per square => six vertices per square\n  }\n\n  function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n    var segmentWidth = width / gridX;\n    var segmentHeight = height / gridY;\n    var widthHalf = width / 2;\n    var heightHalf = height / 2;\n    var depthHalf = depth / 2;\n    var gridX1 = gridX + 1;\n    var gridY1 = gridY + 1;\n    var vertexCounter = 0;\n    var groupCount = 0;\n    var vector = new THREE.Vector3(); // generate vertices, normals and uvs\n\n    for (var iy = 0; iy < gridY1; iy++) {\n      var y = iy * segmentHeight - heightHalf;\n\n      for (var ix = 0; ix < gridX1; ix++) {\n        var x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n        vector[u] = x * udir;\n        vector[v] = y * vdir;\n        vector[w] = depthHalf; // now apply vector to vertex buffer\n\n        vertices[vertexBufferOffset] = vector.x;\n        vertices[vertexBufferOffset + 1] = vector.y;\n        vertices[vertexBufferOffset + 2] = vector.z; // set values to correct vector component\n\n        vector[u] = 0;\n        vector[v] = 0;\n        vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n        normals[vertexBufferOffset] = vector.x;\n        normals[vertexBufferOffset + 1] = vector.y;\n        normals[vertexBufferOffset + 2] = vector.z; // uvs\n\n        uvs[uvBufferOffset] = ix / gridX;\n        uvs[uvBufferOffset + 1] = 1 - iy / gridY; // update offsets and counters\n\n        vertexBufferOffset += 3;\n        uvBufferOffset += 2;\n        vertexCounter += 1;\n      }\n    } // 1. you need three indices to draw a single face\n    // 2. a single segment consists of two faces\n    // 3. so we need to generate six (2*3) indices per segment\n\n\n    for (iy = 0; iy < gridY; iy++) {\n      for (ix = 0; ix < gridX; ix++) {\n        // indices\n        var a = numberOfVertices + ix + gridX1 * iy;\n        var b = numberOfVertices + ix + gridX1 * (iy + 1);\n        var c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n        var d = numberOfVertices + (ix + 1) + gridX1 * iy; // face one\n\n        indices[indexBufferOffset] = a;\n        indices[indexBufferOffset + 1] = b;\n        indices[indexBufferOffset + 2] = d; // face two\n\n        indices[indexBufferOffset + 3] = b;\n        indices[indexBufferOffset + 4] = c;\n        indices[indexBufferOffset + 5] = d; // update offsets and counters\n\n        indexBufferOffset += 6;\n        groupCount += 6;\n      }\n    } // add a group to the geometry. this will ensure multi material support\n\n\n    scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n    groupStart += groupCount; // update total number of vertices\n\n    numberOfVertices += vertexCounter;\n  }\n};\n\nTHREE.BoxBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry; // File:src/extras/geometries/CircleGeometry.js\n\n/**\r\n * @author hughes\r\n */\n\nTHREE.CircleGeometry = function (radius, segments, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'CircleGeometry';\n  this.parameters = {\n    radius: radius,\n    segments: segments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new THREE.CircleBufferGeometry(radius, segments, thetaStart, thetaLength));\n};\n\nTHREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry; // File:src/extras/geometries/CircleBufferGeometry.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\nTHREE.CircleBufferGeometry = function (radius, segments, thetaStart, thetaLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'CircleBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    segments: segments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  segments = segments !== undefined ? Math.max(3, segments) : 8;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n  var vertices = segments + 2;\n  var positions = new Float32Array(vertices * 3);\n  var normals = new Float32Array(vertices * 3);\n  var uvs = new Float32Array(vertices * 2); // center data is already zero, but need to set a few extras\n\n  normals[2] = 1.0;\n  uvs[0] = 0.5;\n  uvs[1] = 0.5;\n\n  for (var s = 0, i = 3, ii = 2; s <= segments; s++, i += 3, ii += 2) {\n    var segment = thetaStart + s / segments * thetaLength;\n    positions[i] = radius * Math.cos(segment);\n    positions[i + 1] = radius * Math.sin(segment);\n    normals[i + 2] = 1; // normal z\n\n    uvs[ii] = (positions[i] / radius + 1) / 2;\n    uvs[ii + 1] = (positions[i + 1] / radius + 1) / 2;\n  }\n\n  var indices = [];\n\n  for (var i = 1; i <= segments; i++) {\n    indices.push(i, i + 1, 0);\n  }\n\n  this.setIndex(new THREE.BufferAttribute(new Uint16Array(indices), 1));\n  this.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n  this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n  this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.CircleBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry; // File:src/extras/geometries/CylinderBufferGeometry.js\n\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\n\nTHREE.CylinderBufferGeometry = function (radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'CylinderBufferGeometry';\n  this.parameters = {\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  var scope = this;\n  radiusTop = radiusTop !== undefined ? radiusTop : 20;\n  radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n  height = height !== undefined ? height : 100;\n  radialSegments = Math.floor(radialSegments) || 8;\n  heightSegments = Math.floor(heightSegments) || 1;\n  openEnded = openEnded !== undefined ? openEnded : false;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n  thetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI; // used to calculate buffer length\n\n  var nbCap = 0;\n\n  if (openEnded === false) {\n    if (radiusTop > 0) nbCap++;\n    if (radiusBottom > 0) nbCap++;\n  }\n\n  var vertexCount = calculateVertexCount();\n  var indexCount = calculateIndexCount(); // buffers\n\n  var indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n  var vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2); // helper variables\n\n  var index = 0,\n      indexOffset = 0,\n      indexArray = [],\n      halfHeight = height / 2; // group variables\n\n  var groupStart = 0; // generate geometry\n\n  generateTorso();\n\n  if (openEnded === false) {\n    if (radiusTop > 0) generateCap(true);\n    if (radiusBottom > 0) generateCap(false);\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', vertices);\n  this.addAttribute('normal', normals);\n  this.addAttribute('uv', uvs); // helper functions\n\n  function calculateVertexCount() {\n    var count = (radialSegments + 1) * (heightSegments + 1);\n\n    if (openEnded === false) {\n      count += (radialSegments + 1) * nbCap + radialSegments * nbCap;\n    }\n\n    return count;\n  }\n\n  function calculateIndexCount() {\n    var count = radialSegments * heightSegments * 2 * 3;\n\n    if (openEnded === false) {\n      count += radialSegments * nbCap * 3;\n    }\n\n    return count;\n  }\n\n  function generateTorso() {\n    var x, y;\n    var normal = new THREE.Vector3();\n    var vertex = new THREE.Vector3();\n    var groupCount = 0; // this will be used to calculate the normal\n\n    var tanTheta = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n    for (y = 0; y <= heightSegments; y++) {\n      var indexRow = [];\n      var v = y / heightSegments; // calculate the radius of the current row\n\n      var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n      for (x = 0; x <= radialSegments; x++) {\n        var u = x / radialSegments; // vertex\n\n        vertex.x = radius * Math.sin(u * thetaLength + thetaStart);\n        vertex.y = -v * height + halfHeight;\n        vertex.z = radius * Math.cos(u * thetaLength + thetaStart);\n        vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // normal\n\n        normal.copy(vertex); // handle special case if radiusTop/radiusBottom is zero\n\n        if (radiusTop === 0 && y === 0 || radiusBottom === 0 && y === heightSegments) {\n          normal.x = Math.sin(u * thetaLength + thetaStart);\n          normal.z = Math.cos(u * thetaLength + thetaStart);\n        }\n\n        normal.setY(Math.sqrt(normal.x * normal.x + normal.z * normal.z) * tanTheta).normalize();\n        normals.setXYZ(index, normal.x, normal.y, normal.z); // uv\n\n        uvs.setXY(index, u, 1 - v); // save index of vertex in respective row\n\n        indexRow.push(index); // increase index\n\n        index++;\n      } // now save vertices of the row in our index array\n\n\n      indexArray.push(indexRow);\n    } // generate indices\n\n\n    for (x = 0; x < radialSegments; x++) {\n      for (y = 0; y < heightSegments; y++) {\n        // we use the index array to access the correct indices\n        var i1 = indexArray[y][x];\n        var i2 = indexArray[y + 1][x];\n        var i3 = indexArray[y + 1][x + 1];\n        var i4 = indexArray[y][x + 1]; // face one\n\n        indices.setX(indexOffset, i1);\n        indexOffset++;\n        indices.setX(indexOffset, i2);\n        indexOffset++;\n        indices.setX(indexOffset, i4);\n        indexOffset++; // face two\n\n        indices.setX(indexOffset, i2);\n        indexOffset++;\n        indices.setX(indexOffset, i3);\n        indexOffset++;\n        indices.setX(indexOffset, i4);\n        indexOffset++; // update counters\n\n        groupCount += 6;\n      }\n    } // add a group to the geometry. this will ensure multi material support\n\n\n    scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n    groupStart += groupCount;\n  }\n\n  function generateCap(top) {\n    var x, centerIndexStart, centerIndexEnd;\n    var uv = new THREE.Vector2();\n    var vertex = new THREE.Vector3();\n    var groupCount = 0;\n    var radius = top === true ? radiusTop : radiusBottom;\n    var sign = top === true ? 1 : -1; // save the index of the first center vertex\n\n    centerIndexStart = index; // first we generate the center vertex data of the cap.\n    // because the geometry needs one set of uvs per face,\n    // we must generate a center vertex per face/segment\n\n    for (x = 1; x <= radialSegments; x++) {\n      // vertex\n      vertices.setXYZ(index, 0, halfHeight * sign, 0); // normal\n\n      normals.setXYZ(index, 0, sign, 0); // uv\n\n      uv.x = 0.5;\n      uv.y = 0.5;\n      uvs.setXY(index, uv.x, uv.y); // increase index\n\n      index++;\n    } // save the index of the last center vertex\n\n\n    centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n    for (x = 0; x <= radialSegments; x++) {\n      var u = x / radialSegments;\n      var theta = u * thetaLength + thetaStart;\n      var cosTheta = Math.cos(theta);\n      var sinTheta = Math.sin(theta); // vertex\n\n      vertex.x = radius * sinTheta;\n      vertex.y = halfHeight * sign;\n      vertex.z = radius * cosTheta;\n      vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // normal\n\n      normals.setXYZ(index, 0, sign, 0); // uv\n\n      uv.x = cosTheta * 0.5 + 0.5;\n      uv.y = sinTheta * 0.5 * sign + 0.5;\n      uvs.setXY(index, uv.x, uv.y); // increase index\n\n      index++;\n    } // generate indices\n\n\n    for (x = 0; x < radialSegments; x++) {\n      var c = centerIndexStart + x;\n      var i = centerIndexEnd + x;\n\n      if (top === true) {\n        // face top\n        indices.setX(indexOffset, i);\n        indexOffset++;\n        indices.setX(indexOffset, i + 1);\n        indexOffset++;\n        indices.setX(indexOffset, c);\n        indexOffset++;\n      } else {\n        // face bottom\n        indices.setX(indexOffset, i + 1);\n        indexOffset++;\n        indices.setX(indexOffset, i);\n        indexOffset++;\n        indices.setX(indexOffset, c);\n        indexOffset++;\n      } // update counters\n\n\n      groupCount += 3;\n    } // add a group to the geometry. this will ensure multi material support\n\n\n    scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n    groupStart += groupCount;\n  }\n};\n\nTHREE.CylinderBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry; // File:src/extras/geometries/CylinderGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.CylinderGeometry = function (radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'CylinderGeometry';\n  this.parameters = {\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new THREE.CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength));\n  this.mergeVertices();\n};\n\nTHREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry; // File:src/extras/geometries/ConeBufferGeometry.js\n\n/*\r\n * @author: abelnation / http://github.com/abelnation\r\n */\n\nTHREE.ConeBufferGeometry = function (radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  THREE.CylinderBufferGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n  this.type = 'ConeBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n};\n\nTHREE.ConeBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.ConeBufferGeometry.prototype.constructor = THREE.ConeBufferGeometry; // File:src/extras/geometries/ConeGeometry.js\n\n/**\r\n * @author abelnation / http://github.com/abelnation\r\n */\n\nTHREE.ConeGeometry = function (radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  THREE.CylinderGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n  this.type = 'ConeGeometry';\n  this.parameters = {\n    radius: radius,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n};\n\nTHREE.ConeGeometry.prototype = Object.create(THREE.CylinderGeometry.prototype);\nTHREE.ConeGeometry.prototype.constructor = THREE.ConeGeometry; // File:src/extras/geometries/EdgesGeometry.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.EdgesGeometry = function (geometry, thresholdAngle) {\n  THREE.BufferGeometry.call(this);\n  thresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1;\n  var thresholdDot = Math.cos(THREE.Math.DEG2RAD * thresholdAngle);\n  var edge = [0, 0],\n      hash = {};\n\n  function sortFunction(a, b) {\n    return a - b;\n  }\n\n  var keys = ['a', 'b', 'c'];\n  var geometry2;\n\n  if (geometry instanceof THREE.BufferGeometry) {\n    geometry2 = new THREE.Geometry();\n    geometry2.fromBufferGeometry(geometry);\n  } else {\n    geometry2 = geometry.clone();\n  }\n\n  geometry2.mergeVertices();\n  geometry2.computeFaceNormals();\n  var vertices = geometry2.vertices;\n  var faces = geometry2.faces;\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    var face = faces[i];\n\n    for (var j = 0; j < 3; j++) {\n      edge[0] = face[keys[j]];\n      edge[1] = face[keys[(j + 1) % 3]];\n      edge.sort(sortFunction);\n      var key = edge.toString();\n\n      if (hash[key] === undefined) {\n        hash[key] = {\n          vert1: edge[0],\n          vert2: edge[1],\n          face1: i,\n          face2: undefined\n        };\n      } else {\n        hash[key].face2 = i;\n      }\n    }\n  }\n\n  var coords = [];\n\n  for (var key in hash) {\n    var h = hash[key];\n\n    if (h.face2 === undefined || faces[h.face1].normal.dot(faces[h.face2].normal) <= thresholdDot) {\n      var vertex = vertices[h.vert1];\n      coords.push(vertex.x);\n      coords.push(vertex.y);\n      coords.push(vertex.z);\n      vertex = vertices[h.vert2];\n      coords.push(vertex.x);\n      coords.push(vertex.y);\n      coords.push(vertex.z);\n    }\n  }\n\n  this.addAttribute('position', new THREE.BufferAttribute(new Float32Array(coords), 3));\n};\n\nTHREE.EdgesGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry; // File:src/extras/geometries/ExtrudeGeometry.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\n\nTHREE.ExtrudeGeometry = function (shapes, options) {\n  if (typeof shapes === \"undefined\") {\n    shapes = [];\n    return;\n  }\n\n  THREE.Geometry.call(this);\n  this.type = 'ExtrudeGeometry';\n  shapes = Array.isArray(shapes) ? shapes : [shapes];\n  this.addShapeList(shapes, options);\n  this.computeFaceNormals(); // can't really use automatic vertex normals\n  // as then front and back sides get smoothed too\n  // should do separate smoothing just for sides\n  //this.computeVertexNormals();\n  //console.log( \"took\", ( Date.now() - startTime ) );\n};\n\nTHREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\n\nTHREE.ExtrudeGeometry.prototype.addShapeList = function (shapes, options) {\n  var sl = shapes.length;\n\n  for (var s = 0; s < sl; s++) {\n    var shape = shapes[s];\n    this.addShape(shape, options);\n  }\n};\n\nTHREE.ExtrudeGeometry.prototype.addShape = function (shape, options) {\n  var amount = options.amount !== undefined ? options.amount : 100;\n  var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\n  var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\n  var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n  var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n  var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n  var steps = options.steps !== undefined ? options.steps : 1;\n  var extrudePath = options.extrudePath;\n  var extrudePts,\n      extrudeByPath = false; // Use default WorldUVGenerator if no UV generators are specified.\n\n  var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\n  var splineTube, binormal, normal, position2;\n\n  if (extrudePath) {\n    extrudePts = extrudePath.getSpacedPoints(steps);\n    extrudeByPath = true;\n    bevelEnabled = false; // bevels not supported for path extrusion\n    // SETUP TNB variables\n    // Reuse TNB from TubeGeomtry for now.\n    // TODO1 - have a .isClosed in spline?\n\n    splineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n    binormal = new THREE.Vector3();\n    normal = new THREE.Vector3();\n    position2 = new THREE.Vector3();\n  } // Safeguards if bevels are not enabled\n\n\n  if (!bevelEnabled) {\n    bevelSegments = 0;\n    bevelThickness = 0;\n    bevelSize = 0;\n  } // Variables initialization\n\n\n  var ahole, h, hl; // looping of holes\n\n  var scope = this;\n  var shapesOffset = this.vertices.length;\n  var shapePoints = shape.extractPoints(curveSegments);\n  var vertices = shapePoints.shape;\n  var holes = shapePoints.holes;\n  var reverse = !THREE.ShapeUtils.isClockWise(vertices);\n\n  if (reverse) {\n    vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n\n      if (THREE.ShapeUtils.isClockWise(ahole)) {\n        holes[h] = ahole.reverse();\n      }\n    }\n\n    reverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n  }\n\n  var faces = THREE.ShapeUtils.triangulateShape(vertices, holes);\n  /* Vertices */\n\n  var contour = vertices; // vertices has all points but contour has only points of circumference\n\n  for (h = 0, hl = holes.length; h < hl; h++) {\n    ahole = holes[h];\n    vertices = vertices.concat(ahole);\n  }\n\n  function scalePt2(pt, vec, size) {\n    if (!vec) console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n    return vec.clone().multiplyScalar(size).add(pt);\n  }\n\n  var b,\n      bs,\n      t,\n      z,\n      vert,\n      vlen = vertices.length,\n      face,\n      flen = faces.length; // Find directions for point movement\n\n  function getBevelVec(inPt, inPrev, inNext) {\n    // computes for inPt the corresponding point inPt' on a new contour\n    //   shifted by 1 unit (length of normalized vector) to the left\n    // if we walk along contour clockwise, this new contour is outside the old one\n    //\n    // inPt' is the intersection of the two lines parallel to the two\n    //  adjacent edges of inPt at a distance of 1 unit on the left side.\n    var v_trans_x,\n        v_trans_y,\n        shrink_by = 1; // resulting translation vector for inPt\n    // good reading for geometry algorithms (here: line-line intersection)\n    // http://geomalgorithms.com/a05-_intersect-1.html\n\n    var v_prev_x = inPt.x - inPrev.x,\n        v_prev_y = inPt.y - inPrev.y;\n    var v_next_x = inNext.x - inPt.x,\n        v_next_y = inNext.y - inPt.y;\n    var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n    var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n    if (Math.abs(collinear0) > Number.EPSILON) {\n      // not collinear\n      // length of vectors for normalizing\n      var v_prev_len = Math.sqrt(v_prev_lensq);\n      var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n      var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n      var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n      var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n      var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n      var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n      v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n      v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n      //  but prevent crazy spikes\n\n      var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n      if (v_trans_lensq <= 2) {\n        return new THREE.Vector2(v_trans_x, v_trans_y);\n      } else {\n        shrink_by = Math.sqrt(v_trans_lensq / 2);\n      }\n    } else {\n      // handle special case of collinear edges\n      var direction_eq = false; // assumes: opposite\n\n      if (v_prev_x > Number.EPSILON) {\n        if (v_next_x > Number.EPSILON) {\n          direction_eq = true;\n        }\n      } else {\n        if (v_prev_x < -Number.EPSILON) {\n          if (v_next_x < -Number.EPSILON) {\n            direction_eq = true;\n          }\n        } else {\n          if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n            direction_eq = true;\n          }\n        }\n      }\n\n      if (direction_eq) {\n        // console.log(\"Warning: lines are a straight sequence\");\n        v_trans_x = -v_prev_y;\n        v_trans_y = v_prev_x;\n        shrink_by = Math.sqrt(v_prev_lensq);\n      } else {\n        // console.log(\"Warning: lines are a straight spike\");\n        v_trans_x = v_prev_x;\n        v_trans_y = v_prev_y;\n        shrink_by = Math.sqrt(v_prev_lensq / 2);\n      }\n    }\n\n    return new THREE.Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n  }\n\n  var contourMovements = [];\n\n  for (var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n    if (j === il) j = 0;\n    if (k === il) k = 0; //  (j)---(i)---(k)\n    // console.log('i,j,k', i, j , k)\n\n    contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n  }\n\n  var holesMovements = [],\n      oneHoleMovements,\n      verticesMovements = contourMovements.concat();\n\n  for (h = 0, hl = holes.length; h < hl; h++) {\n    ahole = holes[h];\n    oneHoleMovements = [];\n\n    for (i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n      if (j === il) j = 0;\n      if (k === il) k = 0; //  (j)---(i)---(k)\n\n      oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n    }\n\n    holesMovements.push(oneHoleMovements);\n    verticesMovements = verticesMovements.concat(oneHoleMovements);\n  } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n  for (b = 0; b < bevelSegments; b++) {\n    //for ( b = bevelSegments; b > 0; b -- ) {\n    t = b / bevelSegments;\n    z = bevelThickness * (1 - t); //z = bevelThickness * t;\n\n    bs = bevelSize * Math.sin(t * Math.PI / 2); // curved\n    //bs = bevelSize * t; // linear\n    // contract shape\n\n    for (i = 0, il = contour.length; i < il; i++) {\n      vert = scalePt2(contour[i], contourMovements[i], bs);\n      v(vert.x, vert.y, -z);\n    } // expand holes\n\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = holesMovements[h];\n\n      for (i = 0, il = ahole.length; i < il; i++) {\n        vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n        v(vert.x, vert.y, -z);\n      }\n    }\n  }\n\n  bs = bevelSize; // Back facing vertices\n\n  for (i = 0; i < vlen; i++) {\n    vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n    if (!extrudeByPath) {\n      v(vert.x, vert.y, 0);\n    } else {\n      // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n      normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n      binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n      position2.copy(extrudePts[0]).add(normal).add(binormal);\n      v(position2.x, position2.y, position2.z);\n    }\n  } // Add stepped vertices...\n  // Including front facing vertices\n\n\n  var s;\n\n  for (s = 1; s <= steps; s++) {\n    for (i = 0; i < vlen; i++) {\n      vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n      if (!extrudeByPath) {\n        v(vert.x, vert.y, amount / steps * s);\n      } else {\n        // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n        normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n        binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n        position2.copy(extrudePts[s]).add(normal).add(binormal);\n        v(position2.x, position2.y, position2.z);\n      }\n    }\n  } // Add bevel segments planes\n  //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n  for (b = bevelSegments - 1; b >= 0; b--) {\n    t = b / bevelSegments;\n    z = bevelThickness * (1 - t); //bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\n\n    bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n    for (i = 0, il = contour.length; i < il; i++) {\n      vert = scalePt2(contour[i], contourMovements[i], bs);\n      v(vert.x, vert.y, amount + z);\n    } // expand holes\n\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = holesMovements[h];\n\n      for (i = 0, il = ahole.length; i < il; i++) {\n        vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, amount + z);\n        } else {\n          v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n        }\n      }\n    }\n  }\n  /* Faces */\n  // Top and bottom faces\n\n\n  buildLidFaces(); // Sides faces\n\n  buildSideFaces(); /////  Internal functions\n\n  function buildLidFaces() {\n    if (bevelEnabled) {\n      var layer = 0; // steps + 1\n\n      var offset = vlen * layer; // Bottom faces\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[2] + offset, face[1] + offset, face[0] + offset);\n      }\n\n      layer = steps + bevelSegments * 2;\n      offset = vlen * layer; // Top faces\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[0] + offset, face[1] + offset, face[2] + offset);\n      }\n    } else {\n      // Bottom faces\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[2], face[1], face[0]);\n      } // Top faces\n\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n      }\n    }\n  } // Create faces for the z-sides of the shape\n\n\n  function buildSideFaces() {\n    var layeroffset = 0;\n    sidewalls(contour, layeroffset);\n    layeroffset += contour.length;\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      sidewalls(ahole, layeroffset); //, true\n\n      layeroffset += ahole.length;\n    }\n  }\n\n  function sidewalls(contour, layeroffset) {\n    var j, k;\n    i = contour.length;\n\n    while (--i >= 0) {\n      j = i;\n      k = i - 1;\n      if (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n      var s = 0,\n          sl = steps + bevelSegments * 2;\n\n      for (s = 0; s < sl; s++) {\n        var slen1 = vlen * s;\n        var slen2 = vlen * (s + 1);\n        var a = layeroffset + j + slen1,\n            b = layeroffset + k + slen1,\n            c = layeroffset + k + slen2,\n            d = layeroffset + j + slen2;\n        f4(a, b, c, d, contour, s, sl, j, k);\n      }\n    }\n  }\n\n  function v(x, y, z) {\n    scope.vertices.push(new THREE.Vector3(x, y, z));\n  }\n\n  function f3(a, b, c) {\n    a += shapesOffset;\n    b += shapesOffset;\n    c += shapesOffset;\n    scope.faces.push(new THREE.Face3(a, b, c, null, null, 0));\n    var uvs = uvgen.generateTopUV(scope, a, b, c);\n    scope.faceVertexUvs[0].push(uvs);\n  }\n\n  function f4(a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2) {\n    a += shapesOffset;\n    b += shapesOffset;\n    c += shapesOffset;\n    d += shapesOffset;\n    scope.faces.push(new THREE.Face3(a, b, d, null, null, 1));\n    scope.faces.push(new THREE.Face3(b, c, d, null, null, 1));\n    var uvs = uvgen.generateSideWallUV(scope, a, b, c, d);\n    scope.faceVertexUvs[0].push([uvs[0], uvs[1], uvs[3]]);\n    scope.faceVertexUvs[0].push([uvs[1], uvs[2], uvs[3]]);\n  }\n};\n\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\n  generateTopUV: function (geometry, indexA, indexB, indexC) {\n    var vertices = geometry.vertices;\n    var a = vertices[indexA];\n    var b = vertices[indexB];\n    var c = vertices[indexC];\n    return [new THREE.Vector2(a.x, a.y), new THREE.Vector2(b.x, b.y), new THREE.Vector2(c.x, c.y)];\n  },\n  generateSideWallUV: function (geometry, indexA, indexB, indexC, indexD) {\n    var vertices = geometry.vertices;\n    var a = vertices[indexA];\n    var b = vertices[indexB];\n    var c = vertices[indexC];\n    var d = vertices[indexD];\n\n    if (Math.abs(a.y - b.y) < 0.01) {\n      return [new THREE.Vector2(a.x, 1 - a.z), new THREE.Vector2(b.x, 1 - b.z), new THREE.Vector2(c.x, 1 - c.z), new THREE.Vector2(d.x, 1 - d.z)];\n    } else {\n      return [new THREE.Vector2(a.y, 1 - a.z), new THREE.Vector2(b.y, 1 - b.z), new THREE.Vector2(c.y, 1 - c.z), new THREE.Vector2(d.y, 1 - d.z)];\n    }\n  }\n}; // File:src/extras/geometries/ShapeGeometry.js\n\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\n\nTHREE.ShapeGeometry = function (shapes, options) {\n  THREE.Geometry.call(this);\n  this.type = 'ShapeGeometry';\n  if (Array.isArray(shapes) === false) shapes = [shapes];\n  this.addShapeList(shapes, options);\n  this.computeFaceNormals();\n};\n\nTHREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\n\nTHREE.ShapeGeometry.prototype.addShapeList = function (shapes, options) {\n  for (var i = 0, l = shapes.length; i < l; i++) {\n    this.addShape(shapes[i], options);\n  }\n\n  return this;\n};\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\n\n\nTHREE.ShapeGeometry.prototype.addShape = function (shape, options) {\n  if (options === undefined) options = {};\n  var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n  var material = options.material;\n  var uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator; //\n\n  var i, l, hole;\n  var shapesOffset = this.vertices.length;\n  var shapePoints = shape.extractPoints(curveSegments);\n  var vertices = shapePoints.shape;\n  var holes = shapePoints.holes;\n  var reverse = !THREE.ShapeUtils.isClockWise(vertices);\n\n  if (reverse) {\n    vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n    for (i = 0, l = holes.length; i < l; i++) {\n      hole = holes[i];\n\n      if (THREE.ShapeUtils.isClockWise(hole)) {\n        holes[i] = hole.reverse();\n      }\n    }\n\n    reverse = false;\n  }\n\n  var faces = THREE.ShapeUtils.triangulateShape(vertices, holes); // Vertices\n\n  for (i = 0, l = holes.length; i < l; i++) {\n    hole = holes[i];\n    vertices = vertices.concat(hole);\n  } //\n\n\n  var vert,\n      vlen = vertices.length;\n  var face,\n      flen = faces.length;\n\n  for (i = 0; i < vlen; i++) {\n    vert = vertices[i];\n    this.vertices.push(new THREE.Vector3(vert.x, vert.y, 0));\n  }\n\n  for (i = 0; i < flen; i++) {\n    face = faces[i];\n    var a = face[0] + shapesOffset;\n    var b = face[1] + shapesOffset;\n    var c = face[2] + shapesOffset;\n    this.faces.push(new THREE.Face3(a, b, c, null, null, material));\n    this.faceVertexUvs[0].push(uvgen.generateTopUV(this, a, b, c));\n  }\n}; // File:src/extras/geometries/LatheBufferGeometry.js\n\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\n// points - to create a closed torus, one must use a set of points\n//    like so: [ a, b, c, d, a ], see first is the same as last.\n// segments - the number of circumference segments to create\n// phiStart - the starting radian\n// phiLength - the radian (0 to 2PI) range of the lathed section\n//    2PI is a closed lathe, less than 2PI is a portion.\n\n\nTHREE.LatheBufferGeometry = function (points, segments, phiStart, phiLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'LatheBufferGeometry';\n  this.parameters = {\n    points: points,\n    segments: segments,\n    phiStart: phiStart,\n    phiLength: phiLength\n  };\n  segments = Math.floor(segments) || 12;\n  phiStart = phiStart || 0;\n  phiLength = phiLength || Math.PI * 2; // clamp phiLength so it's in range of [ 0, 2PI ]\n\n  phiLength = THREE.Math.clamp(phiLength, 0, Math.PI * 2); // these are used to calculate buffer length\n\n  var vertexCount = (segments + 1) * points.length;\n  var indexCount = segments * points.length * 2 * 3; // buffers\n\n  var indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n  var vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2); // helper variables\n\n  var index = 0,\n      indexOffset = 0,\n      base;\n  var inversePointLength = 1.0 / (points.length - 1);\n  var inverseSegments = 1.0 / segments;\n  var vertex = new THREE.Vector3();\n  var uv = new THREE.Vector2();\n  var i, j; // generate vertices and uvs\n\n  for (i = 0; i <= segments; i++) {\n    var phi = phiStart + i * inverseSegments * phiLength;\n    var sin = Math.sin(phi);\n    var cos = Math.cos(phi);\n\n    for (j = 0; j <= points.length - 1; j++) {\n      // vertex\n      vertex.x = points[j].x * sin;\n      vertex.y = points[j].y;\n      vertex.z = points[j].x * cos;\n      vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // uv\n\n      uv.x = i / segments;\n      uv.y = j / (points.length - 1);\n      uvs.setXY(index, uv.x, uv.y); // increase index\n\n      index++;\n    }\n  } // generate indices\n\n\n  for (i = 0; i < segments; i++) {\n    for (j = 0; j < points.length - 1; j++) {\n      base = j + i * points.length; // indices\n\n      var a = base;\n      var b = base + points.length;\n      var c = base + points.length + 1;\n      var d = base + 1; // face one\n\n      indices.setX(indexOffset, a);\n      indexOffset++;\n      indices.setX(indexOffset, b);\n      indexOffset++;\n      indices.setX(indexOffset, d);\n      indexOffset++; // face two\n\n      indices.setX(indexOffset, b);\n      indexOffset++;\n      indices.setX(indexOffset, c);\n      indexOffset++;\n      indices.setX(indexOffset, d);\n      indexOffset++;\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', vertices);\n  this.addAttribute('uv', uvs); // generate normals\n\n  this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n  // because the corresponding vertices are identical (but still have different UVs).\n\n  if (phiLength === Math.PI * 2) {\n    var normals = this.attributes.normal.array;\n    var n1 = new THREE.Vector3();\n    var n2 = new THREE.Vector3();\n    var n = new THREE.Vector3(); // this is the buffer offset for the last line of vertices\n\n    base = segments * points.length * 3;\n\n    for (i = 0, j = 0; i < points.length; i++, j += 3) {\n      // select the normal of the vertex in the first line\n      n1.x = normals[j + 0];\n      n1.y = normals[j + 1];\n      n1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n      n2.x = normals[base + j + 0];\n      n2.y = normals[base + j + 1];\n      n2.z = normals[base + j + 2]; // average normals\n\n      n.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n      normals[j + 0] = normals[base + j + 0] = n.x;\n      normals[j + 1] = normals[base + j + 1] = n.y;\n      normals[j + 2] = normals[base + j + 2] = n.z;\n    } // next row\n\n  }\n};\n\nTHREE.LatheBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry; // File:src/extras/geometries/LatheGeometry.js\n\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://clara.io\r\n */\n// points - to create a closed torus, one must use a set of points\n//    like so: [ a, b, c, d, a ], see first is the same as last.\n// segments - the number of circumference segments to create\n// phiStart - the starting radian\n// phiLength - the radian (0 to 2PI) range of the lathed section\n//    2PI is a closed lathe, less than 2PI is a portion.\n\nTHREE.LatheGeometry = function (points, segments, phiStart, phiLength) {\n  THREE.Geometry.call(this);\n  this.type = 'LatheGeometry';\n  this.parameters = {\n    points: points,\n    segments: segments,\n    phiStart: phiStart,\n    phiLength: phiLength\n  };\n  this.fromBufferGeometry(new THREE.LatheBufferGeometry(points, segments, phiStart, phiLength));\n  this.mergeVertices();\n};\n\nTHREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry; // File:src/extras/geometries/PlaneGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\n\nTHREE.PlaneGeometry = function (width, height, widthSegments, heightSegments) {\n  THREE.Geometry.call(this);\n  this.type = 'PlaneGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n  this.fromBufferGeometry(new THREE.PlaneBufferGeometry(width, height, widthSegments, heightSegments));\n};\n\nTHREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry; // File:src/extras/geometries/PlaneBufferGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\n\nTHREE.PlaneBufferGeometry = function (width, height, widthSegments, heightSegments) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'PlaneBufferGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n  var width_half = width / 2;\n  var height_half = height / 2;\n  var gridX = Math.floor(widthSegments) || 1;\n  var gridY = Math.floor(heightSegments) || 1;\n  var gridX1 = gridX + 1;\n  var gridY1 = gridY + 1;\n  var segment_width = width / gridX;\n  var segment_height = height / gridY;\n  var vertices = new Float32Array(gridX1 * gridY1 * 3);\n  var normals = new Float32Array(gridX1 * gridY1 * 3);\n  var uvs = new Float32Array(gridX1 * gridY1 * 2);\n  var offset = 0;\n  var offset2 = 0;\n\n  for (var iy = 0; iy < gridY1; iy++) {\n    var y = iy * segment_height - height_half;\n\n    for (var ix = 0; ix < gridX1; ix++) {\n      var x = ix * segment_width - width_half;\n      vertices[offset] = x;\n      vertices[offset + 1] = -y;\n      normals[offset + 2] = 1;\n      uvs[offset2] = ix / gridX;\n      uvs[offset2 + 1] = 1 - iy / gridY;\n      offset += 3;\n      offset2 += 2;\n    }\n  }\n\n  offset = 0;\n  var indices = new (vertices.length / 3 > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n\n  for (var iy = 0; iy < gridY; iy++) {\n    for (var ix = 0; ix < gridX; ix++) {\n      var a = ix + gridX1 * iy;\n      var b = ix + gridX1 * (iy + 1);\n      var c = ix + 1 + gridX1 * (iy + 1);\n      var d = ix + 1 + gridX1 * iy;\n      indices[offset] = a;\n      indices[offset + 1] = b;\n      indices[offset + 2] = d;\n      indices[offset + 3] = b;\n      indices[offset + 4] = c;\n      indices[offset + 5] = d;\n      offset += 6;\n    }\n  }\n\n  this.setIndex(new THREE.BufferAttribute(indices, 1));\n  this.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n  this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n};\n\nTHREE.PlaneBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry; // File:src/extras/geometries/RingBufferGeometry.js\n\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\n\nTHREE.RingBufferGeometry = function (innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'RingBufferGeometry';\n  this.parameters = {\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    thetaSegments: thetaSegments,\n    phiSegments: phiSegments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  innerRadius = innerRadius || 20;\n  outerRadius = outerRadius || 50;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n  thetaSegments = thetaSegments !== undefined ? Math.max(3, thetaSegments) : 8;\n  phiSegments = phiSegments !== undefined ? Math.max(1, phiSegments) : 1; // these are used to calculate buffer length\n\n  var vertexCount = (thetaSegments + 1) * (phiSegments + 1);\n  var indexCount = thetaSegments * phiSegments * 2 * 3; // buffers\n\n  var indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n  var vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2); // some helper variables\n\n  var index = 0,\n      indexOffset = 0,\n      segment;\n  var radius = innerRadius;\n  var radiusStep = (outerRadius - innerRadius) / phiSegments;\n  var vertex = new THREE.Vector3();\n  var uv = new THREE.Vector2();\n  var j, i; // generate vertices, normals and uvs\n  // values are generate from the inside of the ring to the outside\n\n  for (j = 0; j <= phiSegments; j++) {\n    for (i = 0; i <= thetaSegments; i++) {\n      segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n      vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // normal\n\n      normals.setXYZ(index, 0, 0, 1); // uv\n\n      uv.x = (vertex.x / outerRadius + 1) / 2;\n      uv.y = (vertex.y / outerRadius + 1) / 2;\n      uvs.setXY(index, uv.x, uv.y); // increase index\n\n      index++;\n    } // increase the radius for next row of vertices\n\n\n    radius += radiusStep;\n  } // generate indices\n\n\n  for (j = 0; j < phiSegments; j++) {\n    var thetaSegmentLevel = j * (thetaSegments + 1);\n\n    for (i = 0; i < thetaSegments; i++) {\n      segment = i + thetaSegmentLevel; // indices\n\n      var a = segment;\n      var b = segment + thetaSegments + 1;\n      var c = segment + thetaSegments + 2;\n      var d = segment + 1; // face one\n\n      indices.setX(indexOffset, a);\n      indexOffset++;\n      indices.setX(indexOffset, b);\n      indexOffset++;\n      indices.setX(indexOffset, c);\n      indexOffset++; // face two\n\n      indices.setX(indexOffset, a);\n      indexOffset++;\n      indices.setX(indexOffset, c);\n      indexOffset++;\n      indices.setX(indexOffset, d);\n      indexOffset++;\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', vertices);\n  this.addAttribute('normal', normals);\n  this.addAttribute('uv', uvs);\n};\n\nTHREE.RingBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry; // File:src/extras/geometries/RingGeometry.js\n\n/**\r\n * @author Kaleb Murphy\r\n */\n\nTHREE.RingGeometry = function (innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'RingGeometry';\n  this.parameters = {\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    thetaSegments: thetaSegments,\n    phiSegments: phiSegments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new THREE.RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength));\n};\n\nTHREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry; // File:src/extras/geometries/SphereGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.SphereGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'SphereGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new THREE.SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n};\n\nTHREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry; // File:src/extras/geometries/SphereBufferGeometry.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\n\nTHREE.SphereBufferGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'SphereBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n  heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n  phiStart = phiStart !== undefined ? phiStart : 0;\n  phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n  var thetaEnd = thetaStart + thetaLength;\n  var vertexCount = (widthSegments + 1) * (heightSegments + 1);\n  var positions = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2);\n  var index = 0,\n      vertices = [],\n      normal = new THREE.Vector3();\n\n  for (var y = 0; y <= heightSegments; y++) {\n    var verticesRow = [];\n    var v = y / heightSegments;\n\n    for (var x = 0; x <= widthSegments; x++) {\n      var u = x / widthSegments;\n      var px = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      var py = radius * Math.cos(thetaStart + v * thetaLength);\n      var pz = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      normal.set(px, py, pz).normalize();\n      positions.setXYZ(index, px, py, pz);\n      normals.setXYZ(index, normal.x, normal.y, normal.z);\n      uvs.setXY(index, u, 1 - v);\n      verticesRow.push(index);\n      index++;\n    }\n\n    vertices.push(verticesRow);\n  }\n\n  var indices = [];\n\n  for (var y = 0; y < heightSegments; y++) {\n    for (var x = 0; x < widthSegments; x++) {\n      var v1 = vertices[y][x + 1];\n      var v2 = vertices[y][x];\n      var v3 = vertices[y + 1][x];\n      var v4 = vertices[y + 1][x + 1];\n      if (y !== 0 || thetaStart > 0) indices.push(v1, v2, v4);\n      if (y !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(v2, v3, v4);\n    }\n  }\n\n  this.setIndex(new (positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute)(indices, 1));\n  this.addAttribute('position', positions);\n  this.addAttribute('normal', normals);\n  this.addAttribute('uv', uvs);\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.SphereBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry; // File:src/extras/geometries/TextGeometry.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  font: <THREE.Font>, // font\r\n *\r\n *  size: <float>, // size of the text\r\n *  height: <float>, // thickness to extrude text\r\n *  curveSegments: <int>, // number of points on the curves\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into text bevel goes\r\n *  bevelSize: <float> // how far from text outline is bevel\r\n * }\r\n */\n\nTHREE.TextGeometry = function (text, parameters) {\n  parameters = parameters || {};\n  var font = parameters.font;\n\n  if (font instanceof THREE.Font === false) {\n    console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n    return new THREE.Geometry();\n  }\n\n  var shapes = font.generateShapes(text, parameters.size, parameters.curveSegments); // translate parameters to ExtrudeGeometry API\n\n  parameters.amount = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n  if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n  if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n  if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n  THREE.ExtrudeGeometry.call(this, shapes, parameters);\n  this.type = 'TextGeometry';\n};\n\nTHREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype);\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry; // File:src/extras/geometries/TorusBufferGeometry.js\n\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\n\nTHREE.TorusBufferGeometry = function (radius, tube, radialSegments, tubularSegments, arc) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'TorusBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    arc: arc\n  };\n  radius = radius || 100;\n  tube = tube || 40;\n  radialSegments = Math.floor(radialSegments) || 8;\n  tubularSegments = Math.floor(tubularSegments) || 6;\n  arc = arc || Math.PI * 2; // used to calculate buffer length\n\n  var vertexCount = (radialSegments + 1) * (tubularSegments + 1);\n  var indexCount = radialSegments * tubularSegments * 2 * 3; // buffers\n\n  var indices = new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount);\n  var vertices = new Float32Array(vertexCount * 3);\n  var normals = new Float32Array(vertexCount * 3);\n  var uvs = new Float32Array(vertexCount * 2); // offset variables\n\n  var vertexBufferOffset = 0;\n  var uvBufferOffset = 0;\n  var indexBufferOffset = 0; // helper variables\n\n  var center = new THREE.Vector3();\n  var vertex = new THREE.Vector3();\n  var normal = new THREE.Vector3();\n  var j, i; // generate vertices, normals and uvs\n\n  for (j = 0; j <= radialSegments; j++) {\n    for (i = 0; i <= tubularSegments; i++) {\n      var u = i / tubularSegments * arc;\n      var v = j / radialSegments * Math.PI * 2; // vertex\n\n      vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n      vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n      vertex.z = tube * Math.sin(v);\n      vertices[vertexBufferOffset] = vertex.x;\n      vertices[vertexBufferOffset + 1] = vertex.y;\n      vertices[vertexBufferOffset + 2] = vertex.z; // this vector is used to calculate the normal\n\n      center.x = radius * Math.cos(u);\n      center.y = radius * Math.sin(u); // normal\n\n      normal.subVectors(vertex, center).normalize();\n      normals[vertexBufferOffset] = normal.x;\n      normals[vertexBufferOffset + 1] = normal.y;\n      normals[vertexBufferOffset + 2] = normal.z; // uv\n\n      uvs[uvBufferOffset] = i / tubularSegments;\n      uvs[uvBufferOffset + 1] = j / radialSegments; // update offsets\n\n      vertexBufferOffset += 3;\n      uvBufferOffset += 2;\n    }\n  } // generate indices\n\n\n  for (j = 1; j <= radialSegments; j++) {\n    for (i = 1; i <= tubularSegments; i++) {\n      // indices\n      var a = (tubularSegments + 1) * j + i - 1;\n      var b = (tubularSegments + 1) * (j - 1) + i - 1;\n      var c = (tubularSegments + 1) * (j - 1) + i;\n      var d = (tubularSegments + 1) * j + i; // face one\n\n      indices[indexBufferOffset] = a;\n      indices[indexBufferOffset + 1] = b;\n      indices[indexBufferOffset + 2] = d; // face two\n\n      indices[indexBufferOffset + 3] = b;\n      indices[indexBufferOffset + 4] = c;\n      indices[indexBufferOffset + 5] = d; // update offset\n\n      indexBufferOffset += 6;\n    }\n  } // build geometry\n\n\n  this.setIndex(new THREE.BufferAttribute(indices, 1));\n  this.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n  this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n};\n\nTHREE.TorusBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry; // File:src/extras/geometries/TorusGeometry.js\n\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\n\nTHREE.TorusGeometry = function (radius, tube, radialSegments, tubularSegments, arc) {\n  THREE.Geometry.call(this);\n  this.type = 'TorusGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    arc: arc\n  };\n  this.fromBufferGeometry(new THREE.TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc));\n};\n\nTHREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry; // File:src/extras/geometries/TorusKnotBufferGeometry.js\n\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n *\r\n * see: http://www.blackpawn.com/texts/pqtorus/\r\n */\n\nTHREE.TorusKnotBufferGeometry = function (radius, tube, tubularSegments, radialSegments, p, q) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'TorusKnotBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    tubularSegments: tubularSegments,\n    radialSegments: radialSegments,\n    p: p,\n    q: q\n  };\n  radius = radius || 100;\n  tube = tube || 40;\n  tubularSegments = Math.floor(tubularSegments) || 64;\n  radialSegments = Math.floor(radialSegments) || 8;\n  p = p || 2;\n  q = q || 3; // used to calculate buffer length\n\n  var vertexCount = (radialSegments + 1) * (tubularSegments + 1);\n  var indexCount = radialSegments * tubularSegments * 2 * 3; // buffers\n\n  var indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\n  var vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2); // helper variables\n\n  var i,\n      j,\n      index = 0,\n      indexOffset = 0;\n  var vertex = new THREE.Vector3();\n  var normal = new THREE.Vector3();\n  var uv = new THREE.Vector2();\n  var P1 = new THREE.Vector3();\n  var P2 = new THREE.Vector3();\n  var B = new THREE.Vector3();\n  var T = new THREE.Vector3();\n  var N = new THREE.Vector3(); // generate vertices, normals and uvs\n\n  for (i = 0; i <= tubularSegments; ++i) {\n    // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n    var u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n    // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n    calculatePositionOnCurve(u, p, q, radius, P1);\n    calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n    T.subVectors(P2, P1);\n    N.addVectors(P2, P1);\n    B.crossVectors(T, N);\n    N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n    B.normalize();\n    N.normalize();\n\n    for (j = 0; j <= radialSegments; ++j) {\n      // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n      // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n      var v = j / radialSegments * Math.PI * 2;\n      var cx = -tube * Math.cos(v);\n      var cy = tube * Math.sin(v); // now calculate the final vertex position.\n      // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n      vertex.x = P1.x + (cx * N.x + cy * B.x);\n      vertex.y = P1.y + (cx * N.y + cy * B.y);\n      vertex.z = P1.z + (cx * N.z + cy * B.z); // vertex\n\n      vertices.setXYZ(index, vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n      normal.subVectors(vertex, P1).normalize();\n      normals.setXYZ(index, normal.x, normal.y, normal.z); // uv\n\n      uv.x = i / tubularSegments;\n      uv.y = j / radialSegments;\n      uvs.setXY(index, uv.x, uv.y); // increase index\n\n      index++;\n    }\n  } // generate indices\n\n\n  for (j = 1; j <= tubularSegments; j++) {\n    for (i = 1; i <= radialSegments; i++) {\n      // indices\n      var a = (radialSegments + 1) * (j - 1) + (i - 1);\n      var b = (radialSegments + 1) * j + (i - 1);\n      var c = (radialSegments + 1) * j + i;\n      var d = (radialSegments + 1) * (j - 1) + i; // face one\n\n      indices.setX(indexOffset, a);\n      indexOffset++;\n      indices.setX(indexOffset, b);\n      indexOffset++;\n      indices.setX(indexOffset, d);\n      indexOffset++; // face two\n\n      indices.setX(indexOffset, b);\n      indexOffset++;\n      indices.setX(indexOffset, c);\n      indexOffset++;\n      indices.setX(indexOffset, d);\n      indexOffset++;\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', vertices);\n  this.addAttribute('normal', normals);\n  this.addAttribute('uv', uvs); // this function calculates the current position on the torus curve\n\n  function calculatePositionOnCurve(u, p, q, radius, position) {\n    var cu = Math.cos(u);\n    var su = Math.sin(u);\n    var quOverP = q / p * u;\n    var cs = Math.cos(quOverP);\n    position.x = radius * (2 + cs) * 0.5 * cu;\n    position.y = radius * (2 + cs) * su * 0.5;\n    position.z = radius * Math.sin(quOverP) * 0.5;\n  }\n};\n\nTHREE.TorusKnotBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry; // File:src/extras/geometries/TorusKnotGeometry.js\n\n/**\r\n * @author oosmoxiecode\r\n */\n\nTHREE.TorusKnotGeometry = function (radius, tube, tubularSegments, radialSegments, p, q, heightScale) {\n  THREE.Geometry.call(this);\n  this.type = 'TorusKnotGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    tubularSegments: tubularSegments,\n    radialSegments: radialSegments,\n    p: p,\n    q: q\n  };\n  if (heightScale !== undefined) console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.');\n  this.fromBufferGeometry(new THREE.TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q));\n  this.mergeVertices();\n};\n\nTHREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry; // File:src/extras/geometries/TubeGeometry.js\n\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\n\nTHREE.TubeGeometry = function (path, segments, radius, radialSegments, closed, taper) {\n  THREE.Geometry.call(this);\n  this.type = 'TubeGeometry';\n  this.parameters = {\n    path: path,\n    segments: segments,\n    radius: radius,\n    radialSegments: radialSegments,\n    closed: closed,\n    taper: taper\n  };\n  segments = segments || 64;\n  radius = radius || 1;\n  radialSegments = radialSegments || 8;\n  closed = closed || false;\n  taper = taper || THREE.TubeGeometry.NoTaper;\n  var grid = [];\n  var scope = this,\n      tangent,\n      normal,\n      binormal,\n      numpoints = segments + 1,\n      u,\n      v,\n      r,\n      cx,\n      cy,\n      pos,\n      pos2 = new THREE.Vector3(),\n      i,\n      j,\n      ip,\n      jp,\n      a,\n      b,\n      c,\n      d,\n      uva,\n      uvb,\n      uvc,\n      uvd;\n  var frames = new THREE.TubeGeometry.FrenetFrames(path, segments, closed),\n      tangents = frames.tangents,\n      normals = frames.normals,\n      binormals = frames.binormals; // proxy internals\n\n  this.tangents = tangents;\n  this.normals = normals;\n  this.binormals = binormals;\n\n  function vert(x, y, z) {\n    return scope.vertices.push(new THREE.Vector3(x, y, z)) - 1;\n  } // construct the grid\n\n\n  for (i = 0; i < numpoints; i++) {\n    grid[i] = [];\n    u = i / (numpoints - 1);\n    pos = path.getPointAt(u);\n    tangent = tangents[i];\n    normal = normals[i];\n    binormal = binormals[i];\n    r = radius * taper(u);\n\n    for (j = 0; j < radialSegments; j++) {\n      v = j / radialSegments * 2 * Math.PI;\n      cx = -r * Math.cos(v); // TODO: Hack: Negating it so it faces outside.\n\n      cy = r * Math.sin(v);\n      pos2.copy(pos);\n      pos2.x += cx * normal.x + cy * binormal.x;\n      pos2.y += cx * normal.y + cy * binormal.y;\n      pos2.z += cx * normal.z + cy * binormal.z;\n      grid[i][j] = vert(pos2.x, pos2.y, pos2.z);\n    }\n  } // construct the mesh\n\n\n  for (i = 0; i < segments; i++) {\n    for (j = 0; j < radialSegments; j++) {\n      ip = closed ? (i + 1) % segments : i + 1;\n      jp = (j + 1) % radialSegments;\n      a = grid[i][j]; // *** NOT NECESSARILY PLANAR ! ***\n\n      b = grid[ip][j];\n      c = grid[ip][jp];\n      d = grid[i][jp];\n      uva = new THREE.Vector2(i / segments, j / radialSegments);\n      uvb = new THREE.Vector2((i + 1) / segments, j / radialSegments);\n      uvc = new THREE.Vector2((i + 1) / segments, (j + 1) / radialSegments);\n      uvd = new THREE.Vector2(i / segments, (j + 1) / radialSegments);\n      this.faces.push(new THREE.Face3(a, b, d));\n      this.faceVertexUvs[0].push([uva, uvb, uvd]);\n      this.faces.push(new THREE.Face3(b, c, d));\n      this.faceVertexUvs[0].push([uvb.clone(), uvc, uvd.clone()]);\n    }\n  }\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n};\n\nTHREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\n\nTHREE.TubeGeometry.NoTaper = function (u) {\n  return 1;\n};\n\nTHREE.TubeGeometry.SinusoidalTaper = function (u) {\n  return Math.sin(Math.PI * u);\n}; // For computing of Frenet frames, exposing the tangents, normals and binormals the spline\n\n\nTHREE.TubeGeometry.FrenetFrames = function (path, segments, closed) {\n  var normal = new THREE.Vector3(),\n      tangents = [],\n      normals = [],\n      binormals = [],\n      vec = new THREE.Vector3(),\n      mat = new THREE.Matrix4(),\n      numpoints = segments + 1,\n      theta,\n      smallest,\n      tx,\n      ty,\n      tz,\n      i,\n      u; // expose internals\n\n  this.tangents = tangents;\n  this.normals = normals;\n  this.binormals = binormals; // compute the tangent vectors for each segment on the path\n\n  for (i = 0; i < numpoints; i++) {\n    u = i / (numpoints - 1);\n    tangents[i] = path.getTangentAt(u);\n    tangents[i].normalize();\n  }\n\n  initialNormal3();\n  /*\r\n  function initialNormal1(lastBinormal) {\r\n  \t// fixed start binormal. Has dangers of 0 vectors\r\n  \tnormals[ 0 ] = new THREE.Vector3();\r\n  \tbinormals[ 0 ] = new THREE.Vector3();\r\n  \tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n  \tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n  \tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n  }\r\n  \n  function initialNormal2() {\r\n  \n  \t// This uses the Frenet-Serret formula for deriving binormal\r\n  \tvar t2 = path.getTangentAt( epsilon );\r\n  \n  \tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n  \tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n  \n  \tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n  \tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n  \n  }\r\n  */\n\n  function initialNormal3() {\n    // select an initial normal vector perpendicular to the first tangent vector,\n    // and in the direction of the smallest tangent xyz component\n    normals[0] = new THREE.Vector3();\n    binormals[0] = new THREE.Vector3();\n    smallest = Number.MAX_VALUE;\n    tx = Math.abs(tangents[0].x);\n    ty = Math.abs(tangents[0].y);\n    tz = Math.abs(tangents[0].z);\n\n    if (tx <= smallest) {\n      smallest = tx;\n      normal.set(1, 0, 0);\n    }\n\n    if (ty <= smallest) {\n      smallest = ty;\n      normal.set(0, 1, 0);\n    }\n\n    if (tz <= smallest) {\n      normal.set(0, 0, 1);\n    }\n\n    vec.crossVectors(tangents[0], normal).normalize();\n    normals[0].crossVectors(tangents[0], vec);\n    binormals[0].crossVectors(tangents[0], normals[0]);\n  } // compute the slowly-varying normal and binormal vectors for each segment on the path\n\n\n  for (i = 1; i < numpoints; i++) {\n    normals[i] = normals[i - 1].clone();\n    binormals[i] = binormals[i - 1].clone();\n    vec.crossVectors(tangents[i - 1], tangents[i]);\n\n    if (vec.length() > Number.EPSILON) {\n      vec.normalize();\n      theta = Math.acos(THREE.Math.clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n      normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n    }\n\n    binormals[i].crossVectors(tangents[i], normals[i]);\n  } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n  if (closed) {\n    theta = Math.acos(THREE.Math.clamp(normals[0].dot(normals[numpoints - 1]), -1, 1));\n    theta /= numpoints - 1;\n\n    if (tangents[0].dot(vec.crossVectors(normals[0], normals[numpoints - 1])) > 0) {\n      theta = -theta;\n    }\n\n    for (i = 1; i < numpoints; i++) {\n      // twist a little...\n      normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n      binormals[i].crossVectors(tangents[i], normals[i]);\n    }\n  }\n}; // File:src/extras/geometries/PolyhedronGeometry.js\n\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\n\nTHREE.PolyhedronGeometry = function (vertices, indices, radius, detail) {\n  THREE.Geometry.call(this);\n  this.type = 'PolyhedronGeometry';\n  this.parameters = {\n    vertices: vertices,\n    indices: indices,\n    radius: radius,\n    detail: detail\n  };\n  radius = radius || 1;\n  detail = detail || 0;\n  var that = this;\n\n  for (var i = 0, l = vertices.length; i < l; i += 3) {\n    prepare(new THREE.Vector3(vertices[i], vertices[i + 1], vertices[i + 2]));\n  }\n\n  var p = this.vertices;\n  var faces = [];\n\n  for (var i = 0, j = 0, l = indices.length; i < l; i += 3, j++) {\n    var v1 = p[indices[i]];\n    var v2 = p[indices[i + 1]];\n    var v3 = p[indices[i + 2]];\n    faces[j] = new THREE.Face3(v1.index, v2.index, v3.index, [v1.clone(), v2.clone(), v3.clone()], undefined, j);\n  }\n\n  var centroid = new THREE.Vector3();\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    subdivide(faces[i], detail);\n  } // Handle case when face straddles the seam\n\n\n  for (var i = 0, l = this.faceVertexUvs[0].length; i < l; i++) {\n    var uvs = this.faceVertexUvs[0][i];\n    var x0 = uvs[0].x;\n    var x1 = uvs[1].x;\n    var x2 = uvs[2].x;\n    var max = Math.max(x0, x1, x2);\n    var min = Math.min(x0, x1, x2);\n\n    if (max > 0.9 && min < 0.1) {\n      // 0.9 is somewhat arbitrary\n      if (x0 < 0.2) uvs[0].x += 1;\n      if (x1 < 0.2) uvs[1].x += 1;\n      if (x2 < 0.2) uvs[2].x += 1;\n    }\n  } // Apply radius\n\n\n  for (var i = 0, l = this.vertices.length; i < l; i++) {\n    this.vertices[i].multiplyScalar(radius);\n  } // Merge vertices\n\n\n  this.mergeVertices();\n  this.computeFaceNormals();\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius); // Project vector onto sphere's surface\n\n  function prepare(vector) {\n    var vertex = vector.normalize().clone();\n    vertex.index = that.vertices.push(vertex) - 1; // Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n    var u = azimuth(vector) / 2 / Math.PI + 0.5;\n    var v = inclination(vector) / Math.PI + 0.5;\n    vertex.uv = new THREE.Vector2(u, 1 - v);\n    return vertex;\n  } // Approximate a curved face with recursively sub-divided triangles.\n\n\n  function make(v1, v2, v3, materialIndex) {\n    var face = new THREE.Face3(v1.index, v2.index, v3.index, [v1.clone(), v2.clone(), v3.clone()], undefined, materialIndex);\n    that.faces.push(face);\n    centroid.copy(v1).add(v2).add(v3).divideScalar(3);\n    var azi = azimuth(centroid);\n    that.faceVertexUvs[0].push([correctUV(v1.uv, v1, azi), correctUV(v2.uv, v2, azi), correctUV(v3.uv, v3, azi)]);\n  } // Analytically subdivide a face to the required detail level.\n\n\n  function subdivide(face, detail) {\n    var cols = Math.pow(2, detail);\n    var a = prepare(that.vertices[face.a]);\n    var b = prepare(that.vertices[face.b]);\n    var c = prepare(that.vertices[face.c]);\n    var v = [];\n    var materialIndex = face.materialIndex; // Construct all of the vertices for this subdivision.\n\n    for (var i = 0; i <= cols; i++) {\n      v[i] = [];\n      var aj = prepare(a.clone().lerp(c, i / cols));\n      var bj = prepare(b.clone().lerp(c, i / cols));\n      var rows = cols - i;\n\n      for (var j = 0; j <= rows; j++) {\n        if (j === 0 && i === cols) {\n          v[i][j] = aj;\n        } else {\n          v[i][j] = prepare(aj.clone().lerp(bj, j / rows));\n        }\n      }\n    } // Construct all of the faces.\n\n\n    for (var i = 0; i < cols; i++) {\n      for (var j = 0; j < 2 * (cols - i) - 1; j++) {\n        var k = Math.floor(j / 2);\n\n        if (j % 2 === 0) {\n          make(v[i][k + 1], v[i + 1][k], v[i][k], materialIndex);\n        } else {\n          make(v[i][k + 1], v[i + 1][k + 1], v[i + 1][k], materialIndex);\n        }\n      }\n    }\n  } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n  function azimuth(vector) {\n    return Math.atan2(vector.z, -vector.x);\n  } // Angle above the XZ plane.\n\n\n  function inclination(vector) {\n    return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n  } // Texture fixing helper. Spheres have some odd behaviours.\n\n\n  function correctUV(uv, vector, azimuth) {\n    if (azimuth < 0 && uv.x === 1) uv = new THREE.Vector2(uv.x - 1, uv.y);\n    if (vector.x === 0 && vector.z === 0) uv = new THREE.Vector2(azimuth / 2 / Math.PI + 0.5, uv.y);\n    return uv.clone();\n  }\n};\n\nTHREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry; // File:src/extras/geometries/DodecahedronGeometry.js\n\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\n\nTHREE.DodecahedronGeometry = function (radius, detail) {\n  var t = (1 + Math.sqrt(5)) / 2;\n  var r = 1 / t;\n  var vertices = [// (±1, ±1, ±1)\n  -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n  0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n  -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n  -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n  var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'DodecahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.DodecahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry; // File:src/extras/geometries/IcosahedronGeometry.js\n\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\n\nTHREE.IcosahedronGeometry = function (radius, detail) {\n  var t = (1 + Math.sqrt(5)) / 2;\n  var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n  var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'IcosahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.IcosahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry; // File:src/extras/geometries/OctahedronGeometry.js\n\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\n\nTHREE.OctahedronGeometry = function (radius, detail) {\n  var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n  var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'OctahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.OctahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry; // File:src/extras/geometries/TetrahedronGeometry.js\n\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\n\nTHREE.TetrahedronGeometry = function (radius, detail) {\n  var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n  var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'TetrahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.TetrahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry; // File:src/extras/geometries/ParametricGeometry.js\n\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\n\nTHREE.ParametricGeometry = function (func, slices, stacks) {\n  THREE.Geometry.call(this);\n  this.type = 'ParametricGeometry';\n  this.parameters = {\n    func: func,\n    slices: slices,\n    stacks: stacks\n  };\n  var verts = this.vertices;\n  var faces = this.faces;\n  var uvs = this.faceVertexUvs[0];\n  var i, j, p;\n  var u, v;\n  var sliceCount = slices + 1;\n\n  for (i = 0; i <= stacks; i++) {\n    v = i / stacks;\n\n    for (j = 0; j <= slices; j++) {\n      u = j / slices;\n      p = func(u, v);\n      verts.push(p);\n    }\n  }\n\n  var a, b, c, d;\n  var uva, uvb, uvc, uvd;\n\n  for (i = 0; i < stacks; i++) {\n    for (j = 0; j < slices; j++) {\n      a = i * sliceCount + j;\n      b = i * sliceCount + j + 1;\n      c = (i + 1) * sliceCount + j + 1;\n      d = (i + 1) * sliceCount + j;\n      uva = new THREE.Vector2(j / slices, i / stacks);\n      uvb = new THREE.Vector2((j + 1) / slices, i / stacks);\n      uvc = new THREE.Vector2((j + 1) / slices, (i + 1) / stacks);\n      uvd = new THREE.Vector2(j / slices, (i + 1) / stacks);\n      faces.push(new THREE.Face3(a, b, d));\n      uvs.push([uva, uvb, uvd]);\n      faces.push(new THREE.Face3(b, c, d));\n      uvs.push([uvb.clone(), uvc, uvd.clone()]);\n    }\n  } // console.log(this);\n  // magic bullet\n  // var diff = this.mergeVertices();\n  // console.log('removed ', diff, ' vertices by merging');\n\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n};\n\nTHREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry; // File:src/extras/geometries/WireframeGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.WireframeGeometry = function (geometry) {\n  THREE.BufferGeometry.call(this);\n  var edge = [0, 0],\n      hash = {};\n\n  function sortFunction(a, b) {\n    return a - b;\n  }\n\n  var keys = ['a', 'b', 'c'];\n\n  if (geometry instanceof THREE.Geometry) {\n    var vertices = geometry.vertices;\n    var faces = geometry.faces;\n    var numEdges = 0; // allocate maximal size\n\n    var edges = new Uint32Array(6 * faces.length);\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (var j = 0; j < 3; j++) {\n        edge[0] = face[keys[j]];\n        edge[1] = face[keys[(j + 1) % 3]];\n        edge.sort(sortFunction);\n        var key = edge.toString();\n\n        if (hash[key] === undefined) {\n          edges[2 * numEdges] = edge[0];\n          edges[2 * numEdges + 1] = edge[1];\n          hash[key] = true;\n          numEdges++;\n        }\n      }\n    }\n\n    var coords = new Float32Array(numEdges * 2 * 3);\n\n    for (var i = 0, l = numEdges; i < l; i++) {\n      for (var j = 0; j < 2; j++) {\n        var vertex = vertices[edges[2 * i + j]];\n        var index = 6 * i + 3 * j;\n        coords[index + 0] = vertex.x;\n        coords[index + 1] = vertex.y;\n        coords[index + 2] = vertex.z;\n      }\n    }\n\n    this.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n  } else if (geometry instanceof THREE.BufferGeometry) {\n    if (geometry.index !== null) {\n      // Indexed BufferGeometry\n      var indices = geometry.index.array;\n      var vertices = geometry.attributes.position;\n      var groups = geometry.groups;\n      var numEdges = 0;\n\n      if (groups.length === 0) {\n        geometry.addGroup(0, indices.length);\n      } // allocate maximal size\n\n\n      var edges = new Uint32Array(2 * indices.length);\n\n      for (var o = 0, ol = groups.length; o < ol; ++o) {\n        var group = groups[o];\n        var start = group.start;\n        var count = group.count;\n\n        for (var i = start, il = start + count; i < il; i += 3) {\n          for (var j = 0; j < 3; j++) {\n            edge[0] = indices[i + j];\n            edge[1] = indices[i + (j + 1) % 3];\n            edge.sort(sortFunction);\n            var key = edge.toString();\n\n            if (hash[key] === undefined) {\n              edges[2 * numEdges] = edge[0];\n              edges[2 * numEdges + 1] = edge[1];\n              hash[key] = true;\n              numEdges++;\n            }\n          }\n        }\n      }\n\n      var coords = new Float32Array(numEdges * 2 * 3);\n\n      for (var i = 0, l = numEdges; i < l; i++) {\n        for (var j = 0; j < 2; j++) {\n          var index = 6 * i + 3 * j;\n          var index2 = edges[2 * i + j];\n          coords[index + 0] = vertices.getX(index2);\n          coords[index + 1] = vertices.getY(index2);\n          coords[index + 2] = vertices.getZ(index2);\n        }\n      }\n\n      this.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n    } else {\n      // non-indexed BufferGeometry\n      var vertices = geometry.attributes.position.array;\n      var numEdges = vertices.length / 3;\n      var numTris = numEdges / 3;\n      var coords = new Float32Array(numEdges * 2 * 3);\n\n      for (var i = 0, l = numTris; i < l; i++) {\n        for (var j = 0; j < 3; j++) {\n          var index = 18 * i + 6 * j;\n          var index1 = 9 * i + 3 * j;\n          coords[index + 0] = vertices[index1];\n          coords[index + 1] = vertices[index1 + 1];\n          coords[index + 2] = vertices[index1 + 2];\n          var index2 = 9 * i + 3 * ((j + 1) % 3);\n          coords[index + 3] = vertices[index2];\n          coords[index + 4] = vertices[index2 + 1];\n          coords[index + 5] = vertices[index2 + 2];\n        }\n      }\n\n      this.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n    }\n  }\n};\n\nTHREE.WireframeGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry; // File:src/extras/helpers/AxisHelper.js\n\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.AxisHelper = function (size) {\n  size = size || 1;\n  var vertices = new Float32Array([0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size]);\n  var colors = new Float32Array([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1]);\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n  var material = new THREE.LineBasicMaterial({\n    vertexColors: THREE.VertexColors\n  });\n  THREE.LineSegments.call(this, geometry, material);\n};\n\nTHREE.AxisHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper; // File:src/extras/helpers/ArrowHelper.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://clara.io\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\n\nTHREE.ArrowHelper = function () {\n  var lineGeometry = new THREE.BufferGeometry();\n  lineGeometry.addAttribute('position', new THREE.Float32Attribute([0, 0, 0, 0, 1, 0], 3));\n  var coneGeometry = new THREE.CylinderBufferGeometry(0, 0.5, 1, 5, 1);\n  coneGeometry.translate(0, -0.5, 0);\n  return function ArrowHelper(dir, origin, length, color, headLength, headWidth) {\n    // dir is assumed to be normalized\n    THREE.Object3D.call(this);\n    if (color === undefined) color = 0xffff00;\n    if (length === undefined) length = 1;\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n    this.position.copy(origin);\n    this.line = new THREE.Line(lineGeometry, new THREE.LineBasicMaterial({\n      color: color\n    }));\n    this.line.matrixAutoUpdate = false;\n    this.add(this.line);\n    this.cone = new THREE.Mesh(coneGeometry, new THREE.MeshBasicMaterial({\n      color: color\n    }));\n    this.cone.matrixAutoUpdate = false;\n    this.add(this.cone);\n    this.setDirection(dir);\n    this.setLength(length, headLength, headWidth);\n  };\n}();\n\nTHREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\n\nTHREE.ArrowHelper.prototype.setDirection = function () {\n  var axis = new THREE.Vector3();\n  var radians;\n  return function setDirection(dir) {\n    // dir is assumed to be normalized\n    if (dir.y > 0.99999) {\n      this.quaternion.set(0, 0, 0, 1);\n    } else if (dir.y < -0.99999) {\n      this.quaternion.set(1, 0, 0, 0);\n    } else {\n      axis.set(dir.z, 0, -dir.x).normalize();\n      radians = Math.acos(dir.y);\n      this.quaternion.setFromAxisAngle(axis, radians);\n    }\n  };\n}();\n\nTHREE.ArrowHelper.prototype.setLength = function (length, headLength, headWidth) {\n  if (headLength === undefined) headLength = 0.2 * length;\n  if (headWidth === undefined) headWidth = 0.2 * headLength;\n  this.line.scale.set(1, Math.max(0, length - headLength), 1);\n  this.line.updateMatrix();\n  this.cone.scale.set(headWidth, headLength, headWidth);\n  this.cone.position.y = length;\n  this.cone.updateMatrix();\n};\n\nTHREE.ArrowHelper.prototype.setColor = function (color) {\n  this.line.material.color.copy(color);\n  this.cone.material.color.copy(color);\n}; // File:src/extras/helpers/BoxHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.BoxHelper = function (object) {\n  var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n  var positions = new Float32Array(8 * 3);\n  var geometry = new THREE.BufferGeometry();\n  geometry.setIndex(new THREE.BufferAttribute(indices, 1));\n  geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n  THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\n    color: 0xffff00\n  }));\n\n  if (object !== undefined) {\n    this.update(object);\n  }\n};\n\nTHREE.BoxHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\n\nTHREE.BoxHelper.prototype.update = function () {\n  var box = new THREE.Box3();\n  return function (object) {\n    if (object instanceof THREE.Box3) {\n      box.copy(object);\n    } else {\n      box.setFromObject(object);\n    }\n\n    if (box.isEmpty()) return;\n    var min = box.min;\n    var max = box.max;\n    /*\r\n      5____4\r\n    1/___0/|\r\n    | 6__|_7\r\n    2/___3/\r\n    \t\t0: max.x, max.y, max.z\r\n    1: min.x, max.y, max.z\r\n    2: min.x, min.y, max.z\r\n    3: max.x, min.y, max.z\r\n    4: max.x, max.y, min.z\r\n    5: min.x, max.y, min.z\r\n    6: min.x, min.y, min.z\r\n    7: max.x, min.y, min.z\r\n    */\n\n    var position = this.geometry.attributes.position;\n    var array = position.array;\n    array[0] = max.x;\n    array[1] = max.y;\n    array[2] = max.z;\n    array[3] = min.x;\n    array[4] = max.y;\n    array[5] = max.z;\n    array[6] = min.x;\n    array[7] = min.y;\n    array[8] = max.z;\n    array[9] = max.x;\n    array[10] = min.y;\n    array[11] = max.z;\n    array[12] = max.x;\n    array[13] = max.y;\n    array[14] = min.z;\n    array[15] = min.x;\n    array[16] = max.y;\n    array[17] = min.z;\n    array[18] = min.x;\n    array[19] = min.y;\n    array[20] = min.z;\n    array[21] = max.x;\n    array[22] = min.y;\n    array[23] = min.z;\n    position.needsUpdate = true;\n    this.geometry.computeBoundingSphere();\n  };\n}(); // File:src/extras/helpers/BoundingBoxHelper.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n// a helper to show the world-axis-aligned bounding box for an object\n\n\nTHREE.BoundingBoxHelper = function (object, hex) {\n  var color = hex !== undefined ? hex : 0x888888;\n  this.object = object;\n  this.box = new THREE.Box3();\n  THREE.Mesh.call(this, new THREE.BoxGeometry(1, 1, 1), new THREE.MeshBasicMaterial({\n    color: color,\n    wireframe: true\n  }));\n};\n\nTHREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\n\nTHREE.BoundingBoxHelper.prototype.update = function () {\n  this.box.setFromObject(this.object);\n  this.box.size(this.scale);\n  this.box.center(this.position);\n}; // File:src/extras/helpers/CameraHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\n\n\nTHREE.CameraHelper = function (camera) {\n  var geometry = new THREE.Geometry();\n  var material = new THREE.LineBasicMaterial({\n    color: 0xffffff,\n    vertexColors: THREE.FaceColors\n  });\n  var pointMap = {}; // colors\n\n  var hexFrustum = 0xffaa00;\n  var hexCone = 0xff0000;\n  var hexUp = 0x00aaff;\n  var hexTarget = 0xffffff;\n  var hexCross = 0x333333; // near\n\n  addLine(\"n1\", \"n2\", hexFrustum);\n  addLine(\"n2\", \"n4\", hexFrustum);\n  addLine(\"n4\", \"n3\", hexFrustum);\n  addLine(\"n3\", \"n1\", hexFrustum); // far\n\n  addLine(\"f1\", \"f2\", hexFrustum);\n  addLine(\"f2\", \"f4\", hexFrustum);\n  addLine(\"f4\", \"f3\", hexFrustum);\n  addLine(\"f3\", \"f1\", hexFrustum); // sides\n\n  addLine(\"n1\", \"f1\", hexFrustum);\n  addLine(\"n2\", \"f2\", hexFrustum);\n  addLine(\"n3\", \"f3\", hexFrustum);\n  addLine(\"n4\", \"f4\", hexFrustum); // cone\n\n  addLine(\"p\", \"n1\", hexCone);\n  addLine(\"p\", \"n2\", hexCone);\n  addLine(\"p\", \"n3\", hexCone);\n  addLine(\"p\", \"n4\", hexCone); // up\n\n  addLine(\"u1\", \"u2\", hexUp);\n  addLine(\"u2\", \"u3\", hexUp);\n  addLine(\"u3\", \"u1\", hexUp); // target\n\n  addLine(\"c\", \"t\", hexTarget);\n  addLine(\"p\", \"c\", hexCross); // cross\n\n  addLine(\"cn1\", \"cn2\", hexCross);\n  addLine(\"cn3\", \"cn4\", hexCross);\n  addLine(\"cf1\", \"cf2\", hexCross);\n  addLine(\"cf3\", \"cf4\", hexCross);\n\n  function addLine(a, b, hex) {\n    addPoint(a, hex);\n    addPoint(b, hex);\n  }\n\n  function addPoint(id, hex) {\n    geometry.vertices.push(new THREE.Vector3());\n    geometry.colors.push(new THREE.Color(hex));\n\n    if (pointMap[id] === undefined) {\n      pointMap[id] = [];\n    }\n\n    pointMap[id].push(geometry.vertices.length - 1);\n  }\n\n  THREE.LineSegments.call(this, geometry, material);\n  this.camera = camera;\n  this.camera.updateProjectionMatrix();\n  this.matrix = camera.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.pointMap = pointMap;\n  this.update();\n};\n\nTHREE.CameraHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\n\nTHREE.CameraHelper.prototype.update = function () {\n  var geometry, pointMap;\n  var vector = new THREE.Vector3();\n  var camera = new THREE.Camera();\n\n  function setPoint(point, x, y, z) {\n    vector.set(x, y, z).unproject(camera);\n    var points = pointMap[point];\n\n    if (points !== undefined) {\n      for (var i = 0, il = points.length; i < il; i++) {\n        geometry.vertices[points[i]].copy(vector);\n      }\n    }\n  }\n\n  return function () {\n    geometry = this.geometry;\n    pointMap = this.pointMap;\n    var w = 1,\n        h = 1; // we need just camera projection matrix\n    // world matrix must be identity\n\n    camera.projectionMatrix.copy(this.camera.projectionMatrix); // center / target\n\n    setPoint(\"c\", 0, 0, -1);\n    setPoint(\"t\", 0, 0, 1); // near\n\n    setPoint(\"n1\", -w, -h, -1);\n    setPoint(\"n2\", w, -h, -1);\n    setPoint(\"n3\", -w, h, -1);\n    setPoint(\"n4\", w, h, -1); // far\n\n    setPoint(\"f1\", -w, -h, 1);\n    setPoint(\"f2\", w, -h, 1);\n    setPoint(\"f3\", -w, h, 1);\n    setPoint(\"f4\", w, h, 1); // up\n\n    setPoint(\"u1\", w * 0.7, h * 1.1, -1);\n    setPoint(\"u2\", -w * 0.7, h * 1.1, -1);\n    setPoint(\"u3\", 0, h * 2, -1); // cross\n\n    setPoint(\"cf1\", -w, 0, 1);\n    setPoint(\"cf2\", w, 0, 1);\n    setPoint(\"cf3\", 0, -h, 1);\n    setPoint(\"cf4\", 0, h, 1);\n    setPoint(\"cn1\", -w, 0, -1);\n    setPoint(\"cn2\", w, 0, -1);\n    setPoint(\"cn3\", 0, -h, -1);\n    setPoint(\"cn4\", 0, h, -1);\n    geometry.verticesNeedUpdate = true;\n  };\n}(); // File:src/extras/helpers/DirectionalLightHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\n\nTHREE.DirectionalLightHelper = function (light, size) {\n  THREE.Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  if (size === undefined) size = 1;\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.Float32Attribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n  var material = new THREE.LineBasicMaterial({\n    fog: false\n  });\n  this.add(new THREE.Line(geometry, material));\n  geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.Float32Attribute([0, 0, 0, 0, 0, 1], 3));\n  this.add(new THREE.Line(geometry, material));\n  this.update();\n};\n\nTHREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\n\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\n  var lightPlane = this.children[0];\n  var targetLine = this.children[1];\n  lightPlane.geometry.dispose();\n  lightPlane.material.dispose();\n  targetLine.geometry.dispose();\n  targetLine.material.dispose();\n};\n\nTHREE.DirectionalLightHelper.prototype.update = function () {\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  var v3 = new THREE.Vector3();\n  return function () {\n    v1.setFromMatrixPosition(this.light.matrixWorld);\n    v2.setFromMatrixPosition(this.light.target.matrixWorld);\n    v3.subVectors(v2, v1);\n    var lightPlane = this.children[0];\n    var targetLine = this.children[1];\n    lightPlane.lookAt(v3);\n    lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    targetLine.lookAt(v3);\n    targetLine.scale.z = v3.length();\n  };\n}(); // File:src/extras/helpers/EdgesHelper.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\n\n\nTHREE.EdgesHelper = function (object, hex, thresholdAngle) {\n  var color = hex !== undefined ? hex : 0xffffff;\n  THREE.LineSegments.call(this, new THREE.EdgesGeometry(object.geometry, thresholdAngle), new THREE.LineBasicMaterial({\n    color: color\n  }));\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n};\n\nTHREE.EdgesHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper; // File:src/extras/helpers/FaceNormalsHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\nTHREE.FaceNormalsHelper = function (object, size, hex, linewidth) {\n  // FaceNormalsHelper only supports THREE.Geometry\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0xffff00;\n  var width = linewidth !== undefined ? linewidth : 1; //\n\n  var nNormals = 0;\n  var objGeometry = this.object.geometry;\n\n  if (objGeometry instanceof THREE.Geometry) {\n    nNormals = objGeometry.faces.length;\n  } else {\n    console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');\n  } //\n\n\n  var geometry = new THREE.BufferGeometry();\n  var positions = new THREE.Float32Attribute(nNormals * 2 * 3, 3);\n  geometry.addAttribute('position', positions);\n  THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\n    color: color,\n    linewidth: width\n  })); //\n\n  this.matrixAutoUpdate = false;\n  this.update();\n};\n\nTHREE.FaceNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\n\nTHREE.FaceNormalsHelper.prototype.update = function () {\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  var normalMatrix = new THREE.Matrix3();\n  return function update() {\n    this.object.updateMatrixWorld(true);\n    normalMatrix.getNormalMatrix(this.object.matrixWorld);\n    var matrixWorld = this.object.matrixWorld;\n    var position = this.geometry.attributes.position; //\n\n    var objGeometry = this.object.geometry;\n    var vertices = objGeometry.vertices;\n    var faces = objGeometry.faces;\n    var idx = 0;\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n      var normal = face.normal;\n      v1.copy(vertices[face.a]).add(vertices[face.b]).add(vertices[face.c]).divideScalar(3).applyMatrix4(matrixWorld);\n      v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n      position.setXYZ(idx, v1.x, v1.y, v1.z);\n      idx = idx + 1;\n      position.setXYZ(idx, v2.x, v2.y, v2.z);\n      idx = idx + 1;\n    }\n\n    position.needsUpdate = true;\n    return this;\n  };\n}(); // File:src/extras/helpers/GridHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.GridHelper = function (size, step, color1, color2) {\n  color1 = new THREE.Color(color1 !== undefined ? color1 : 0x444444);\n  color2 = new THREE.Color(color2 !== undefined ? color2 : 0x888888);\n  var vertices = [];\n  var colors = [];\n\n  for (var i = -size, j = 0; i <= size; i += step) {\n    vertices.push(-size, 0, i, size, 0, i);\n    vertices.push(i, 0, -size, i, 0, size);\n    var color = i === 0 ? color1 : color2;\n    color.toArray(colors, j);\n    j += 3;\n    color.toArray(colors, j);\n    j += 3;\n    color.toArray(colors, j);\n    j += 3;\n    color.toArray(colors, j);\n    j += 3;\n  }\n\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.Float32Attribute(vertices, 3));\n  geometry.addAttribute('color', new THREE.Float32Attribute(colors, 3));\n  var material = new THREE.LineBasicMaterial({\n    vertexColors: THREE.VertexColors\n  });\n  THREE.LineSegments.call(this, geometry, material);\n};\n\nTHREE.GridHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\n\nTHREE.GridHelper.prototype.setColors = function () {\n  console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n}; // File:src/extras/helpers/HemisphereLightHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.HemisphereLightHelper = function (light, sphereSize) {\n  THREE.Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.colors = [new THREE.Color(), new THREE.Color()];\n  var geometry = new THREE.SphereGeometry(sphereSize, 4, 2);\n  geometry.rotateX(-Math.PI / 2);\n\n  for (var i = 0, il = 8; i < il; i++) {\n    geometry.faces[i].color = this.colors[i < 4 ? 0 : 1];\n  }\n\n  var material = new THREE.MeshBasicMaterial({\n    vertexColors: THREE.FaceColors,\n    wireframe: true\n  });\n  this.lightSphere = new THREE.Mesh(geometry, material);\n  this.add(this.lightSphere);\n  this.update();\n};\n\nTHREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\n\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\n  this.lightSphere.geometry.dispose();\n  this.lightSphere.material.dispose();\n};\n\nTHREE.HemisphereLightHelper.prototype.update = function () {\n  var vector = new THREE.Vector3();\n  return function () {\n    this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);\n    this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);\n    this.lightSphere.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n    this.lightSphere.geometry.colorsNeedUpdate = true;\n  };\n}(); // File:src/extras/helpers/PointLightHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.PointLightHelper = function (light, sphereSize) {\n  this.light = light;\n  this.light.updateMatrixWorld();\n  var geometry = new THREE.SphereBufferGeometry(sphereSize, 4, 2);\n  var material = new THREE.MeshBasicMaterial({\n    wireframe: true,\n    fog: false\n  });\n  material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  THREE.Mesh.call(this, geometry, material);\n  this.matrix = this.light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  /*\r\n  var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n  var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n  \n  this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n  this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n  \n  var d = light.distance;\r\n  \n  if ( d === 0.0 ) {\r\n  \n  \tthis.lightDistance.visible = false;\r\n  \n  } else {\r\n  \n  \tthis.lightDistance.scale.set( d, d, d );\r\n  \n  }\r\n  \n  this.add( this.lightDistance );\r\n  */\n};\n\nTHREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\n\nTHREE.PointLightHelper.prototype.dispose = function () {\n  this.geometry.dispose();\n  this.material.dispose();\n};\n\nTHREE.PointLightHelper.prototype.update = function () {\n  this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  /*\r\n  var d = this.light.distance;\r\n  \n  if ( d === 0.0 ) {\r\n  \n  \tthis.lightDistance.visible = false;\r\n  \n  } else {\r\n  \n  \tthis.lightDistance.visible = true;\r\n  \tthis.lightDistance.scale.set( d, d, d );\r\n  \n  }\r\n  */\n}; // File:src/extras/helpers/SkeletonHelper.js\n\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\n\n\nTHREE.SkeletonHelper = function (object) {\n  this.bones = this.getBoneList(object);\n  var geometry = new THREE.Geometry();\n\n  for (var i = 0; i < this.bones.length; i++) {\n    var bone = this.bones[i];\n\n    if (bone.parent instanceof THREE.Bone) {\n      geometry.vertices.push(new THREE.Vector3());\n      geometry.vertices.push(new THREE.Vector3());\n      geometry.colors.push(new THREE.Color(0, 0, 1));\n      geometry.colors.push(new THREE.Color(0, 1, 0));\n    }\n  }\n\n  geometry.dynamic = true;\n  var material = new THREE.LineBasicMaterial({\n    vertexColors: THREE.VertexColors,\n    depthTest: false,\n    depthWrite: false,\n    transparent: true\n  });\n  THREE.LineSegments.call(this, geometry, material);\n  this.root = object;\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.update();\n};\n\nTHREE.SkeletonHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\n\nTHREE.SkeletonHelper.prototype.getBoneList = function (object) {\n  var boneList = [];\n\n  if (object instanceof THREE.Bone) {\n    boneList.push(object);\n  }\n\n  for (var i = 0; i < object.children.length; i++) {\n    boneList.push.apply(boneList, this.getBoneList(object.children[i]));\n  }\n\n  return boneList;\n};\n\nTHREE.SkeletonHelper.prototype.update = function () {\n  var geometry = this.geometry;\n  var matrixWorldInv = new THREE.Matrix4().getInverse(this.root.matrixWorld);\n  var boneMatrix = new THREE.Matrix4();\n  var j = 0;\n\n  for (var i = 0; i < this.bones.length; i++) {\n    var bone = this.bones[i];\n\n    if (bone.parent instanceof THREE.Bone) {\n      boneMatrix.multiplyMatrices(matrixWorldInv, bone.matrixWorld);\n      geometry.vertices[j].setFromMatrixPosition(boneMatrix);\n      boneMatrix.multiplyMatrices(matrixWorldInv, bone.parent.matrixWorld);\n      geometry.vertices[j + 1].setFromMatrixPosition(boneMatrix);\n      j += 2;\n    }\n  }\n\n  geometry.verticesNeedUpdate = true;\n  geometry.computeBoundingSphere();\n}; // File:src/extras/helpers/SpotLightHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\n\nTHREE.SpotLightHelper = function (light) {\n  THREE.Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  var geometry = new THREE.BufferGeometry();\n  var positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n  for (var i = 0, j = 1, l = 32; i < l; i++, j++) {\n    var p1 = i / l * Math.PI * 2;\n    var p2 = j / l * Math.PI * 2;\n    positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n  }\n\n  geometry.addAttribute('position', new THREE.Float32Attribute(positions, 3));\n  var material = new THREE.LineBasicMaterial({\n    fog: false\n  });\n  this.cone = new THREE.LineSegments(geometry, material);\n  this.add(this.cone);\n  this.update();\n};\n\nTHREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\n\nTHREE.SpotLightHelper.prototype.dispose = function () {\n  this.cone.geometry.dispose();\n  this.cone.material.dispose();\n};\n\nTHREE.SpotLightHelper.prototype.update = function () {\n  var vector = new THREE.Vector3();\n  var vector2 = new THREE.Vector3();\n  return function () {\n    var coneLength = this.light.distance ? this.light.distance : 1000;\n    var coneWidth = coneLength * Math.tan(this.light.angle);\n    this.cone.scale.set(coneWidth, coneWidth, coneLength);\n    vector.setFromMatrixPosition(this.light.matrixWorld);\n    vector2.setFromMatrixPosition(this.light.target.matrixWorld);\n    this.cone.lookAt(vector2.sub(vector));\n    this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  };\n}(); // File:src/extras/helpers/VertexNormalsHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\n\nTHREE.VertexNormalsHelper = function (object, size, hex, linewidth) {\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0xff0000;\n  var width = linewidth !== undefined ? linewidth : 1; //\n\n  var nNormals = 0;\n  var objGeometry = this.object.geometry;\n\n  if (objGeometry instanceof THREE.Geometry) {\n    nNormals = objGeometry.faces.length * 3;\n  } else if (objGeometry instanceof THREE.BufferGeometry) {\n    nNormals = objGeometry.attributes.normal.count;\n  } //\n\n\n  var geometry = new THREE.BufferGeometry();\n  var positions = new THREE.Float32Attribute(nNormals * 2 * 3, 3);\n  geometry.addAttribute('position', positions);\n  THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\n    color: color,\n    linewidth: width\n  })); //\n\n  this.matrixAutoUpdate = false;\n  this.update();\n};\n\nTHREE.VertexNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\n\nTHREE.VertexNormalsHelper.prototype.update = function () {\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  var normalMatrix = new THREE.Matrix3();\n  return function update() {\n    var keys = ['a', 'b', 'c'];\n    this.object.updateMatrixWorld(true);\n    normalMatrix.getNormalMatrix(this.object.matrixWorld);\n    var matrixWorld = this.object.matrixWorld;\n    var position = this.geometry.attributes.position; //\n\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry instanceof THREE.Geometry) {\n      var vertices = objGeometry.vertices;\n      var faces = objGeometry.faces;\n      var idx = 0;\n\n      for (var i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n\n        for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n          var vertex = vertices[face[keys[j]]];\n          var normal = face.vertexNormals[j];\n          v1.copy(vertex).applyMatrix4(matrixWorld);\n          v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n          position.setXYZ(idx, v1.x, v1.y, v1.z);\n          idx = idx + 1;\n          position.setXYZ(idx, v2.x, v2.y, v2.z);\n          idx = idx + 1;\n        }\n      }\n    } else if (objGeometry instanceof THREE.BufferGeometry) {\n      var objPos = objGeometry.attributes.position;\n      var objNorm = objGeometry.attributes.normal;\n      var idx = 0; // for simplicity, ignore index and drawcalls, and render every normal\n\n      for (var j = 0, jl = objPos.count; j < jl; j++) {\n        v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n        v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n        v2.applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n        position.setXYZ(idx, v1.x, v1.y, v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, v2.x, v2.y, v2.z);\n        idx = idx + 1;\n      }\n    }\n\n    position.needsUpdate = true;\n    return this;\n  };\n}(); // File:src/extras/helpers/WireframeHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.WireframeHelper = function (object, hex) {\n  var color = hex !== undefined ? hex : 0xffffff;\n  THREE.LineSegments.call(this, new THREE.WireframeGeometry(object.geometry), new THREE.LineBasicMaterial({\n    color: color\n  }));\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n};\n\nTHREE.WireframeHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper; // File:src/extras/objects/ImmediateRenderObject.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.ImmediateRenderObject = function (material) {\n  THREE.Object3D.call(this);\n  this.material = material;\n\n  this.render = function (renderCallback) {};\n};\n\nTHREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject; // File:src/extras/objects/MorphBlendMesh.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.MorphBlendMesh = function (geometry, material) {\n  THREE.Mesh.call(this, geometry, material);\n  this.animationsMap = {};\n  this.animationsList = []; // prepare default animation\n  // (all frames played together in 1 second)\n\n  var numFrames = this.geometry.morphTargets.length;\n  var name = \"__default\";\n  var startFrame = 0;\n  var endFrame = numFrames - 1;\n  var fps = numFrames / 1;\n  this.createAnimation(name, startFrame, endFrame, fps);\n  this.setAnimationWeight(name, 1);\n};\n\nTHREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\n\nTHREE.MorphBlendMesh.prototype.createAnimation = function (name, start, end, fps) {\n  var animation = {\n    start: start,\n    end: end,\n    length: end - start + 1,\n    fps: fps,\n    duration: (end - start) / fps,\n    lastFrame: 0,\n    currentFrame: 0,\n    active: false,\n    time: 0,\n    direction: 1,\n    weight: 1,\n    directionBackwards: false,\n    mirroredLoop: false\n  };\n  this.animationsMap[name] = animation;\n  this.animationsList.push(animation);\n};\n\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function (fps) {\n  var pattern = /([a-z]+)_?(\\d+)/i;\n  var firstAnimation,\n      frameRanges = {};\n  var geometry = this.geometry;\n\n  for (var i = 0, il = geometry.morphTargets.length; i < il; i++) {\n    var morph = geometry.morphTargets[i];\n    var chunks = morph.name.match(pattern);\n\n    if (chunks && chunks.length > 1) {\n      var name = chunks[1];\n      if (!frameRanges[name]) frameRanges[name] = {\n        start: Infinity,\n        end: -Infinity\n      };\n      var range = frameRanges[name];\n      if (i < range.start) range.start = i;\n      if (i > range.end) range.end = i;\n      if (!firstAnimation) firstAnimation = name;\n    }\n  }\n\n  for (var name in frameRanges) {\n    var range = frameRanges[name];\n    this.createAnimation(name, range.start, range.end, fps);\n  }\n\n  this.firstAnimation = firstAnimation;\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.direction = 1;\n    animation.directionBackwards = false;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.direction = -1;\n    animation.directionBackwards = true;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function (name, fps) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.fps = fps;\n    animation.duration = (animation.end - animation.start) / animation.fps;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function (name, duration) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.duration = duration;\n    animation.fps = (animation.end - animation.start) / animation.duration;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function (name, weight) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.weight = weight;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function (name, time) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.time = time;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function (name) {\n  var time = 0;\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    time = animation.time;\n  }\n\n  return time;\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function (name) {\n  var duration = -1;\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    duration = animation.duration;\n  }\n\n  return duration;\n};\n\nTHREE.MorphBlendMesh.prototype.playAnimation = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.time = 0;\n    animation.active = true;\n  } else {\n    console.warn(\"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\");\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.stopAnimation = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.active = false;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.update = function (delta) {\n  for (var i = 0, il = this.animationsList.length; i < il; i++) {\n    var animation = this.animationsList[i];\n    if (!animation.active) continue;\n    var frameTime = animation.duration / animation.length;\n    animation.time += animation.direction * delta;\n\n    if (animation.mirroredLoop) {\n      if (animation.time > animation.duration || animation.time < 0) {\n        animation.direction *= -1;\n\n        if (animation.time > animation.duration) {\n          animation.time = animation.duration;\n          animation.directionBackwards = true;\n        }\n\n        if (animation.time < 0) {\n          animation.time = 0;\n          animation.directionBackwards = false;\n        }\n      }\n    } else {\n      animation.time = animation.time % animation.duration;\n      if (animation.time < 0) animation.time += animation.duration;\n    }\n\n    var keyframe = animation.start + THREE.Math.clamp(Math.floor(animation.time / frameTime), 0, animation.length - 1);\n    var weight = animation.weight;\n\n    if (keyframe !== animation.currentFrame) {\n      this.morphTargetInfluences[animation.lastFrame] = 0;\n      this.morphTargetInfluences[animation.currentFrame] = 1 * weight;\n      this.morphTargetInfluences[keyframe] = 0;\n      animation.lastFrame = animation.currentFrame;\n      animation.currentFrame = keyframe;\n    }\n\n    var mix = animation.time % frameTime / frameTime;\n    if (animation.directionBackwards) mix = 1 - mix;\n\n    if (animation.currentFrame !== animation.lastFrame) {\n      this.morphTargetInfluences[animation.currentFrame] = mix * weight;\n      this.morphTargetInfluences[animation.lastFrame] = (1 - mix) * weight;\n    } else {\n      this.morphTargetInfluences[animation.currentFrame] = weight;\n    }\n  }\n}; // Export the THREE object for **Node.js**, with\n// backwards-compatibility for the old `require()` API. If we're in\n// the browser, add `_` as a global object via a string identifier,\n// for Closure Compiler \"advanced\" mode.\n\n\nif (typeof exports !== 'undefined') {\n  if (typeof module !== 'undefined' && module.exports) {\n    exports = module.exports = THREE;\n  }\n\n  exports.THREE = THREE;\n} else {\n  this['THREE'] = THREE;\n}","map":{"version":3,"sources":["/Users/jackbocresion/node_modules/three/three.js"],"names":["self","THREE","REVISION","define","amd","exports","module","Number","EPSILON","undefined","Math","pow","sign","x","Function","prototype","name","Object","defineProperty","get","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","Color","r","g","b","set","setRGB","constructor","value","copy","setHex","setStyle","setScalar","scalar","hex","floor","setHSL","hue2rgb","p","q","t","h","s","l","euclideanModulo","clamp","style","handleAlpha","string","parseFloat","console","warn","m","exec","color","components","min","parseInt","size","charAt","ColorKeywords","clone","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","sqrt","getHex","getHexString","slice","getHSL","optionalTarget","hsl","max","hue","saturation","lightness","delta","getStyle","offsetHSL","add","addColors","color1","color2","addScalar","multiply","multiplyScalar","lerp","alpha","equals","c","fromArray","array","offset","toArray","Quaternion","y","z","w","_x","_y","_z","_w","onChangeCallback","quaternion","setFromEuler","euler","update","Euler","Error","c1","cos","c2","c3","s1","sin","s2","s3","order","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","v1","EPS","vFrom","vTo","Vector3","dot","abs","crossVectors","normalize","inverse","conjugate","v","lengthSq","multiplyQuaternions","premultiply","a","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","slerp","qb","cosHalfTheta","sinHalfTheta","halfTheta","atan2","ratioA","ratioB","onChange","callback","qa","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","f","Vector2","width","height","setX","setY","setComponent","getComponent","addVectors","addScaledVector","sub","subVectors","subScalar","isFinite","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","round","roundToZero","negate","lengthManhattan","PI","distanceTo","distanceToSquared","dx","dy","setLength","lerpVectors","v2","fromAttribute","attribute","itemSize","rotateAround","center","setZ","multiplyVectors","applyEuler","error","applyQuaternion","applyAxisAngle","applyMatrix3","e","applyMatrix4","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","project","matrix","camera","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromMatrixPosition","setFromMatrixColumn","setFromMatrixScale","sx","sy","sz","temp","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","start","end","line","result","distanceSq","distance","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","Infinity","setFromPoints","points","makeEmpty","i","il","expandByPoint","setFromCenterAndSize","halfSize","box","isEmpty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromObject","object","scope","updateMatrixWorld","traverse","node","geometry","Geometry","vertices","BufferGeometry","attributes","positions","intersectsSphere","closestPoint","sphere","intersectsPlane","plane","constant","getBoundingSphere","Sphere","Matrix3","Float32Array","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","me","setFromMatrix4","applyToVector3Array","j","applyToBuffer","buffer","getX","getY","getZ","setXYZ","determinant","throwOnDegenerate","t11","t12","t13","det","msg","detInv","transpose","tmp","flattenToArrayOffset","getNormalMatrix","matrix4","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","x2","y2","z2","wx","wy","wz","lookAt","eye","up","n","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","getPosition","setPosition","t14","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","position","decompose","invSX","invSY","invSZ","makeFrustum","left","right","bottom","top","near","far","makePerspective","fov","aspect","ymax","tan","DEG2RAD","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","v0","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","b1","s0","sqrDist","extDet","invDet","intersectSphere","tca","d2","radius2","thc","t0","t1","distanceToPlane","denominator","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","referencePoint","normalMatrix","Spherical","other","makeSafe","vec3","RAD2DEG","generateUUID","chars","split","uuid","Array","rnd","random","join","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","nearestPowerOfTwo","log","LN2","nextPowerOfTwo","Spline","v3","intPoint","weight","w2","w3","pa","pb","pc","pd","initFromArray","getPoint","k","interpolate","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","push","t2","t3","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","edgeList","projectedPoint","minDistance","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","values","stride","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","create","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","DiscreteInterpolant","LinearInterpolant","offset1","offset0","weight1","weight0","QuaternionLinearInterpolant","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","Date","now","stop","getElapsedTime","getDelta","newTime","EventDispatcher","addEventListener","type","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","Layers","mask","channel","enable","toggle","disable","test","layers","Raycaster","params","Mesh","Line","LOD","Points","threshold","Sprite","defineProperties","PointCloud","ascSort","intersectObject","raycaster","intersects","recursive","visible","raycast","children","linePrecision","setFromCamera","PerspectiveCamera","OrthographicCamera","sort","intersectObjects","objects","isArray","Object3D","Object3DIdCount","parent","DefaultUp","rotation","onRotationChange","onQuaternionChange","enumerable","modelViewMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","meta","isRootObject","geometries","materials","textures","images","metadata","version","generator","JSON","stringify","material","extractFromCache","cache","key","data","parse","Face3","materialIndex","vertexNormals","vertexColors","BufferAttribute","normalized","dynamic","updateRange","count","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","GeometryIdCount","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","face","jl","computeBoundingBox","obj","fromBufferGeometry","normals","uvs","uv","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","dupIndex","idx","sortFacesByMaterialIndex","_id","materialIndexSort","newUvs1","newUvs2","parameters","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","uvsCopy","kl","dispose","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","isNaN","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Uniform","onUpdate","onUpdateCallback","AnimationAction","_new","mixer","clip","localRoot","_mixer","_clip","_localRoot","tracks","nTracks","interpolants","interpolantSettings","interpolant","createInterpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","_loopCount","_startTime","time","timeScale","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","play","_activateAction","_deactivateAction","reset","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setLoop","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","duration","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","times","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","accuIndex","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","accumulate","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationClip","resetDuration","trim","optimize","track","json","jsonTracks","frameTime","fps","KeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","AnimationUtils","getKeyframeOrder","sortedArray","NumberKeyframeTrack","findByName","objectOrClipArray","clipArray","o","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","animation","bones","nodeName","addNonemptyTrack","trackType","trackName","animationKeys","propertyName","destTracks","flattenJSON","clipName","hierarchyTracks","hierarchy","keys","morphTargetNames","morphTargetName","animationKey","boneName","VectorKeyframeTrack","QuaternionKeyframeTrack","AnimationMixer","root","_initMemoryManager","_accuIndex","clipAction","optionalRoot","rootUuid","clipObject","clipUuid","actionsForClip","_actionsByClip","prototypeAction","existingAction","actionByRoot","knownActions","newAction","_Action","_bindAction","_addInactiveAction","stopAllAction","actions","_actions","nActions","_nActiveActions","bindings","_bindings","nBindings","_nActiveBindings","useCount","apply","uncacheClip","actionsByClip","actionsToRemove","cacheIndex","lastInactiveAction","pop","_removeInactiveBindingsForAction","uncacheRoot","_removeInactiveAction","bindingsByRoot","_bindingsByRootAndName","bindingByName","binding","restoreOriginalState","_removeInactiveBinding","uncacheAction","bindingsByName","referenceCount","_addInactiveBinding","path","parsedPath","PropertyMixer","PropertyBinding","ValueTypeName","getValueSize","_lendBinding","saveOriginalState","_lendAction","_takeBackBinding","_takeBackAction","_controlInterpolants","_nActiveControlInterpolants","stats","inUse","controlInterpolants","knownActionsForClip","lastKnownAction","byClipCacheIndex","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","propBinding","rootNode","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","AnimationObjectGroup","var_args","_objects","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","paths","parsedPaths","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastIndex","lastObject","last","subscribe_","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","arraySlice","from","to","isTypedArray","subarray","convertArray","forceClone","BYTES_PER_ELEMENT","ArrayBuffer","isView","DataView","compareTime","nValues","srcOffset","jsonKeys","valuePropertyName","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","message","getInterpolation","shift","timeOffset","endTime","nKeys","valid","prevTime","currTime","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","_getTrackTypeForValueTypeName","typeName","toLowerCase","ColorKeyframeTrack","BooleanKeyframeTrack","StringKeyframeTrack","parseTrackName","findNode","getValue","getValue_unbound","targetArray","bind","setValue","sourceArray","targetObject","objectName","propertyIndex","_getValue_unavailable","_setValue_unavailable","objectIndex","skeleton","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","resolvedProperty","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","_getValue_unbound","_setValue_unbound","getValue_direct","getValue_array","getValue_arrayElement","getValue_toArray","setValue_direct","setValue_direct_setNeedsUpdate","setValue_direct_setMatrixWorldNeedsUpdate","setValue_array","dest","setValue_array_setNeedsUpdate","setValue_array_setMatrixWorldNeedsUpdate","setValue_arrayElement","setValue_arrayElement_setNeedsUpdate","setValue_arrayElement_setMatrixWorldNeedsUpdate","setValue_fromArray","setValue_fromArray_setNeedsUpdate","setValue_fromArray_setMatrixWorldNeedsUpdate","Composite","targetGroup","optionalParsedPath","_targetGroup","firstValidIndex","re","matches","results","searchSkeleton","bone","searchNodeSubtree","childNode","subTreeNode","bufferType","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","currentWeight","mix","originalValueOffset","Audio","context","createBufferSource","onended","onEnded","gain","createGain","connect","getInput","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","audioNode","setBuffer","audioBuffer","pause","currentTime","disconnect","getFilters","setFilters","getFilter","setFilter","filter","setPlaybackRate","getPlaybackRate","getLoop","getVolume","setVolume","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","window","AudioContext","webkitAudioContext","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","AudioListener","destination","removeFilter","getMasterVolume","setMasterVolume","orientation","setOrientation","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","options","format","magFilter","minFilter","renderTarget","WebGLRenderTargetCube","updateCubeMap","renderer","scene","generateMipmaps","texture","activeCubeFace","render","setRenderTarget","zoom","updateProjectionMatrix","cx","cy","focus","view","filmGauge","filmOffset","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","StereoCamera","cameraL","cameraR","eyeRight","eyeLeft","eyeSep","eyeSepOnProjection","Light","intensity","groundColor","decay","penumbra","LightShadow","bias","mapSize","map","AmbientLight","DirectionalLight","shadow","DirectionalLightShadow","light","HemisphereLight","skyColor","PointLight","power","SpotLight","SpotLightShadow","AudioLoader","manager","DefaultLoadingManager","load","url","onLoad","onProgress","onError","loader","XHRLoader","setResponseType","decodeAudioData","Cache","files","file","clear","Loader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","extractUrlBase","initMaterials","texturePath","createMaterial","textureLoader","materialLoader","TextureLoader","MaterialLoader","loadTexture","repeat","wrap","anisotropy","fullPath","Handlers","setCrossOrigin","wrapS","wrapT","blending","specular","emissive","shininess","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","lightMap","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","aoMap","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","bumpMap","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","bumpScale","normalMap","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","normalScale","specularMap","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","alphaMap","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","side","opacity","transparent","setTextures","handlers","regex","cached","setTimeout","request","XMLHttpRequest","overrideMimeType","open","response","status","itemEnd","itemError","responseType","withCredentials","send","itemStart","setPath","setWithCredentials","FontLoader","text","substring","font","Font","ImageLoader","image","document","createElement","src","JSONLoader","statusDomElement","_statusDomElement","setTexturePath","parseModel","parseSkin","parseMorphing","parseAnimations","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","influencesPerVertex","dstVertices","srcVertices","morphColors","outputAnimations","concat","morphAnimationClips","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","TYPED_ARRAYS","typedArray","drawcalls","offsets","getTexture","roughness","metalness","uniforms","vertexShader","fragmentShader","shading","alphaTest","depthTest","depthWrite","colorWrite","wireframe","wireframeLinewidth","sizeAttenuation","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","emissiveIntensity","envMap","combine","reflectivity","lightMapIntensity","aoMapIntensity","ObjectLoader","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","depth","depthSegments","segments","thetaStart","thetaLength","radiusTop","radiusBottom","radialSegments","openEnded","phiStart","phiLength","detail","innerRadius","outerRadius","thetaSegments","phiSegments","tube","tubularSegments","arc","loadImage","parseConstant","Texture","mapping","getGeometry","getMaterial","Scene","SkinnedMesh","Group","levels","level","addLevel","CubeTextureLoader","urls","CubeTexture","loaded","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","texDatas","isCubemap","Material","MaterialIdCount","fog","lights","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","clippingPlanes","clipShadows","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","premultipliedAlpha","overdraw","_needsUpdate","setValues","newValue","currentValue","isRoot","srcPlanes","dstPlanes","LineBasicMaterial","linewidth","linecap","linejoin","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","MeshDepthMaterial","depthPacking","MeshLambertMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshStandardMaterial","defines","envMapIntensity","MeshPhysicalMaterial","MultiMaterial","PointsMaterial","ShaderMaterial","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","ShadowMaterial","UniformsLib","ShaderChunk","encoding","TextureIdCount","sourceFile","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","getDataURL","canvas","toDataURL","getContext","drawImage","transformUv","DepthTexture","CanvasTexture","VideoTexture","video","requestAnimationFrame","readyState","HAVE_CURRENT_DATA","inverseMatrix","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","faceIndex","nbVertices","drawMode","updateMorphTargets","setDrawMode","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","checkBufferGeometryIntersection","intersection","fvA","fvB","fvC","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","offsetMatrix","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","sw","vec","skinWeight","getObjectForDistance","matrixPosition","guessSizeSq","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","merged","uniforms_src","uniforms_dst","parameter_src","common","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","properties","ShaderLib","WebGLRenderer","_canvas","_context","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","opaqueObjects","opaqueObjectsLastIndex","transparentObjects","transparentObjectsLastIndex","sprites","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","localClippingEnabled","gammaInput","gammaOutput","physicallyCorrectLights","toneMapping","toneMappingExposure","toneMappingWhitePoint","maxMorphTargets","maxMorphNormals","autoScaleCubemaps","_this","_currentProgram","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentScissor","_currentScissorTest","_currentViewport","_usedTextureUnits","_clearColor","_clearAlpha","_width","_height","_pixelRatio","_scissor","_scissorTest","_viewport","_frustum","_clipping","WebGLClipping","_clippingEnabled","_localClippingEnabled","_sphere","_projScreenMatrix","_vector3","_lights","ambient","directional","directionalShadowMap","directionalShadowMatrix","spot","spotShadowMap","spotShadowMatrix","pointShadowMap","pointShadowMatrix","hemi","shadows","_infoMemory","_infoRender","calls","info","memory","programs","_gl","getShaderPrecisionFormat","onContextLost","_isWebGL2","WebGL2RenderingContext","WebGLExtensions","capabilities","WebGLCapabilities","state","WebGLState","paramThreeToGL","WebGLProperties","WebGLObjects","programCache","WebGLPrograms","lightCache","WebGLLights","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","getTargetPixelRatio","glClearColor","clearColor","setDefaultGLState","init","scissor","viewport","resetGLState","shadowMap","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","getMaxAnisotropy","extension","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","setSize","getSize","updateStyle","setViewport","setScissor","setScissorTest","boolean","getClearColor","setClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","preventDefault","onTextureDispose","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","delete","renderTargetProperties","depthTexture","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","releaseMaterialProgramReference","programInfo","program","releaseProgram","renderBufferImmediate","initAttributes","buffers","hasPositions","createBuffer","hasNormals","hasUvs","hasColors","getAttributes","bindBuffer","ARRAY_BUFFER","bufferData","positionArray","DYNAMIC_DRAW","enableAttribute","vertexAttribPointer","FLOAT","normalArray","nx","ny","nz","uvArray","colorArray","disableUnusedAttributes","drawArrays","TRIANGLES","renderBufferDirect","setMaterial","setProgram","updateBuffers","geometryProgram","activeInfluences","absNumericalSort","getUniforms","getWireframeAttribute","setupVertexAttributes","ELEMENT_ARRAY_BUFFER","getAttributeBuffer","dataStart","dataCount","rangeStart","rangeCount","groupStart","groupCount","drawStart","drawEnd","drawCount","setLineWidth","setMode","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","lineWidth","LINE_STRIP","POINTS","renderInstances","startIndex","geometryAttributes","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","enableAttributeAndDivisor","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","painterSortStable","reversePainterSortStable","forceClear","projectObject","beginShadows","setupShadows","setupLights","endShadows","renderObjects","setBlending","updateRenderTargetMipmap","setDepthTest","setDepthWrite","setColorWrite","pushRenderItem","renderItem","isObjectViewable","isSphereViewable","isSpriteViewable","numPlanes","negRad","ImmediateRenderObject","groupMaterial","renderList","initMaterial","materialProperties","getParameters","code","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","numSupportedMorphNormals","numClippingPlanes","uniform","lightsHash","ambientLightColor","directionalLights","spotLights","pointLights","hemisphereLights","progUniforms","uniformsList","WebGLUniforms","seqWithValue","seq","dynamicUniforms","splitDynamic","CULL_FACE","setFlipSided","setDepthFunc","setPolygonOffset","useCache","setState","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","logarithmicDepthBuffer","uCamPos","cameraPosition","setOptional","floatVertexTextures","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsPoints","refreshUniformsLambert","refreshUniformsPhong","refreshUniformsPhysical","refreshUniformsStandard","upload","dynUniforms","evalDynamic","diffuse","uvScaleMap","WebGLRenderTarget","offsetRepeat","flipEnvMap","totalSize","clientHeight","fogColor","fogNear","fogFar","fogDensity","lightShadowsLength","ll","viewMatrix","directionalLength","pointLength","spotLength","hemiLength","shadowBias","shadowRadius","shadowMapSize","coneCos","penumbraCos","setFaceCulling","cullFace","frontFaceDirection","setCullFace","allocTextureUnit","textureUnit","maxTextures","setTextureParameters","textureType","isPowerOfTwoImage","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","textureNeedsPowerOfTwo","makePowerOfTwo","glFormat","glType","mipmap","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","setTexture2D","complete","maxSize","HTMLImageElement","HTMLCanvasElement","setTextureCube","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","warned","setTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","getCurrentRenderTarget","scissorTest","activeMipMapLevel","readRenderTargetPixels","restore","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","drawArraysInstancedANGLE","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","enableLocalClipping","projectPlanes","resetGlobalState","fromCache","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","i4","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttribute","deleteAttributes","property","bufferproperty","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","edges","checkEdge","list","WebGLProgram","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","rendererExtensions","envMapCubeUV","flatShading","filterEmptyLine","generateDefines","fetchAttributeLocations","identifiers","getProgramParameter","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numPointLights","numHemiLights","parseIncludes","include","unrollLoops","snippet","unroll","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","supportsVertexTextures","maxBones","doubleSided","flipSided","shadowMapEnabled","useFog","fogExp","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","destroy","deleteProgram","usedTimes","shaderIDs","parameterNames","allocateBones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","nClipPlanes","currentRenderTarget","envMapMode","pl","addLineNumbers","lines","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","_state","_lightShadows","_shadowMapSize","_lookTarget","_lightPositionWorld","_renderList","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","distanceShader","distanceUniforms","useMorphing","useSkinning","depthMaterial","distanceMaterial","renderReverseSided","renderSingleSided","BLEND","faceCount","isPointLight","shadowCamera","vpWidth","vpHeight","pars","shadowMatrix","vpDimensions","getDepthMaterial","clearAlpha","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","lightPos","WebGLColorBuffer","WebGLDepthBuffer","WebGLStencilBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentScissorTest","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","DEPTH_TEST","enableVertexAttribArray","vertexAttribDivisorANGLE","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","blendFunc","setMask","setTest","setFunc","setStencilTest","stencilTest","setStencilWrite","stencilWrite","setStencilFunc","stencilFunc","stencilRef","stencilMask","setStencilOp","stencilFail","stencilZFail","stencilZPass","setOp","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","factor","units","POLYGON_OFFSET_FILL","getScissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","setClear","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","STENCIL_TEST","stencilOp","UniformContainer","arrayCacheF32","arrayCacheI32","uncacheTemporaryArrays","flatten","nBlocks","blockSize","firstElem","allocTexUnits","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setValueT6","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","tex","setValueT6a","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","next","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","flares","vertexBuffer","elementBuffer","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","TEXTURE1","copyTexImage2D","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","Face4","LineStrip","LinePieces","MeshFaceMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","isIntersectionBox","isIntersectionSphere","multiplyVector3","multiplyVector3Array","extractPosition","multiplyVector4","rotateAxis","crossVector","rotateByAxis","isIntersectionLine","isIntersectionPlane","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","indexOffset","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","audioLoader","getData","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","SceneUtils","createMultiMaterialObject","detach","attach","ShapeUtils","contour","triangulate","snip","verts","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","triangulateShape","holes","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","shape","hole","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","indepHoles","intersectsHoleEdge","ihIdx","chkHole","hIdx","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","failedCuts","tmpShape1","tmpShape2","tmpHole1","tmpHole2","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","isClockWise","pts","b2p0","b2p1","b2p2","b3","b3p0","b3p1","b3p2","b3p3","Curve","getPointAt","getUtoTmapping","getPoints","divisions","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","current","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","getTangentAt","getPointFunc","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","createPointsGeometry","createGeometry","createSpacedPointsGeometry","generateShapes","createPaths","String","resolution","ret","createPath","glyph","glyphs","Path","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","ha","shapes","toShapes","fromPoints","args","lastargs","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","item","spts","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","Shape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","extractAllPoints","extractPoints","tangent","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","closed","ClosedSplineCurve3","BoxGeometry","BoxBufferGeometry","CubeGeometry","vertexCount","calculateVertexCount","indexCount","calculateIndexCount","vertexBufferOffset","uvBufferOffset","indexBufferOffset","numberOfVertices","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","CircleGeometry","CircleBufferGeometry","ii","segment","CylinderBufferGeometry","nbCap","indexArray","halfHeight","generateTorso","generateCap","tanTheta","indexRow","i3","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","CylinderGeometry","ConeBufferGeometry","ConeGeometry","EdgesGeometry","thresholdAngle","thresholdDot","edge","sortFunction","vert1","vert2","face1","face2","addShapeList","addShape","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","curveSegments","steps","extrudePath","extrudePts","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","splineTube","binormal","position2","frames","TubeGeometry","FrenetFrames","ahole","shapesOffset","shapePoints","reverse","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","binormals","buildLidFaces","buildSideFaces","layer","f3","layeroffset","sidewalls","slen1","slen2","f4","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","indexA","indexB","indexC","indexD","LatheBufferGeometry","base","inversePointLength","inverseSegments","n1","n2","LatheGeometry","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","offset2","RingBufferGeometry","radiusStep","thetaSegmentLevel","RingGeometry","SphereGeometry","SphereBufferGeometry","thetaEnd","verticesRow","v4","TextGeometry","TorusBufferGeometry","TorusGeometry","TorusKnotBufferGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TorusKnotGeometry","heightScale","taper","NoTaper","grid","numpoints","pos2","ip","jp","uva","uvb","uvc","uvd","tangents","SinusoidalTaper","mat","smallest","tz","initialNormal3","MAX_VALUE","PolyhedronGeometry","that","prepare","centroid","subdivide","azimuth","inclination","make","azi","correctUV","cols","aj","bj","rows","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","ParametricGeometry","func","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","CameraHelper","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","addLine","addPoint","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","lastFrame","currentFrame","active","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","morph","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe"],"mappings":"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","sourcesContent":["var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '77' };\r\n\r\n//\r\n\r\nif ( typeof define === 'function' && define.amd ) {\r\n\r\n\tdefine( 'three', THREE );\r\n\r\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\r\n\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n// Polyfills\r\n\r\nif ( Number.EPSILON === undefined ) {\r\n\r\n\tNumber.EPSILON = Math.pow( 2, - 52 );\r\n\r\n}\r\n\r\n//\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t};\r\n\r\n}\r\n\r\nif ( Function.prototype.name === undefined ) {\r\n\r\n\t// Missing in IE9-11.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\nif ( Object.assign === undefined ) {\r\n\r\n\t// Missing in IE.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n\r\n\t( function () {\r\n\r\n\t\tObject.assign = function ( target ) {\r\n\r\n\t\t\t'use strict';\r\n\r\n\t\t\tif ( target === undefined || target === null ) {\r\n\r\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar output = Object( target );\r\n\r\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\r\n\r\n\t\t\t\tvar source = arguments[ index ];\r\n\r\n\t\t\t\tif ( source !== undefined && source !== null ) {\r\n\r\n\t\t\t\t\tfor ( var nextKey in source ) {\r\n\r\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\r\n\r\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\r\n\t\t};\r\n\r\n\t} )();\r\n\r\n}\r\n\r\n//\r\n\r\nObject.assign( THREE, {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\n\tMOUSE: { LEFT: 0, MIDDLE: 1, RIGHT: 2 },\r\n\r\n\t// GL STATE CONSTANTS\r\n\r\n\tCullFaceNone: 0,\r\n\tCullFaceBack: 1,\r\n\tCullFaceFront: 2,\r\n\tCullFaceFrontBack: 3,\r\n\r\n\tFrontFaceDirectionCW: 0,\r\n\tFrontFaceDirectionCCW: 1,\r\n\r\n\t// SHADOWING TYPES\r\n\r\n\tBasicShadowMap: 0,\r\n\tPCFShadowMap: 1,\r\n\tPCFSoftShadowMap: 2,\r\n\r\n\t// MATERIAL CONSTANTS\r\n\r\n\t// side\r\n\r\n\tFrontSide: 0,\r\n\tBackSide: 1,\r\n\tDoubleSide: 2,\r\n\r\n\t// shading\r\n\r\n\tFlatShading: 1,\r\n\tSmoothShading: 2,\r\n\r\n\t// colors\r\n\r\n\tNoColors: 0,\r\n\tFaceColors: 1,\r\n\tVertexColors: 2,\r\n\r\n\t// blending modes\r\n\r\n\tNoBlending: 0,\r\n\tNormalBlending: 1,\r\n\tAdditiveBlending: 2,\r\n\tSubtractiveBlending: 3,\r\n\tMultiplyBlending: 4,\r\n\tCustomBlending: 5,\r\n\r\n\t// custom blending equations\r\n\t// (numbers start from 100 not to clash with other\r\n\t// mappings to OpenGL constants defined in Texture.js)\r\n\r\n\tAddEquation: 100,\r\n\tSubtractEquation: 101,\r\n\tReverseSubtractEquation: 102,\r\n\tMinEquation: 103,\r\n\tMaxEquation: 104,\r\n\r\n\t// custom blending destination factors\r\n\r\n\tZeroFactor: 200,\r\n\tOneFactor: 201,\r\n\tSrcColorFactor: 202,\r\n\tOneMinusSrcColorFactor: 203,\r\n\tSrcAlphaFactor: 204,\r\n\tOneMinusSrcAlphaFactor: 205,\r\n\tDstAlphaFactor: 206,\r\n\tOneMinusDstAlphaFactor: 207,\r\n\r\n\t// custom blending source factors\r\n\r\n\t//ZeroFactor: 200,\r\n\t//OneFactor: 201,\r\n\t//SrcAlphaFactor: 204,\r\n\t//OneMinusSrcAlphaFactor: 205,\r\n\t//DstAlphaFactor: 206,\r\n\t//OneMinusDstAlphaFactor: 207,\r\n\tDstColorFactor: 208,\r\n\tOneMinusDstColorFactor: 209,\r\n\tSrcAlphaSaturateFactor: 210,\r\n\r\n\t// depth modes\r\n\r\n\tNeverDepth: 0,\r\n\tAlwaysDepth: 1,\r\n\tLessDepth: 2,\r\n\tLessEqualDepth: 3,\r\n\tEqualDepth: 4,\r\n\tGreaterEqualDepth: 5,\r\n\tGreaterDepth: 6,\r\n\tNotEqualDepth: 7,\r\n\r\n\r\n\t// TEXTURE CONSTANTS\r\n\r\n\tMultiplyOperation: 0,\r\n\tMixOperation: 1,\r\n\tAddOperation: 2,\r\n\r\n\t// Tone Mapping modes\r\n\r\n\tNoToneMapping: 0, // do not do any tone mapping, not even exposure (required for special purpose passes.)\r\n\tLinearToneMapping: 1, // only apply exposure.\r\n\tReinhardToneMapping: 2,\r\n\tUncharted2ToneMapping: 3, // John Hable\r\n\tCineonToneMapping: 4, // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\r\n\r\n\t// Mapping modes\r\n\r\n\tUVMapping: 300,\r\n\r\n\tCubeReflectionMapping: 301,\r\n\tCubeRefractionMapping: 302,\r\n\r\n\tEquirectangularReflectionMapping: 303,\r\n\tEquirectangularRefractionMapping: 304,\r\n\r\n\tSphericalReflectionMapping: 305,\r\n\tCubeUVReflectionMapping: 306,\r\n\tCubeUVRefractionMapping: 307,\r\n\r\n\t// Wrapping modes\r\n\r\n\tRepeatWrapping: 1000,\r\n\tClampToEdgeWrapping: 1001,\r\n\tMirroredRepeatWrapping: 1002,\r\n\r\n\t// Filters\r\n\r\n\tNearestFilter: 1003,\r\n\tNearestMipMapNearestFilter: 1004,\r\n\tNearestMipMapLinearFilter: 1005,\r\n\tLinearFilter: 1006,\r\n\tLinearMipMapNearestFilter: 1007,\r\n\tLinearMipMapLinearFilter: 1008,\r\n\r\n\t// Data types\r\n\r\n\tUnsignedByteType: 1009,\r\n\tByteType: 1010,\r\n\tShortType: 1011,\r\n\tUnsignedShortType: 1012,\r\n\tIntType: 1013,\r\n\tUnsignedIntType: 1014,\r\n\tFloatType: 1015,\r\n\tHalfFloatType: 1025,\r\n\r\n\t// Pixel types\r\n\r\n\t//UnsignedByteType: 1009,\r\n\tUnsignedShort4444Type: 1016,\r\n\tUnsignedShort5551Type: 1017,\r\n\tUnsignedShort565Type: 1018,\r\n\r\n\t// Pixel formats\r\n\r\n\tAlphaFormat: 1019,\r\n\tRGBFormat: 1020,\r\n\tRGBAFormat: 1021,\r\n\tLuminanceFormat: 1022,\r\n\tLuminanceAlphaFormat: 1023,\r\n\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\n\tRGBEFormat: THREE.RGBAFormat, //1024;\r\n\tDepthFormat: 1026,\r\n\r\n\t// DDS / ST3C Compressed texture formats\r\n\r\n\tRGB_S3TC_DXT1_Format: 2001,\r\n\tRGBA_S3TC_DXT1_Format: 2002,\r\n\tRGBA_S3TC_DXT3_Format: 2003,\r\n\tRGBA_S3TC_DXT5_Format: 2004,\r\n\r\n\t// PVRTC compressed texture formats\r\n\r\n\tRGB_PVRTC_4BPPV1_Format: 2100,\r\n\tRGB_PVRTC_2BPPV1_Format: 2101,\r\n\tRGBA_PVRTC_4BPPV1_Format: 2102,\r\n\tRGBA_PVRTC_2BPPV1_Format: 2103,\r\n\r\n\t// ETC compressed texture formats\r\n\r\n\tRGB_ETC1_Format: 2151,\r\n\r\n\t// Loop styles for AnimationAction\r\n\r\n\tLoopOnce: 2200,\r\n\tLoopRepeat: 2201,\r\n\tLoopPingPong: 2202,\r\n\r\n\t// Interpolation\r\n\r\n\tInterpolateDiscrete: 2300,\r\n\tInterpolateLinear: 2301,\r\n\tInterpolateSmooth: 2302,\r\n\r\n\t// Interpolant ending modes\r\n\r\n\tZeroCurvatureEnding: 2400,\r\n\tZeroSlopeEnding: 2401,\r\n\tWrapAroundEnding: 2402,\r\n\r\n\t// Triangle Draw modes\r\n\r\n\tTrianglesDrawMode: 0,\r\n\tTriangleStripDrawMode: 1,\r\n\tTriangleFanDrawMode: 2,\r\n\r\n\t// Texture Encodings\r\n\r\n\tLinearEncoding: 3000, // No encoding at all.\r\n\tsRGBEncoding: 3001,\r\n\tGammaEncoding: 3007, // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\r\n\r\n\t// The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\r\n\t// These encodings should not specified as output encodings except in rare situations.\r\n\tRGBEEncoding: 3002, // AKA Radiance.\r\n\tLogLuvEncoding: 3003,\r\n\tRGBM7Encoding: 3004,\r\n\tRGBM16Encoding: 3005,\r\n\tRGBDEncoding: 3006, // MaxRange is 256.\r\n\r\n\t// Depth packing strategies\r\n\r\n\tBasicDepthPacking: 3200, // for writing to float textures for high precision or for visualizing results in RGB buffers\r\n\tRGBADepthPacking: 3201 // for packing into RGBA buffers.\r\n\r\n} );\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( r, g, b ) {\r\n\r\n\tif ( g === undefined && b === undefined ) {\r\n\r\n\t\t// r is THREE.Color, hex or string\r\n\t\treturn this.set( r );\r\n\r\n\t}\r\n\r\n\treturn this.setRGB( r, g, b );\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetScalar: function ( scalar ) {\r\n\r\n\t\tthis.r = scalar;\r\n\t\tthis.g = scalar;\r\n\t\tthis.b = scalar;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function () {\r\n\r\n\t\tfunction hue2rgb( p, q, t ) {\r\n\r\n\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\r\n\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\tfunction handleAlpha( string ) {\r\n\r\n\t\t\tif ( string === undefined ) return;\r\n\r\n\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tvar color;\r\n\t\t\tvar name = m[ 1 ];\r\n\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tvar hex = m[ 1 ];\r\n\t\t\tvar size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t// color keywords\r\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\r\n\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.r = array[ offset ];\r\n\t\tthis.g = array[ offset + 1 ];\r\n\t\tthis.b = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tvar order = euler.order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\treturn this.normalize();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\treturn this.conjugate().normalize();\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tpremultiply: function ( q ) {\r\n\r\n\t\treturn this.multiplyQuaternions( q, this );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\nObject.assign( THREE.Quaternion, {\r\n\r\n\tslerp: function( qa, qb, qm, t ) {\r\n\r\n\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n\t},\r\n\r\n\tslerpFlat: function(\r\n\t\t\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\r\n\r\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\r\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n\t\t\tvar s = 1 - t,\r\n\r\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\r\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\r\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\r\n\t\t\t\ts = Math.sin( s * len ) / sin;\r\n\t\t\t\tt = Math.sin( t * len ) / sin;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar tDir = t * dir;\r\n\r\n\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\tif ( s === 1 - t ) {\r\n\r\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n\t\t\t\tx0 *= f;\r\n\t\t\t\ty0 *= f;\r\n\t\t\t\tz0 *= f;\r\n\t\t\t\tw0 *= f;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdst[ dstOffset ] = x0;\r\n\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tget width() {\r\n\r\n\t\treturn this.x;\r\n\r\n\t},\r\n\r\n\tset width( value ) {\r\n\r\n\t\tthis.x = value;\r\n\r\n\t},\r\n\r\n\tget height() {\r\n\r\n\t\treturn this.y;\r\n\r\n\t},\r\n\r\n\tset height( value ) {\r\n\r\n\t\tthis.y = value;\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetScalar: function ( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tif ( isFinite( scalar ) ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclampLength: function ( min, max ) {\r\n\r\n\t\tvar length = this.length();\r\n\r\n\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\r\n\t},\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tangle: function () {\r\n\r\n\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\tvar angle = Math.atan2( this.y, this.x );\r\n\r\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\r\n\r\n\t\treturn angle;\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\trotateAround: function ( center, angle ) {\r\n\r\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\tvar x = this.x - center.x;\r\n\t\tvar y = this.y - center.y;\r\n\r\n\t\tthis.x = x * c - y * s + center.x;\r\n\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetScalar: function ( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tif ( isFinite( scalar ) ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function project( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function unproject( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\treturn this.normalize();\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclampLength: function ( min, max ) {\r\n\r\n\t\tvar length = this.length();\r\n\r\n\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\r\n\t},\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function projectOnVector( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetFromSpherical: function( s ) {\r\n\r\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\r\n\r\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\r\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\r\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\treturn this.setFromMatrixColumn( m, 3 );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( m, index ) {\r\n\r\n\t\tif ( typeof m === 'number' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\r\n\t\t\tvar temp = m\r\n\t\t\tm = index;\r\n\t\t\tindex = temp;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.fromArray( m.elements, index * 4 );\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetScalar: function ( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\t\tthis.w = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tif ( isFinite( scalar ) ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\r\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\r\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\t\r\n\t\t\treturn this.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( + Infinity, + Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = + Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tisEmpty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tintersectsBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( + Infinity, + Infinity, + Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromArray: function ( array ) {\r\n\r\n\t\tvar minX = + Infinity;\r\n\t\tvar minY = + Infinity;\r\n\t\tvar minZ = + Infinity;\r\n\r\n\t\tvar maxX = - Infinity;\r\n\t\tvar maxY = - Infinity;\r\n\t\tvar maxZ = - Infinity;\r\n\r\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\tvar x = array[ i ];\r\n\t\t\tvar y = array[ i + 1 ];\r\n\t\t\tvar z = array[ i + 2 ];\r\n\r\n\t\t\tif ( x < minX ) minX = x;\r\n\t\t\tif ( y < minY ) minY = y;\r\n\t\t\tif ( z < minZ ) minZ = z;\r\n\r\n\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\tif ( y > maxY ) maxY = y;\r\n\t\t\tif ( z > maxZ ) maxZ = z;\r\n\r\n\t\t}\r\n\r\n\t\tthis.min.set( minX, minY, minZ );\r\n\t\tthis.max.set( maxX, maxY, maxZ );\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.fromArray( positions, i );\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tisEmpty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t\t point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t\t point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tintersectsBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsSphere: ( function () {\r\n\r\n\t\tvar closestPoint;\r\n\r\n\t\treturn function intersectsSphere( sphere ) {\r\n\r\n\t\t\tif ( closestPoint === undefined ) closestPoint = new THREE.Vector3();\r\n\r\n\t\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\r\n\r\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\r\n\t\tvar min, max;\r\n\r\n\t\tif ( plane.normal.x > 0 ) {\r\n\r\n\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\tmax = plane.normal.x * this.max.x;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\tmax = plane.normal.x * this.min.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.y > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\tmax += plane.normal.y * this.max.y;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\tmax += plane.normal.y * this.min.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.z > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\tmax += plane.normal.z * this.max.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\tmax += plane.normal.z * this.min.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn ( min <= plane.constant && max >= plane.constant );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\t\tif( this.isEmpty() ) this.makeEmpty();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// transform of empty box is an empty box.\r\n\t\t\tif( this.isEmpty() ) return this;\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\r\n\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n * @author tschw\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix4: function( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\r\n\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\r\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\r\n\r\n\t\tif ( matrix instanceof THREE.Matrix4 ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\r\n\r\n\t\t}\r\n\r\n\t\tvar me = matrix.elements,\r\n\t\t\tte = this.elements,\r\n\r\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\r\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\r\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\r\n\r\n\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\r\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnDegenerate || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.identity();\r\n\t\t}\r\n\t\t\r\n\t\tvar detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\r\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\r\n\r\n\t\tte[ 3 ] = t12 * detInv;\r\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\r\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\r\n\r\n\t\tte[ 6 ] = t13 * detInv;\r\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\r\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\r\n\t\t\t\t\"- just use .toArray instead.\" );\r\n\r\n\t\treturn this.toArray( array, offset );\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( matrix4 ) {\r\n\r\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\txAxis.setFromMatrixColumn( this, 0 );\r\n\t\tyAxis.setFromMatrixColumn( this, 1 );\r\n\t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\r\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\r\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x, y, z;\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tif ( x === undefined ) {\r\n\r\n\t\t\t\tx = new THREE.Vector3();\r\n\t\t\t\ty = new THREE.Vector3();\r\n\t\t\t\tz = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.lengthSq() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.lengthSq() === 0 ) {\r\n\r\n\t\t\t\tz.z += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tpremultiply: function ( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\r\n\t\t\t\t\"- just use .toArray instead.\" );\r\n\r\n\t\treturn this.toArray( array, offset );\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnDegenerate ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements,\r\n\t\t\tme = m.elements,\r\n\r\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\r\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\r\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\r\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\r\n\r\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\r\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnDegenerate || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.identity();\r\n\r\n\t\t}\r\n\t\t\r\n\t\tvar detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\r\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\r\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 4 ] = t12 * detInv;\r\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\r\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\r\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 8 ] = t13 * detInv;\r\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\r\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\r\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\r\n\r\n\t\tte[ 12 ] = t14 * detInv;\r\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\r\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\r\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector, matrix;\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\t\t\t\tmatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\r\n\t\t\t\tsx = - sx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = 1.0 / ( right - left );\r\n\t\tvar h = 1.0 / ( top - bottom );\r\n\t\tvar p = 1.0 / ( far - near );\r\n\r\n\t\tvar x = ( right + left ) * w;\r\n\t\tvar y = ( top + bottom ) * h;\r\n\t\tvar z = ( far + near ) * p;\r\n\r\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( matrix ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tlookAt: function ( v ) {\r\n\r\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t},\r\n\r\n\tdistanceSqToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\r\n\r\n\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectsBox: ( function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tintersectsBox: function ( box ) {\r\n\r\n\t\treturn box.intersectsSphere( this );\r\n\r\n\t},\r\n\r\n\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t// We use the following equation to compute the signed distance from\r\n\t\t// the center of the sphere to the plane.\r\n\t\t//\r\n\t\t// distance = q * n - d\r\n\t\t//\r\n\t\t// If this distance is greater than the radius of the sphere,\r\n\t\t// then there is no intersection.\r\n\r\n\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null )\r\n\t\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere )\r\n\t\t\t\t.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSprite: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( sprite ) {\r\n\r\n\t\t\tsphere.center.set( 0, 0, 0 );\r\n\t\t\tsphere.radius = 0.7071067811865476;\r\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectsBox: function ( box ) {\r\n\r\n\t\treturn box.intersectsPlane( this );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\treturn sphere.intersectsPlane( this );\r\n\r\n\t},\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\r\n\r\n\t\t\t// transform normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\r\n\t\t\tthis.constant = - referencePoint.dot( normal );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spherical.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n *\r\n * The poles (phi) are at the positive and negative y axis.\r\n * The equator starts at positive z.\r\n */\r\n\r\nTHREE.Spherical = function ( radius, phi, theta ) {\r\n\r\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\r\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\r\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Spherical.prototype = {\r\n\r\n\tconstructor: THREE.Spherical,\r\n\r\n\tset: function ( radius, phi, theta ) {\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.phi = phi;\r\n\t\tthis.theta = theta;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( other ) {\r\n\r\n\t\tthis.radius.copy( other.radius );\r\n\t\tthis.phi.copy( other.phi );\r\n\t\tthis.theta.copy( other.theta );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// restrict phi to be betwee EPS and PI-EPS\r\n\tmakeSafe: function() {\r\n\r\n\t\tvar EPS = 0.000001;\r\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromVector3: function( vec3 ) {\r\n\r\n\t\tthis.radius = vec3.length();\r\n\r\n\t\tif ( this.radius === 0 ) {\r\n\r\n\t\t\tthis.theta = 0;\r\n\t\t\tthis.phi = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\r\n\t\t\tthis.phi = Math.acos( THREE.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tDEG2RAD: Math.PI / 180,\r\n\tRAD2DEG: 180 / Math.PI,\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclamp: function ( value, min, max ) {\r\n\r\n\t\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n\t},\r\n\r\n\t// compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\trandom16: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\r\n\t\treturn Math.random();\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function ( degrees ) {\r\n\r\n\t\treturn degrees * THREE.Math.DEG2RAD;\r\n\r\n\t},\r\n\r\n\tradToDeg: function ( radians ) {\r\n\r\n\t\treturn radians * THREE.Math.RAD2DEG;\r\n\r\n\t},\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnearestPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycentric coordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tclosestPointToPoint: function () {\r\n\r\n\t\tvar plane, edgeList, projectedPoint, closestPoint;\r\n\r\n\t\treturn function closestPointToPoint( point, optionalTarget ) {\r\n\r\n\t\t\tif ( plane === undefined ) {\r\n\r\n\t\t\t\tplane = new THREE.Plane();\r\n\t\t\t\tedgeList = [ new THREE.Line3(), new THREE.Line3(), new THREE.Line3() ];\r\n\t\t\t\tprojectedPoint = new THREE.Vector3();\r\n\t\t\t\tclosestPoint = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tvar minDistance = Infinity;\r\n\r\n\t\t\t// project the point onto the plane of the triangle\r\n\r\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\t\t\tplane.projectPoint( point, projectedPoint );\r\n\r\n\t\t\t// check if the projection lies within the triangle\r\n\r\n\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\r\n\r\n\t\t\t\t// if so, this is the closest point\r\n\r\n\t\t\t\tresult.copy( projectedPoint );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\r\n\r\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\r\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\r\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\r\n\r\n\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\r\n\r\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\r\n\r\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\r\n\r\n\t\t\t\t\tif( distance < minDistance ) {\r\n\r\n\t\t\t\t\t\tminDistance = distance;\r\n\r\n\t\t\t\t\t\tresult.copy( closestPoint );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Interpolant.js\r\n\r\n/**\r\n * Abstract base class of interpolants over parametric samples.\r\n *\r\n * The parameter domain is one dimensional, typically the time or a path\r\n * along a curve defined by the data.\r\n *\r\n * The sample values can have any dimensionality and derived classes may\r\n * apply special interpretations to the data.\r\n *\r\n * This class provides the interval seek in a Template Method, deferring\r\n * the actual interpolation to derived classes.\r\n *\r\n * Time complexity is O(1) for linear access crossing at most two points\r\n * and O(log N) for random access, where N is the number of positions.\r\n *\r\n * References:\r\n *\r\n * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.Interpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tthis.parameterPositions = parameterPositions;\r\n\tthis._cachedIndex = 0;\r\n\r\n\tthis.resultBuffer = resultBuffer !== undefined ?\r\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\r\n\tthis.sampleValues = sampleValues;\r\n\tthis.valueSize = sampleSize;\r\n\r\n};\r\n\r\nTHREE.Interpolant.prototype = {\r\n\r\n\tconstructor: THREE.Interpolant,\r\n\r\n\tevaluate: function( t ) {\r\n\r\n\t\tvar pp = this.parameterPositions,\r\n\t\t\ti1 = this._cachedIndex,\r\n\r\n\t\t\tt1 = pp[   i1   ],\r\n\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\tvalidate_interval: {\r\n\r\n\t\t\tseek: {\r\n\r\n\t\t\t\tvar right;\r\n\r\n\t\t\t\tlinear_scan: {\r\n//- See http://jsperf.com/comparison-to-undefined/3\r\n//- slower code:\r\n//-\r\n//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\r\n\r\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\r\n\r\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\r\n\r\n\t\t\t\t\t\t\t\t// after end\r\n\r\n\t\t\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\tt0 = t1;\r\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t < t1 ) {\r\n\r\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// prepare binary search on the right side of the index\r\n\t\t\t\t\t\tright = pp.length;\r\n\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t}\r\n\r\n//- slower code:\r\n//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\r\n\r\n\t\t\t\t\t\t// looping?\r\n\r\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\r\n\r\n\t\t\t\t\t\tif ( t < t1global ) {\r\n\r\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n\t\t\t\t\t\t\tt0 = t1global;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// linear reverse scan\r\n\r\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\r\n\r\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t// before start\r\n\r\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\tt1 = t0;\r\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t >= t0 ) {\r\n\r\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// prepare binary search on the left side of the index\r\n\t\t\t\t\t\tright = i1;\r\n\t\t\t\t\t\ti1 = 0;\r\n\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// the interval is valid\r\n\r\n\t\t\t\t\tbreak validate_interval;\r\n\r\n\t\t\t\t} // linear scan\r\n\r\n\t\t\t\t// binary search\r\n\r\n\t\t\t\twhile ( i1 < right ) {\r\n\r\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\r\n\r\n\t\t\t\t\tif ( t < pp[ mid ] ) {\r\n\r\n\t\t\t\t\t\tright = mid;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ti1 = mid + 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tt1 = pp[   i1   ];\r\n\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\t\t\t// check boundary cases, again\r\n\r\n\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} // seek\r\n\r\n\t\t\tthis._cachedIndex = i1;\r\n\r\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\r\n\r\n\t\t} // validate_interval\r\n\r\n\t\treturn this.interpolate_( i1, t0, t, t1 );\r\n\r\n\t},\r\n\r\n\tsettings: null, // optional, subclass-specific settings structure\r\n\t// Note: The indirection allows central control of many interpolants.\r\n\r\n\t// --- Protected interface\r\n\r\n\tDefaultSettings_: {},\r\n\r\n\tgetSettings_: function() {\r\n\r\n\t\treturn this.settings || this.DefaultSettings_;\r\n\r\n\t},\r\n\r\n\tcopySampleValue_: function( index ) {\r\n\r\n\t\t// copies a sample value to the result buffer\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = index * stride;\r\n\r\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] = values[ offset + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\t// Template methods for derived classes:\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\tthrow new Error( \"call to abstract method\" );\r\n\t\t// implementations shall return this.resultBuffer\r\n\r\n\t},\r\n\r\n\tintervalChanged_: function( i1, t0, t1 ) {\r\n\r\n\t\t// empty\r\n\r\n\t}\r\n\r\n};\r\n\r\nObject.assign( THREE.Interpolant.prototype, {\r\n\r\n\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\r\n\t\tTHREE.Interpolant.prototype.copySampleValue_,\r\n\r\n\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\r\n\t\tTHREE.Interpolant.prototype.copySampleValue_\r\n\r\n} );\r\n\r\n// File:src/math/interpolants/CubicInterpolant.js\r\n\r\n/**\r\n * Fast and simple cubic spline interpolant.\r\n *\r\n * It was derived from a Hermitian construction setting the first derivative\r\n * at each sample position to the linear slope between neighboring positions\r\n * over their parameter interval.\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.CubicInterpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tTHREE.Interpolant.call(\r\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\tthis._weightPrev = -0;\r\n\tthis._offsetPrev = -0;\r\n\tthis._weightNext = -0;\r\n\tthis._offsetNext = -0;\r\n\r\n};\r\n\r\nTHREE.CubicInterpolant.prototype =\r\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\r\n\tconstructor: THREE.CubicInterpolant,\r\n\r\n\tDefaultSettings_: {\r\n\r\n\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\r\n\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\r\n\r\n\t},\r\n\r\n\tintervalChanged_: function( i1, t0, t1 ) {\r\n\r\n\t\tvar pp = this.parameterPositions,\r\n\t\t\tiPrev = i1 - 2,\r\n\t\t\tiNext = i1 + 1,\r\n\r\n\t\t\ttPrev = pp[ iPrev ],\r\n\t\t\ttNext = pp[ iNext ];\r\n\r\n\t\tif ( tPrev === undefined ) {\r\n\r\n\t\t\tswitch ( this.getSettings_().endingStart ) {\r\n\r\n\t\t\t\tcase THREE.ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t// f'(t0) = 0\r\n\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\ttPrev = 2 * t0 - t1;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.WrapAroundEnding:\r\n\r\n\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\tiPrev = pp.length - 2;\r\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\r\n\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\ttPrev = t1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( tNext === undefined ) {\r\n\r\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\r\n\r\n\t\t\t\tcase THREE.ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t// f'(tN) = 0\r\n\t\t\t\t\tiNext = i1;\r\n\t\t\t\t\ttNext = 2 * t1 - t0;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.WrapAroundEnding:\r\n\r\n\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\tiNext = 1;\r\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\r\n\t\t\t\t\tiNext = i1 - 1;\r\n\t\t\t\t\ttNext = t0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\r\n\t\t\tstride = this.valueSize;\r\n\r\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\r\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\r\n\t\tthis._offsetPrev = iPrev * stride;\r\n\t\tthis._offsetNext = iNext * stride;\r\n\r\n\t},\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\r\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\r\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\r\n\r\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\tpp = p * p,\r\n\t\t\tppp = pp * p;\r\n\r\n\t\t// evaluate polynomials\r\n\r\n\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\r\n\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\r\n\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\r\n\t\tvar sN =       wN   * ppp   -           wN      * pp;\r\n\r\n\t\t// combine data linearly\r\n\r\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] =\r\n\t\t\t\t\tsP * values[ oP + i ] +\r\n\t\t\t\t\ts0 * values[ o0 + i ] +\r\n\t\t\t\t\ts1 * values[ o1 + i ] +\r\n\t\t\t\t\tsN * values[ oN + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/math/interpolants/DiscreteInterpolant.js\r\n\r\n/**\r\n *\r\n * Interpolant that evaluates to the sample value at the position preceeding\r\n * the parameter.\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.DiscreteInterpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tTHREE.Interpolant.call(\r\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n};\r\n\r\nTHREE.DiscreteInterpolant.prototype =\r\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\r\n\tconstructor: THREE.DiscreteInterpolant,\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/math/interpolants/LinearInterpolant.js\r\n\r\n/**\r\n * @author tschw\r\n */\r\n\r\nTHREE.LinearInterpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tTHREE.Interpolant.call(\r\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n};\r\n\r\nTHREE.LinearInterpolant.prototype =\r\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\r\n\tconstructor: THREE.LinearInterpolant,\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toffset1 = i1 * stride,\r\n\t\t\toffset0 = offset1 - stride,\r\n\r\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\tweight0 = 1 - weight1;\r\n\r\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] =\r\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\r\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/math/interpolants/QuaternionLinearInterpolant.js\r\n\r\n/**\r\n * Spherical linear unit quaternion interpolant.\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.QuaternionLinearInterpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tTHREE.Interpolant.call(\r\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n};\r\n\r\nTHREE.QuaternionLinearInterpolant.prototype =\r\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\r\n\tconstructor: THREE.QuaternionLinearInterpolant,\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toffset = i1 * stride,\r\n\r\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\r\n\r\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\r\n\r\n\t\t\tTHREE.Quaternion.slerpFlat( result, 0,\r\n\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = ( performance || Date ).now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = ( performance || Date ).now();\r\n\r\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {};\r\n\r\nObject.assign( THREE.EventDispatcher.prototype, {\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [], i = 0;\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/core/Layers.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Layers = function () {\r\n\r\n\tthis.mask = 1;\r\n\r\n};\r\n\r\nTHREE.Layers.prototype = {\r\n\r\n\tconstructor: THREE.Layers,\r\n\r\n\tset: function ( channel ) {\r\n\r\n\t\tthis.mask = 1 << channel;\r\n\r\n\t},\r\n\r\n\tenable: function ( channel ) {\r\n\r\n\t\tthis.mask |= 1 << channel;\r\n\r\n\t},\r\n\r\n\ttoggle: function ( channel ) {\r\n\r\n\t\tthis.mask ^= 1 << channel;\r\n\r\n\t},\r\n\r\n\tdisable: function ( channel ) {\r\n\r\n\t\tthis.mask &= ~ ( 1 << channel );\r\n\r\n\t},\r\n\r\n\ttest: function ( layers ) {\r\n\r\n\t\treturn ( this.mask & layers.mask ) !== 0;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://clara.io/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction ascSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( ascSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( ascSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = null;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tfunction onRotationChange() {\r\n\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t}\r\n\r\n\tfunction onQuaternionChange() {\r\n\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t}\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t\tmodelViewMatrix: {\r\n\t\t\tvalue: new THREE.Matrix4()\r\n\t\t},\r\n\t\tnormalMatrix: {\r\n\t\t\tvalue: new THREE.Matrix3()\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.layers = new THREE.Layers();\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\nObject.assign( THREE.Object3D.prototype, THREE.EventDispatcher.prototype, {\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tvar parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\t// meta is '' when called from JSON.stringify\r\n\t\tvar isRootObject = ( meta === undefined || meta === '' );\r\n\r\n\t\tvar output = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t\toutput.metadata = {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tvar object = {};\r\n\r\n\t\tobject.uuid = this.uuid;\r\n\t\tobject.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) object.name = this.name;\r\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\r\n\t\tif ( this.castShadow === true ) object.castShadow = true;\r\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\tif ( this.visible === false ) object.visible = false;\r\n\r\n\t\tobject.matrix = this.matrix.toArray();\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.geometry !== undefined ) {\r\n\r\n\t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.geometry = this.geometry.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.material !== undefined ) {\r\n\r\n\t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.material = this.material.uuid;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tobject.children = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = object;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source, recursive ) {\r\n\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.a = source.a;\r\n\t\tthis.b = source.b;\r\n\t\tthis.c = source.c;\r\n\r\n\t\tthis.normal.copy( source.normal );\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize, normalized ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\tthis.normalized = normalized === true;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.array.length / this.itemSize;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyArray: function ( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\tcolor = new THREE.Color();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyIndicesArray: function ( indices ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar index = indices[ i ];\r\n\r\n\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\tarray[ offset ++ ] = index.c;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n};\r\n\r\n\r\n// Deprecated\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n};\r\n\r\n// File:src/core/InstancedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\r\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.stride = stride;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.InterleavedBuffer.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBuffer,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count () {\r\n\r\n\t\treturn this.array.length / this.stride;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/InstancedInterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\r\n\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.data = interleavedBuffer;\r\n\tthis.itemSize = itemSize;\r\n\tthis.offset = offset;\r\n\r\n};\r\n\r\n\r\nTHREE.InterleavedBufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.count;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.faces = [];\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nObject.assign( THREE.Geometry.prototype, THREE.EventDispatcher.prototype, {\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar positions = attributes.position.array;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\t\tvar tempUVs2 = [];\r\n\r\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction addFace( a, b, c, materialIndex ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\r\n\r\n\t\t\tscope.faces.push( face );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\tvar center = this.boundingSphere.center;\r\n\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\t\tmatrix.set(\r\n\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\tthis.applyMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.faces.length > 0 ) {\r\n\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\tsortFacesByMaterialIndex: function () {\r\n\r\n\t\tvar faces = this.faces;\r\n\t\tvar length = faces.length;\r\n\r\n\t\t// tag faces\r\n\r\n\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tfaces[ i ]._id = i;\r\n\r\n\t\t}\r\n\r\n\t\t// sort faces\r\n\r\n\t\tfunction materialIndexSort( a, b ) {\r\n\r\n\t\t\treturn a.materialIndex - b.materialIndex;\r\n\r\n\t\t}\r\n\r\n\t\tfaces.sort( materialIndexSort );\r\n\r\n\t\t// sort uvs\r\n\r\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\r\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\r\n\r\n\t\tvar newUvs1, newUvs2;\r\n\r\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\r\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\r\n\r\n\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar id = faces[ i ]._id;\r\n\r\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\r\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\r\n\r\n\t\t}\r\n\r\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\r\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Geometry',\r\n\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Geometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = true;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\t\tfaces.push( face.materialIndex );\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = {};\r\n\r\n\t\tdata.data.vertices = vertices;\r\n\t\tdata.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\tdata.data.faces = faces;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\t/*\r\n\t\t// Handle primitives\r\n\r\n\t\tvar parameters = this.parameters;\r\n\r\n\t\tif ( parameters !== undefined ) {\r\n\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tvalues.push( parameters[ key ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n\t\t\tthis.constructor.apply( geometry, values );\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\t\t*/\r\n\r\n\t\treturn new THREE.Geometry().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\r\n\t\tvar vertices = source.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = source.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/core/DirectGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'DirectGeometry';\r\n\r\n\tthis.indices = [];\r\n\tthis.vertices = [];\r\n\tthis.normals = [];\r\n\tthis.colors = [];\r\n\tthis.uvs = [];\r\n\tthis.uvs2 = [];\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.morphTargets = {};\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\t// this.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nObject.assign( THREE.DirectGeometry.prototype, THREE.EventDispatcher.prototype, {\r\n\r\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\tvar group;\r\n\t\tvar groups = [];\r\n\t\tvar materialIndex;\r\n\r\n\t\tvar faces = geometry.faces;\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t// materials\r\n\r\n\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group !== undefined ) {\r\n\r\n\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t}\r\n\r\n\t\tthis.groups = groups;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tvar morphTargets = geometry.morphTargets;\r\n\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\tvar morphTargetsPosition;\r\n\r\n\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\tmorphTargetsPosition = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t}\r\n\r\n\t\tvar morphNormals = geometry.morphNormals;\r\n\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\tvar morphTargetsNormal;\r\n\r\n\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\tmorphTargetsNormal = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t}\r\n\r\n\t\t// skins\r\n\r\n\t\tvar skinIndices = geometry.skinIndices;\r\n\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeGroups( geometry );\r\n\r\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.index = null;\r\n\tthis.attributes = {};\r\n\r\n\tthis.morphAttributes = {};\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n};\r\n\r\nObject.assign( THREE.BufferGeometry.prototype, THREE.EventDispatcher.prototype, {\r\n\r\n\tgetIndex: function () {\r\n\r\n\t\treturn this.index;\r\n\r\n\t},\r\n\r\n\tsetIndex: function ( index ) {\r\n\r\n\t\tthis.index = index;\r\n\r\n\t},\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( name === 'index' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tremoveAttribute: function ( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tclearGroups: function () {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t},\r\n\r\n\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tsetFromObject: function ( object ) {\r\n\r\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateFromObject: function ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\tgeometry = direct;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.position;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.normal;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.color;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvsNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.uv;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.lineDistance;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t},\r\n\r\n\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.indices.length > 0 ) {\r\n\r\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n\t\t}\r\n\r\n\t\t// groups\r\n\r\n\t\tthis.groups = geometry.groups;\r\n\r\n\t\t// morphs\r\n\r\n\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning\r\n\r\n\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\tif ( positions !== undefined ) {\r\n\r\n\t\t\tthis.boundingBox.setFromArray( positions );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.boundingBox.makeEmpty();\r\n\r\n\t\t}\r\n\r\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function computeBoundingSphere() {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tbox.setFromArray( positions );\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar index = this.index;\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar array = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tarray[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar group = groups[ j ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoNonIndexed: function () {\r\n\r\n\t\tif ( this.index === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry2 = new THREE.BufferGeometry();\r\n\r\n\t\tvar indices = this.index.array;\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\r\n\t\t\tvar array = attribute.array;\r\n\t\t\tvar itemSize = attribute.itemSize;\r\n\r\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\r\n\r\n\t\t\tvar index = 0, index2 = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tindex = indices[ i ] * itemSize;\r\n\r\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\r\n\r\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry2.addAttribute( name, new THREE.BufferAttribute( array2, itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry2;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tvar index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array,\r\n\t\t\t\tnormalized: attribute.normalized\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\t/*\r\n\t\t// Handle primitives\r\n\r\n\t\tvar parameters = this.parameters;\r\n\r\n\t\tif ( parameters !== undefined ) {\r\n\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tvalues.push( parameters[ key ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n\t\t\tthis.constructor.apply( geometry, values );\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\t\t*/\r\n\r\n\t\treturn new THREE.BufferGeometry().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tvar index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = source.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = source.groups;\r\n\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nTHREE.BufferGeometry.MaxIndex = 65535;\r\n\r\n// File:src/core/InstancedBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferGeometry = function () {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'InstancedBufferGeometry';\r\n\tthis.maxInstancedCount = undefined;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n\tthis.groups.push( {\r\n\r\n\t\tstart: start,\r\n\t\tcount: count,\r\n\t\tinstances: instances\r\n\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n\tvar index = source.index;\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\tthis.setIndex( index.clone() );\r\n\r\n\t}\r\n\r\n\tvar attributes = source.attributes;\r\n\r\n\tfor ( var name in attributes ) {\r\n\r\n\t\tvar attribute = attributes[ name ];\r\n\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t}\r\n\r\n\tvar groups = source.groups;\r\n\r\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tvar group = groups[ i ];\r\n\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/Uniform.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Uniform = function ( value ) {\r\n\r\n\tif ( typeof value === 'string' ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\r\n\t\tvalue = arguments[ 1 ];\r\n\r\n\t}\r\n\r\n\tthis.value = value;\r\n\r\n\tthis.dynamic = false;\r\n\r\n};\r\n\r\nTHREE.Uniform.prototype = {\r\n\r\n\tconstructor: THREE.Uniform,\r\n\r\n\tonUpdate: function ( callback ) {\r\n\r\n\t\tthis.dynamic = true;\r\n\t\tthis.onUpdateCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/animation/AnimationAction.js\r\n\r\n/**\r\n *\r\n * Action provided by AnimationMixer for scheduling clip playback on specific\r\n * objects.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n *\r\n */\r\n\r\nTHREE.AnimationAction = function() {\r\n\r\n\tthrow new Error( \"THREE.AnimationAction: \" +\r\n\t\t\t\"Use mixer.clipAction for construction.\" );\r\n\r\n};\r\n\r\nTHREE.AnimationAction._new =\r\n\t\tfunction AnimationAction( mixer, clip, localRoot ) {\r\n\r\n\tthis._mixer = mixer;\r\n\tthis._clip = clip;\r\n\tthis._localRoot = localRoot || null;\r\n\r\n\tvar tracks = clip.tracks,\r\n\t\tnTracks = tracks.length,\r\n\t\tinterpolants = new Array( nTracks );\r\n\r\n\tvar interpolantSettings = {\r\n\t\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\r\n\t\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\r\n\t};\r\n\r\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\r\n\t\tinterpolants[ i ] = interpolant;\r\n\t\tinterpolant.settings = interpolantSettings;\r\n\r\n\t}\r\n\r\n\tthis._interpolantSettings = interpolantSettings;\r\n\r\n\tthis._interpolants = interpolants;\t// bound by the mixer\r\n\r\n\t// inside: PropertyMixer (managed by the mixer)\r\n\tthis._propertyBindings = new Array( nTracks );\r\n\r\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\r\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\r\n\r\n\tthis._timeScaleInterpolant = null;\r\n\tthis._weightInterpolant = null;\r\n\r\n\tthis.loop = THREE.LoopRepeat;\r\n\tthis._loopCount = -1;\r\n\r\n\t// global mixer time when the action is to be started\r\n\t// it's set back to 'null' upon start of the action\r\n\tthis._startTime = null;\r\n\r\n\t// scaled local time of the action\r\n\t// gets clamped or wrapped to 0..clip.duration according to loop\r\n\tthis.time = 0;\r\n\r\n\tthis.timeScale = 1;\r\n\tthis._effectiveTimeScale = 1;\r\n\r\n\tthis.weight = 1;\r\n\tthis._effectiveWeight = 1;\r\n\r\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\r\n\r\n\tthis.paused = false;\t\t\t\t// false -> zero effective time scale\r\n\tthis.enabled = true;\t\t\t\t// true -> zero effective weight\r\n\r\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\r\n\r\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\r\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\r\n\r\n};\r\n\r\nTHREE.AnimationAction._new.prototype = {\r\n\r\n\tconstructor: THREE.AnimationAction._new,\r\n\r\n\t// State & Scheduling\r\n\r\n\tplay: function() {\r\n\r\n\t\tthis._mixer._activateAction( this );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis._mixer._deactivateAction( this );\r\n\r\n\t\treturn this.reset();\r\n\r\n\t},\r\n\r\n\treset: function() {\r\n\r\n\t\tthis.paused = false;\r\n\t\tthis.enabled = true;\r\n\r\n\t\tthis.time = 0;\t\t\t// restart clip\r\n\t\tthis._loopCount = -1;\t// forget previous loops\r\n\t\tthis._startTime = null;\t// forget scheduling\r\n\r\n\t\treturn this.stopFading().stopWarping();\r\n\r\n\t},\r\n\r\n\tisRunning: function() {\r\n\r\n\t\tvar start = this._startTime;\r\n\r\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\r\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\r\n\r\n\t},\r\n\r\n\t// return true when play has been called\r\n\tisScheduled: function() {\r\n\r\n\t\treturn this._mixer._isActiveAction( this );\r\n\r\n\t},\r\n\r\n\tstartAt: function( time ) {\r\n\r\n\t\tthis._startTime = time;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetLoop: function( mode, repetitions ) {\r\n\r\n\t\tthis.loop = mode;\r\n\t\tthis.repetitions = repetitions;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// Weight\r\n\r\n\t// set the weight stopping any scheduled fading\r\n\t// although .enabled = false yields an effective weight of zero, this\r\n\t// method does *not* change .enabled, because it would be confusing\r\n\tsetEffectiveWeight: function( weight ) {\r\n\r\n\t\tthis.weight = weight;\r\n\r\n\t\t// note: same logic as when updated at runtime\r\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\r\n\r\n\t\treturn this.stopFading();\r\n\r\n\t},\r\n\r\n\t// return the weight considering fading and .enabled\r\n\tgetEffectiveWeight: function() {\r\n\r\n\t\treturn this._effectiveWeight;\r\n\r\n\t},\r\n\r\n\tfadeIn: function( duration ) {\r\n\r\n\t\treturn this._scheduleFading( duration, 0, 1 );\r\n\r\n\t},\r\n\r\n\tfadeOut: function( duration ) {\r\n\r\n\t\treturn this._scheduleFading( duration, 1, 0 );\r\n\r\n\t},\r\n\r\n\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\r\n\r\n\t\tvar mixer = this._mixer;\r\n\r\n\t\tfadeOutAction.fadeOut( duration );\r\n\t\tthis.fadeIn( duration );\r\n\r\n\t\tif( warp ) {\r\n\r\n\t\t\tvar fadeInDuration = this._clip.duration,\r\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\r\n\r\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\r\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\r\n\r\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\r\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossFadeTo: function( fadeInAction, duration, warp ) {\r\n\r\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\r\n\r\n\t},\r\n\r\n\tstopFading: function() {\r\n\r\n\t\tvar weightInterpolant = this._weightInterpolant;\r\n\r\n\t\tif ( weightInterpolant !== null ) {\r\n\r\n\t\t\tthis._weightInterpolant = null;\r\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// Time Scale Control\r\n\r\n\t// set the weight stopping any scheduled warping\r\n\t// although .paused = true yields an effective time scale of zero, this\r\n\t// method does *not* change .paused, because it would be confusing\r\n\tsetEffectiveTimeScale: function( timeScale ) {\r\n\r\n\t\tthis.timeScale = timeScale;\r\n\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t},\r\n\r\n\t// return the time scale considering warping and .paused\r\n\tgetEffectiveTimeScale: function() {\r\n\r\n\t\treturn this._effectiveTimeScale;\r\n\r\n\t},\r\n\r\n\tsetDuration: function( duration ) {\r\n\r\n\t\tthis.timeScale = this._clip.duration / duration;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t},\r\n\r\n\tsyncWith: function( action ) {\r\n\r\n\t\tthis.time = action.time;\r\n\t\tthis.timeScale = action.timeScale;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t},\r\n\r\n\thalt: function( duration ) {\r\n\r\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\r\n\r\n\t},\r\n\r\n\twarp: function( startTimeScale, endTimeScale, duration ) {\r\n\r\n\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\tinterpolant = this._timeScaleInterpolant,\r\n\r\n\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\tif ( interpolant === null ) {\r\n\r\n\t\t\tinterpolant = mixer._lendControlInterpolant(),\r\n\t\t\tthis._timeScaleInterpolant = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\tvar times = interpolant.parameterPositions,\r\n\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\ttimes[ 0 ] = now;\r\n\t\ttimes[ 1 ] = now + duration;\r\n\r\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\r\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tstopWarping: function() {\r\n\r\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\r\n\r\n\t\tif ( timeScaleInterpolant !== null ) {\r\n\r\n\t\t\tthis._timeScaleInterpolant = null;\r\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// Object Accessors\r\n\r\n\tgetMixer: function() {\r\n\r\n\t\treturn this._mixer;\r\n\r\n\t},\r\n\r\n\tgetClip: function() {\r\n\r\n\t\treturn this._clip;\r\n\r\n\t},\r\n\r\n\tgetRoot: function() {\r\n\r\n\t\treturn this._localRoot || this._mixer._root;\r\n\r\n\t},\r\n\r\n\t// Interna\r\n\r\n\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\r\n\t\t// called by the mixer\r\n\r\n\t\tvar startTime = this._startTime;\r\n\r\n\t\tif ( startTime !== null ) {\r\n\r\n\t\t\t// check for scheduled start of action\r\n\r\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\r\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\r\n\r\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// start\r\n\r\n\t\t\tthis._startTime = null; // unschedule\r\n\t\t\tdeltaTime = timeDirection * timeRunning;\r\n\r\n\t\t}\r\n\r\n\t\t// apply time scale and advance time\r\n\r\n\t\tdeltaTime *= this._updateTimeScale( time );\r\n\t\tvar clipTime = this._updateTime( deltaTime );\r\n\r\n\t\t// note: _updateTime may disable the action resulting in\r\n\t\t// an effective weight of 0\r\n\r\n\t\tvar weight = this._updateWeight( time );\r\n\r\n\t\tif ( weight > 0 ) {\r\n\r\n\t\t\tvar interpolants = this._interpolants;\r\n\t\t\tvar propertyMixers = this._propertyBindings;\r\n\r\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n\r\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\r\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_updateWeight: function( time ) {\r\n\r\n\t\tvar weight = 0;\r\n\r\n\t\tif ( this.enabled ) {\r\n\r\n\t\t\tweight = this.weight;\r\n\t\t\tvar interpolant = this._weightInterpolant;\r\n\r\n\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\tweight *= interpolantValue;\r\n\r\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\tthis.stopFading();\r\n\r\n\t\t\t\t\tif ( interpolantValue === 0 ) {\r\n\r\n\t\t\t\t\t\t// faded out, disable\r\n\t\t\t\t\t\tthis.enabled = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._effectiveWeight = weight;\r\n\t\treturn weight;\r\n\r\n\t},\r\n\r\n\t_updateTimeScale: function( time ) {\r\n\r\n\t\tvar timeScale = 0;\r\n\r\n\t\tif ( ! this.paused ) {\r\n\r\n\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\t\tvar interpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\ttimeScale *= interpolantValue;\r\n\r\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\tthis.stopWarping();\r\n\r\n\t\t\t\t\tif ( timeScale === 0 ) {\r\n\r\n\t\t\t\t\t\t// motion has halted, pause\r\n\t\t\t\t\t\tthis.paused = true;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// warp done - apply final time scale\r\n\t\t\t\t\t\tthis.timeScale = timeScale;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._effectiveTimeScale = timeScale;\r\n\t\treturn timeScale;\r\n\r\n\t},\r\n\r\n\t_updateTime: function( deltaTime ) {\r\n\r\n\t\tvar time = this.time + deltaTime;\r\n\r\n\t\tif ( deltaTime === 0 ) return time;\r\n\r\n\t\tvar duration = this._clip.duration,\r\n\r\n\t\t\tloop = this.loop,\r\n\t\t\tloopCount = this._loopCount;\r\n\r\n\t\tif ( loop === THREE.LoopOnce ) {\r\n\r\n\t\t\tif ( loopCount === -1 ) {\r\n\t\t\t\t// just started\r\n\r\n\t\t\t\tthis.loopCount = 0;\r\n\t\t\t\tthis._setEndings( true, true, false );\r\n\r\n\t\t\t}\r\n\r\n\t\t\thandle_stop: {\r\n\r\n\t\t\t\tif ( time >= duration ) {\r\n\r\n\t\t\t\t\ttime = duration;\r\n\r\n\t\t\t\t} else if ( time < 0 ) {\r\n\r\n\t\t\t\t\ttime = 0;\r\n\r\n\t\t\t\t} else break handle_stop;\r\n\r\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else { // repetitive Repeat or PingPong\r\n\r\n\t\t\tvar pingPong = ( loop === THREE.LoopPingPong );\r\n\r\n\t\t\tif ( loopCount === -1 ) {\r\n\t\t\t\t// just started\r\n\r\n\t\t\t\tif ( deltaTime >= 0 ) {\r\n\r\n\t\t\t\t\tloopCount = 0;\r\n\r\n\t\t\t\t\tthis._setEndings(\r\n\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// when looping in reverse direction, the initial\r\n\t\t\t\t\t// transition through zero counts as a repetition,\r\n\t\t\t\t\t// so leave loopCount at -1\r\n\r\n\t\t\t\t\tthis._setEndings(\r\n\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( time >= duration || time < 0 ) {\r\n\t\t\t\t// wrap around\r\n\r\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\r\n\t\t\t\ttime -= duration * loopDelta;\r\n\r\n\t\t\t\tloopCount += Math.abs( loopDelta );\r\n\r\n\t\t\t\tvar pending = this.repetitions - loopCount;\r\n\r\n\t\t\t\tif ( pending < 0 ) {\r\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\r\n\r\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// keep running\r\n\r\n\t\t\t\t\tif ( pending === 0 ) {\r\n\t\t\t\t\t\t// entering the last round\r\n\r\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\r\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._loopCount = loopCount;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\r\n\t\t\t\t// invert time for the \"pong round\"\r\n\r\n\t\t\t\tthis.time = time;\r\n\t\t\t\treturn duration - time;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.time = time;\r\n\t\treturn time;\r\n\r\n\t},\r\n\r\n\t_setEndings: function( atStart, atEnd, pingPong ) {\r\n\r\n\t\tvar settings = this._interpolantSettings;\r\n\r\n\t\tif ( pingPong ) {\r\n\r\n\t\t\tsettings.endingStart \t= THREE.ZeroSlopeEnding;\r\n\t\t\tsettings.endingEnd\t\t= THREE.ZeroSlopeEnding;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\r\n\r\n\t\t\tif ( atStart ) {\r\n\r\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\r\n\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsettings.endingStart = THREE.WrapAroundEnding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( atEnd ) {\r\n\r\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\r\n\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsettings.endingEnd \t = THREE.WrapAroundEnding;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_scheduleFading: function( duration, weightNow, weightThen ) {\r\n\r\n\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\tinterpolant = this._weightInterpolant;\r\n\r\n\t\tif ( interpolant === null ) {\r\n\r\n\t\t\tinterpolant = mixer._lendControlInterpolant(),\r\n\t\t\tthis._weightInterpolant = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\tvar times = interpolant.parameterPositions,\r\n\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\r\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/animation/AnimationClip.js\r\n\r\n/**\r\n *\r\n * Reusable set of Tracks that represent an animation.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.AnimationClip = function ( name, duration, tracks ) {\r\n\r\n\tthis.name = name;\r\n\tthis.tracks = tracks;\r\n\tthis.duration = ( duration !== undefined ) ? duration : -1;\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\t// this means it should figure out its duration by scanning the tracks\r\n\tif ( this.duration < 0 ) {\r\n\r\n\t\tthis.resetDuration();\r\n\r\n\t}\r\n\r\n\t// maybe only do these on demand, as doing them here could potentially slow down loading\r\n\t// but leaving these here during development as this ensures a lot of testing of these functions\r\n\tthis.trim();\r\n\tthis.optimize();\r\n\r\n};\r\n\r\nTHREE.AnimationClip.prototype = {\r\n\r\n\tconstructor: THREE.AnimationClip,\r\n\r\n\tresetDuration: function() {\r\n\r\n\t\tvar tracks = this.tracks,\r\n\t\t\tduration = 0;\r\n\r\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar track = this.tracks[ i ];\r\n\r\n\t\t\tduration = Math.max(\r\n\t\t\t\t\tduration, track.times[ track.times.length - 1 ] );\r\n\r\n\t\t}\r\n\r\n\t\tthis.duration = duration;\r\n\r\n\t},\r\n\r\n\ttrim: function() {\r\n\r\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\toptimize: function() {\r\n\r\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tthis.tracks[ i ].optimize();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// Static methods:\r\n\r\nObject.assign( THREE.AnimationClip, {\r\n\r\n\tparse: function( json ) {\r\n\r\n\t\tvar tracks = [],\r\n\t\t\tjsonTracks = json.tracks,\r\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\r\n\r\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\ttracks.push( THREE.KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn new THREE.AnimationClip( json.name, json.duration, tracks );\r\n\r\n\t},\r\n\r\n\r\n\ttoJSON: function( clip ) {\r\n\r\n\t\tvar tracks = [],\r\n\t\t\tclipTracks = clip.tracks;\r\n\r\n\t\tvar json = {\r\n\r\n\t\t\t'name': clip.name,\r\n\t\t\t'duration': clip.duration,\r\n\t\t\t'tracks': tracks\r\n\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\ttracks.push( THREE.KeyframeTrack.toJSON( clipTracks[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn json;\r\n\r\n\t},\r\n\r\n\r\n\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\r\n\r\n\t\tvar numMorphTargets = morphTargetSequence.length;\r\n\t\tvar tracks = [];\r\n\r\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\r\n\r\n\t\t\tvar times = [];\r\n\t\t\tvar values = [];\r\n\r\n\t\t\ttimes.push(\r\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\r\n\t\t\t\t\ti,\r\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\r\n\r\n\t\t\tvalues.push( 0, 1, 0 );\r\n\r\n\t\t\tvar order = THREE.AnimationUtils.getKeyframeOrder( times );\r\n\t\t\ttimes = THREE.AnimationUtils.sortedArray( times, 1, order );\r\n\t\t\tvalues = THREE.AnimationUtils.sortedArray( values, 1, order );\r\n\r\n\t\t\t// if there is a key at the first frame, duplicate it as the\r\n\t\t\t// last frame as well for perfect loop.\r\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\r\n\r\n\t\t\t\ttimes.push( numMorphTargets );\r\n\t\t\t\tvalues.push( values[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttracks.push(\r\n\t\t\t\t\tnew THREE.NumberKeyframeTrack(\r\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\r\n\t\t\t\t\t\ttimes, values\r\n\t\t\t\t\t).scale( 1.0 / fps ) );\r\n\t\t}\r\n\r\n\t\treturn new THREE.AnimationClip( name, -1, tracks );\r\n\r\n\t},\r\n\r\n\tfindByName: function( objectOrClipArray, name ) {\r\n\r\n\t\tvar clipArray = objectOrClipArray;\r\n\r\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\r\n\r\n\t\t\tvar o = objectOrClipArray;\r\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\r\n\r\n\t\t\tif ( clipArray[ i ].name === name ) {\r\n\r\n\t\t\t\treturn clipArray[ i ];\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t},\r\n\r\n\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\r\n\r\n\t\tvar animationToMorphTargets = {};\r\n\r\n\t\t// tested with https://regex101.com/ on trick sequences\r\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\r\n\r\n\t\t// sort morph target names into animation groups based\r\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\t\tvar parts = morphTarget.name.match( pattern );\r\n\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\t\tvar name = parts[ 1 ];\r\n\r\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\r\n\t\t\t\tif ( ! animationMorphTargets ) {\r\n\r\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationMorphTargets.push( morphTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar clips = [];\r\n\r\n\t\tfor ( var name in animationToMorphTargets ) {\r\n\r\n\t\t\tclips.push( THREE.AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn clips;\r\n\r\n\t},\r\n\r\n\t// parse the animation.hierarchy format\r\n\tparseAnimation: function( animation, bones, nodeName ) {\r\n\r\n\t\tif ( ! animation ) {\r\n\r\n\t\t\tconsole.error( \"  no animation in JSONLoader data\" );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar addNonemptyTrack = function(\r\n\t\t\t\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\r\n\r\n\t\t\t// only return track if there are actually keys.\r\n\t\t\tif ( animationKeys.length !== 0 ) {\r\n\r\n\t\t\t\tvar times = [];\r\n\t\t\t\tvar values = [];\r\n\r\n\t\t\t\tTHREE.AnimationUtils.flattenJSON(\r\n\t\t\t\t\t\tanimationKeys, times, values, propertyName );\r\n\r\n\t\t\t\t// empty keys are filtered out, so check again\r\n\t\t\t\tif ( times.length !== 0 ) {\r\n\r\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tvar tracks = [];\r\n\r\n\t\tvar clipName = animation.name || 'default';\r\n\t\t// automatic length determination in AnimationClip.\r\n\t\tvar duration = animation.length || -1;\r\n\t\tvar fps = animation.fps || 30;\r\n\r\n\t\tvar hierarchyTracks = animation.hierarchy || [];\r\n\r\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\r\n\r\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\r\n\r\n\t\t\t// skip empty tracks\r\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\r\n\r\n\t\t\t// process morph targets in a way exactly compatible\r\n\t\t\t// with AnimationHandler.init( animation )\r\n\t\t\tif ( animationKeys[0].morphTargets ) {\r\n\r\n\t\t\t\t// figure out all morph targets used in this track\r\n\t\t\t\tvar morphTargetNames = {};\r\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\r\n\r\n\t\t\t\t\tif ( animationKeys[k].morphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create a track for each morph target with all zero\r\n\t\t\t\t// morphTargetInfluences except for the keys in which\r\n\t\t\t\t// the morphTarget is named.\r\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\r\n\r\n\t\t\t\t\tvar times = [];\r\n\t\t\t\t\tvar values = [];\r\n\r\n\t\t\t\t\tfor ( var m = 0;\r\n\t\t\t\t\t\t\tm !== animationKeys[k].morphTargets.length; ++ m ) {\r\n\r\n\t\t\t\t\t\tvar animationKey = animationKeys[k];\r\n\r\n\t\t\t\t\t\ttimes.push( animationKey.time );\r\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttracks.push( new THREE.NumberKeyframeTrack(\r\n\t\t\t\t\t\t\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// ...assume skeletal animation\r\n\r\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.position',\r\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tTHREE.QuaternionKeyframeTrack, boneName + '.quaternion',\r\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.scale',\r\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( tracks.length === 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar clip = new THREE.AnimationClip( clipName, duration, tracks );\r\n\r\n\t\treturn clip;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/animation/AnimationMixer.js\r\n\r\n/**\r\n *\r\n * Player for AnimationClips.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.AnimationMixer = function( root ) {\r\n\r\n\tthis._root = root;\r\n\tthis._initMemoryManager();\r\n\tthis._accuIndex = 0;\r\n\r\n\tthis.time = 0;\r\n\r\n\tthis.timeScale = 1.0;\r\n\r\n};\r\n\r\nObject.assign( THREE.AnimationMixer.prototype, THREE.EventDispatcher.prototype, {\r\n\r\n\t// return an action for a clip optionally using a custom root target\r\n\t// object (this method allocates a lot of dynamic memory in case a\r\n\t// previously unknown clip/root combination is specified)\r\n\tclipAction: function( clip, optionalRoot ) {\r\n\r\n\t\tvar root = optionalRoot || this._root,\r\n\t\t\trootUuid = root.uuid,\r\n\r\n\t\t\tclipObject = typeof clip === 'string' ?\r\n\t\t\t\t\tTHREE.AnimationClip.findByName( root, clip ) : clip,\r\n\r\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\r\n\r\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\r\n\t\t\tprototypeAction = null;\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\tvar existingAction =\r\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( existingAction !== undefined ) {\r\n\r\n\t\t\t\treturn existingAction;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// we know the clip, so we don't have to parse all\r\n\t\t\t// the bindings again but can just copy\r\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\r\n\r\n\t\t\t// also, take the clip from the prototype action\r\n\t\t\tif ( clipObject === null )\r\n\t\t\t\tclipObject = prototypeAction._clip;\r\n\r\n\t\t}\r\n\r\n\t\t// clip must be known when specified via string\r\n\t\tif ( clipObject === null ) return null;\r\n\r\n\t\t// allocate all resources required to run it\r\n\t\tvar newAction = new THREE.\r\n\t\t\t\tAnimationMixer._Action( this, clipObject, optionalRoot );\r\n\r\n\t\tthis._bindAction( newAction, prototypeAction );\r\n\r\n\t\t// and make the action known to the memory manager\r\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\r\n\r\n\t\treturn newAction;\r\n\r\n\t},\r\n\r\n\t// get an existing action\r\n\texistingAction: function( clip, optionalRoot ) {\r\n\r\n\t\tvar root = optionalRoot || this._root,\r\n\t\t\trootUuid = root.uuid,\r\n\r\n\t\t\tclipObject = typeof clip === 'string' ?\r\n\t\t\t\t\tTHREE.AnimationClip.findByName( root, clip ) : clip,\r\n\r\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\r\n\r\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t},\r\n\r\n\t// deactivates all previously scheduled actions\r\n\tstopAllAction: function() {\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tnActions = this._nActiveActions,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\tthis._nActiveActions = 0;\r\n\t\tthis._nActiveBindings = 0;\r\n\r\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\tactions[ i ].reset();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].useCount = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// advance the time and update apply the animation\r\n\tupdate: function( deltaTime ) {\r\n\r\n\t\tdeltaTime *= this.timeScale;\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tnActions = this._nActiveActions,\r\n\r\n\t\t\ttime = this.time += deltaTime,\r\n\t\t\ttimeDirection = Math.sign( deltaTime ),\r\n\r\n\t\t\taccuIndex = this._accuIndex ^= 1;\r\n\r\n\t\t// run active actions\r\n\r\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\tvar action = actions[ i ];\r\n\r\n\t\t\tif ( action.enabled ) {\r\n\r\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tvar bindings = this._bindings,\r\n\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].apply( accuIndex );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// return this mixer's root target object\r\n\tgetRoot: function() {\r\n\r\n\t\treturn this._root;\r\n\r\n\t},\r\n\r\n\t// free all resources specific to a particular clip\r\n\tuncacheClip: function( clip ) {\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tclipUuid = clip.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t// note: just calling _removeInactiveAction would mess up the\r\n\t\t\t// iteration state and also require updating the state we can\r\n\t\t\t// just throw away\r\n\r\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\r\n\r\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar action = actionsToRemove[ i ];\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\r\n\t\t\t\tvar cacheIndex = action._cacheIndex,\r\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\r\n\r\n\t\t\t\taction._cacheIndex = null;\r\n\t\t\t\taction._byClipCacheIndex = null;\r\n\r\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\t\tactions.pop();\r\n\r\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// free all resources specific to a particular root target object\r\n\tuncacheRoot: function( root ) {\r\n\r\n\t\tvar rootUuid = root.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip;\r\n\r\n\t\tfor ( var clipUuid in actionsByClip ) {\r\n\r\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\r\n\t\t\t\taction = actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( action !== undefined ) {\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\tif ( bindingByName !== undefined ) {\r\n\r\n\t\t\tfor ( var trackName in bindingByName ) {\r\n\r\n\t\t\t\tvar binding = bindingByName[ trackName ];\r\n\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// remove a targeted clip from the cache\r\n\tuncacheAction: function( clip, optionalRoot ) {\r\n\r\n\t\tvar action = this.existingAction( clip, optionalRoot );\r\n\r\n\t\tif ( action !== null ) {\r\n\r\n\t\t\tthis._deactivateAction( action );\r\n\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\nTHREE.AnimationMixer._Action = THREE.AnimationAction._new;\r\n\r\n// Implementation details:\r\n\r\nObject.assign( THREE.AnimationMixer.prototype, {\r\n\r\n\t_bindAction: function( action, prototypeAction ) {\r\n\r\n\t\tvar root = action._localRoot || this._root,\r\n\t\t\ttracks = action._clip.tracks,\r\n\t\t\tnTracks = tracks.length,\r\n\t\t\tbindings = action._propertyBindings,\r\n\t\t\tinterpolants = action._interpolants,\r\n\t\t\trootUuid = root.uuid,\r\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\tif ( bindingsByName === undefined ) {\r\n\r\n\t\t\tbindingsByName = {};\r\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\tvar track = tracks[ i ],\r\n\t\t\t\ttrackName = track.name,\r\n\t\t\t\tbinding = bindingsByName[ trackName ];\r\n\r\n\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbinding = bindings[ i ];\r\n\r\n\t\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t\t// existing binding, make sure the cache knows\r\n\r\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\r\n\r\n\t\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar path = prototypeAction && prototypeAction.\r\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\r\n\r\n\t\t\t\tbinding = new THREE.PropertyMixer(\r\n\t\t\t\t\t\tTHREE.PropertyBinding.create( root, trackName, path ),\r\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\r\n\r\n\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_activateAction: function( action ) {\r\n\r\n\t\tif ( ! this._isActiveAction( action ) ) {\r\n\r\n\t\t\tif ( action._cacheIndex === null ) {\r\n\r\n\t\t\t\t// this action has been forgotten by the cache, but the user\r\n\t\t\t\t// appears to be still using it -> rebind\r\n\r\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\r\n\t\t\t\t\tclipUuid = action._clip.uuid,\r\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\t\t\tthis._bindAction( action,\r\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\r\n\r\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar bindings = action._propertyBindings;\r\n\r\n\t\t\t// increment reference counts / sort out state\r\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\r\n\r\n\t\t\t\t\tthis._lendBinding( binding );\r\n\t\t\t\t\tbinding.saveOriginalState();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._lendAction( action );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_deactivateAction: function( action ) {\r\n\r\n\t\tif ( this._isActiveAction( action ) ) {\r\n\r\n\t\t\tvar bindings = action._propertyBindings;\r\n\r\n\t\t\t// decrement reference counts / sort out state\r\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( -- binding.useCount === 0 ) {\r\n\r\n\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\tthis._takeBackBinding( binding );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._takeBackAction( action );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// Memory manager\r\n\r\n\t_initMemoryManager: function() {\r\n\r\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\r\n\t\tthis._nActiveActions = 0;\r\n\r\n\t\tthis._actionsByClip = {};\r\n\t\t// inside:\r\n\t\t// {\r\n\t\t// \t\tknownActions: Array< _Action >\t- used as prototypes\r\n\t\t// \t\tactionByRoot: _Action\t\t\t- lookup\r\n\t\t// }\r\n\r\n\r\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\t\tthis._nActiveBindings = 0;\r\n\r\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\r\n\r\n\t\tthis._controlInterpolants = []; // same game as above\r\n\t\tthis._nActiveControlInterpolants = 0;\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tthis.stats = {\r\n\r\n\t\t\tactions: {\r\n\t\t\t\tget total() { return scope._actions.length; },\r\n\t\t\t\tget inUse() { return scope._nActiveActions; }\r\n\t\t\t},\r\n\t\t\tbindings: {\r\n\t\t\t\tget total() { return scope._bindings.length; },\r\n\t\t\t\tget inUse() { return scope._nActiveBindings; }\r\n\t\t\t},\r\n\t\t\tcontrolInterpolants: {\r\n\t\t\t\tget total() { return scope._controlInterpolants.length; },\r\n\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t// Memory management for _Action objects\r\n\r\n\t_isActiveAction: function( action ) {\r\n\r\n\t\tvar index = action._cacheIndex;\r\n\t\treturn index !== null && index < this._nActiveActions;\r\n\r\n\t},\r\n\r\n\t_addInactiveAction: function( action, clipUuid, rootUuid ) {\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\tif ( actionsForClip === undefined ) {\r\n\r\n\t\t\tactionsForClip = {\r\n\r\n\t\t\t\tknownActions: [ action ],\r\n\t\t\t\tactionByRoot: {}\r\n\r\n\t\t\t};\r\n\r\n\t\t\taction._byClipCacheIndex = 0;\r\n\r\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar knownActions = actionsForClip.knownActions;\r\n\r\n\t\t\taction._byClipCacheIndex = knownActions.length;\r\n\t\t\tknownActions.push( action );\r\n\r\n\t\t}\r\n\r\n\t\taction._cacheIndex = actions.length;\r\n\t\tactions.push( action );\r\n\r\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\r\n\r\n\t},\r\n\r\n\t_removeInactiveAction: function( action ) {\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\r\n\t\t\tcacheIndex = action._cacheIndex;\r\n\r\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\tactions.pop();\r\n\r\n\t\taction._cacheIndex = null;\r\n\r\n\r\n\t\tvar clipUuid = action._clip.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\r\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\r\n\r\n\t\t\tlastKnownAction =\r\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\r\n\r\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\r\n\r\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\r\n\t\tknownActionsForClip.pop();\r\n\r\n\t\taction._byClipCacheIndex = null;\r\n\r\n\r\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\r\n\t\t\trootUuid = ( actions._localRoot || this._root ).uuid;\r\n\r\n\t\tdelete actionByRoot[ rootUuid ];\r\n\r\n\t\tif ( knownActionsForClip.length === 0 ) {\r\n\r\n\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t}\r\n\r\n\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t},\r\n\r\n\t_removeInactiveBindingsForAction: function( action ) {\r\n\r\n\t\tvar bindings = action._propertyBindings;\r\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\tif ( -- binding.referenceCount === 0 ) {\r\n\r\n\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_lendAction: function( action ) {\r\n\r\n\t\t// [ active actions |  inactive actions  ]\r\n\t\t// [  active actions >| inactive actions ]\r\n\t\t//                 s        a\r\n\t\t//                  <-swap->\r\n\t\t//                 a        s\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\tlastActiveIndex = this._nActiveActions ++,\r\n\r\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\r\n\r\n\t\taction._cacheIndex = lastActiveIndex;\r\n\t\tactions[ lastActiveIndex ] = action;\r\n\r\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\r\n\t\tactions[ prevIndex ] = firstInactiveAction;\r\n\r\n\t},\r\n\r\n\t_takeBackAction: function( action ) {\r\n\r\n\t\t// [  active actions  | inactive actions ]\r\n\t\t// [ active actions |< inactive actions  ]\r\n\t\t//        a        s\r\n\t\t//         <-swap->\r\n\t\t//        s        a\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\r\n\r\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\r\n\r\n\t\taction._cacheIndex = firstInactiveIndex;\r\n\t\tactions[ firstInactiveIndex ] = action;\r\n\r\n\t\tlastActiveAction._cacheIndex = prevIndex;\r\n\t\tactions[ prevIndex ] = lastActiveAction;\r\n\r\n\t},\r\n\r\n\t// Memory management for PropertyMixer objects\r\n\r\n\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\r\n\r\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\tbindings = this._bindings;\r\n\r\n\t\tif ( bindingByName === undefined ) {\r\n\r\n\t\t\tbindingByName = {};\r\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\r\n\r\n\t\t}\r\n\r\n\t\tbindingByName[ trackName ] = binding;\r\n\r\n\t\tbinding._cacheIndex = bindings.length;\r\n\t\tbindings.push( binding );\r\n\r\n\t},\r\n\r\n\t_removeInactiveBinding: function( binding ) {\r\n\r\n\t\tvar bindings = this._bindings,\r\n\t\t\tpropBinding = binding.binding,\r\n\t\t\trootUuid = propBinding.rootNode.uuid,\r\n\t\t\ttrackName = propBinding.path,\r\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\r\n\t\t\tcacheIndex = binding._cacheIndex;\r\n\r\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\r\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\r\n\t\tbindings.pop();\r\n\r\n\t\tdelete bindingByName[ trackName ];\r\n\r\n\t\tremove_empty_map: {\r\n\r\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\r\n\r\n\t\t\tdelete bindingsByRoot[ rootUuid ];\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_lendBinding: function( binding ) {\r\n\r\n\t\tvar bindings = this._bindings,\r\n\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\r\n\r\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\r\n\r\n\t\tbinding._cacheIndex = lastActiveIndex;\r\n\t\tbindings[ lastActiveIndex ] = binding;\r\n\r\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\r\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\r\n\r\n\t},\r\n\r\n\t_takeBackBinding: function( binding ) {\r\n\r\n\t\tvar bindings = this._bindings,\r\n\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\r\n\r\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\r\n\r\n\t\tbinding._cacheIndex = firstInactiveIndex;\r\n\t\tbindings[ firstInactiveIndex ] = binding;\r\n\r\n\t\tlastActiveBinding._cacheIndex = prevIndex;\r\n\t\tbindings[ prevIndex ] = lastActiveBinding;\r\n\r\n\t},\r\n\r\n\r\n\t// Memory management of Interpolants for weight and time scale\r\n\r\n\t_lendControlInterpolant: function() {\r\n\r\n\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\r\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\r\n\r\n\t\tif ( interpolant === undefined ) {\r\n\r\n\t\t\tinterpolant = new THREE.LinearInterpolant(\r\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\r\n\t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\r\n\r\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\r\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\treturn interpolant;\r\n\r\n\t},\r\n\r\n\t_takeBackControlInterpolant: function( interpolant ) {\r\n\r\n\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\tprevIndex = interpolant.__cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\r\n\r\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\r\n\r\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\r\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\r\n\r\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\r\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\r\n\r\n\t},\r\n\r\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\r\n\r\n} );\r\n\r\n// File:src/animation/AnimationObjectGroup.js\r\n\r\n/**\r\n *\r\n * A group of objects that receives a shared animation state.\r\n *\r\n * Usage:\r\n *\r\n * \t-\tAdd objects you would otherwise pass as 'root' to the\r\n * \t\tconstructor or the .clipAction method of AnimationMixer.\r\n *\r\n * \t-\tInstead pass this object as 'root'.\r\n *\r\n * \t-\tYou can also add and remove objects later when the mixer\r\n * \t\tis running.\r\n *\r\n * Note:\r\n *\r\n *  \tObjects of this class appear as one object to the mixer,\r\n *  \tso cache control of the individual objects must be done\r\n *  \ton the group.\r\n *\r\n * Limitation:\r\n *\r\n * \t- \tThe animated properties must be compatible among the\r\n * \t\tall objects in the group.\r\n *\r\n *  -\tA single property can either be controlled through a\r\n *  \ttarget group or directly, but not both.\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.AnimationObjectGroup = function( var_args ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\t// cached objects followed by the active ones\r\n\tthis._objects = Array.prototype.slice.call( arguments );\r\n\r\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\r\n\t// note: read by PropertyBinding.Composite\r\n\r\n\tvar indices = {};\r\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\r\n\r\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\tindices[ arguments[ i ].uuid ] = i;\r\n\r\n\t}\r\n\r\n\tthis._paths = [];\t\t\t\t\t// inside: string\r\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\r\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\r\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.stats = {\r\n\r\n\t\tobjects: {\r\n\t\t\tget total() { return scope._objects.length; },\r\n\t\t\tget inUse() { return this.total - scope.nCachedObjects_;  }\r\n\t\t},\r\n\r\n\t\tget bindingsPerObject() { return scope._bindings.length; }\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.AnimationObjectGroup.prototype = {\r\n\r\n\tconstructor: THREE.AnimationObjectGroup,\r\n\r\n\tadd: function( var_args ) {\r\n\r\n\t\tvar objects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tpaths = this._paths,\r\n\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index === undefined ) {\r\n\r\n\t\t\t\t// unknown object -> add it to the ACTIVE region\r\n\r\n\t\t\t\tindex = nObjects ++;\r\n\t\t\t\tindicesByUUID[ uuid ] = index;\r\n\t\t\t\tobjects.push( object );\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tbindings[ j ].push(\r\n\t\t\t\t\t\t\tnew THREE.PropertyBinding(\r\n\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( index < nCachedObjects ) {\r\n\r\n\t\t\t\tvar knownObject = objects[ index ];\r\n\r\n\t\t\t\t// move existing object to the ACTIVE region\r\n\r\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\r\n\r\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\r\n\t\t\t\tobjects[ firstActiveIndex ] = object;\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\r\n\t\t\t\t\tif ( binding === undefined ) {\r\n\r\n\t\t\t\t\t\t// since we do not bother to create new bindings\r\n\t\t\t\t\t\t// for objects that are cached, the binding may\r\n\t\t\t\t\t\t// or may not exist\r\n\r\n\t\t\t\t\t\tbinding = new THREE.PropertyBinding(\r\n\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( objects[ index ] !== knownObject) {\r\n\r\n\t\t\t\tconsole.error( \"Different objects with the same UUID \" +\r\n\t\t\t\t\t\t\"detected. Clean the caches or recreate your \" +\r\n\t\t\t\t\t\t\"infrastructure when reloading scenes...\" );\r\n\r\n\t\t\t} // else the object is already where we want it to be\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t},\r\n\r\n\tremove: function( var_args ) {\r\n\r\n\t\tvar objects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\r\n\r\n\t\t\t\t// move existing object into the CACHED region\r\n\r\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\r\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\r\n\r\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\r\n\t\t\t\tobjects[ index ] = firstActiveObject;\r\n\r\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\r\n\t\t\t\tobjects[ lastCachedIndex ] = object;\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\r\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\r\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t},\r\n\r\n\t// remove & forget\r\n\tuncache: function( var_args ) {\r\n\r\n\t\tvar objects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\tdelete indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index < nCachedObjects ) {\r\n\r\n\t\t\t\t\t// object is cached, shrink the CACHED region\r\n\r\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\r\n\t\t\t\t\t\tlastIndex = -- nObjects,\r\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\t// last cached object takes this object's place\r\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\t\t// last object goes to the activated slot and pop\r\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\r\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\r\n\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\r\n\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// object is active, just swap with the last and pop\r\n\r\n\t\t\t\t\tvar lastIndex = -- nObjects,\r\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = lastObject;\r\n\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\r\n\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} // cached or active\r\n\r\n\t\t\t} // if object is known\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t},\r\n\r\n\t// Internal interface used by befriended PropertyBinding.Composite:\r\n\r\n\tsubscribe_: function( path, parsedPath ) {\r\n\t\t// returns an array of bindings for the given path that is changed\r\n\t\t// according to the contained objects in the group\r\n\r\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\tindex = indicesByPath[ path ],\r\n\t\t\tbindings = this._bindings;\r\n\r\n\t\tif ( index !== undefined ) return bindings[ index ];\r\n\r\n\t\tvar paths = this._paths,\r\n\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\tobjects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tbindingsForPath = new Array( nObjects );\r\n\r\n\t\tindex = bindings.length;\r\n\r\n\t\tindicesByPath[ path ] = index;\r\n\r\n\t\tpaths.push( path );\r\n\t\tparsedPaths.push( parsedPath );\r\n\t\tbindings.push( bindingsForPath );\r\n\r\n\t\tfor ( var i = nCachedObjects,\r\n\t\t\t\tn = objects.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar object = objects[ i ];\r\n\r\n\t\t\tbindingsForPath[ i ] =\r\n\t\t\t\t\tnew THREE.PropertyBinding( object, path, parsedPath );\r\n\r\n\t\t}\r\n\r\n\t\treturn bindingsForPath;\r\n\r\n\t},\r\n\r\n\tunsubscribe_: function( path ) {\r\n\t\t// tells the group to forget about a property path and no longer\r\n\t\t// update the array previously obtained with 'subscribe_'\r\n\r\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\tindex = indicesByPath[ path ];\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar paths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\r\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\r\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\r\n\r\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\r\n\r\n\t\t\tbindings[ index ] = lastBindings;\r\n\t\t\tbindings.pop();\r\n\r\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\r\n\t\t\tparsedPaths.pop();\r\n\r\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\r\n\t\t\tpaths.pop();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/animation/AnimationUtils.js\r\n\r\n/**\r\n * @author tschw\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.AnimationUtils = {\r\n\r\n\t// same as Array.prototype.slice, but also works on typed arrays\r\n\tarraySlice: function( array, from, to ) {\r\n\r\n\t\tif ( THREE.AnimationUtils.isTypedArray( array ) ) {\r\n\r\n\t\t\treturn new array.constructor( array.subarray( from, to ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn array.slice( from, to );\r\n\r\n\t},\r\n\r\n\t// converts an array to a specific type\r\n\tconvertArray: function( array, type, forceClone ) {\r\n\r\n\t\tif ( ! array || // let 'undefined' and 'null' pass\r\n\t\t\t\t! forceClone && array.constructor === type ) return array;\r\n\r\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\r\n\r\n\t\t\treturn new type( array ); // create typed array\r\n\r\n\t\t}\r\n\r\n\t\treturn Array.prototype.slice.call( array ); // create Array\r\n\r\n\t},\r\n\r\n\tisTypedArray: function( object ) {\r\n\r\n\t\treturn ArrayBuffer.isView( object ) &&\r\n\t\t\t\t! ( object instanceof DataView );\r\n\r\n\t},\r\n\r\n\t// returns an array by which times and values can be sorted\r\n\tgetKeyframeOrder: function( times ) {\r\n\r\n\t\tfunction compareTime( i, j ) {\r\n\r\n\t\t\treturn times[ i ] - times[ j ];\r\n\r\n\t\t}\r\n\r\n\t\tvar n = times.length;\r\n\t\tvar result = new Array( n );\r\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\r\n\r\n\t\tresult.sort( compareTime );\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\r\n\tsortedArray: function( values, stride, order ) {\r\n\r\n\t\tvar nValues = values.length;\r\n\t\tvar result = new values.constructor( nValues );\r\n\r\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\r\n\r\n\t\t\tvar srcOffset = order[ i ] * stride;\r\n\r\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\t// function for parsing AOS keyframe formats\r\n\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\r\n\r\n\t\tvar i = 1, key = jsonKeys[ 0 ];\r\n\r\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\r\n\r\n\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( key === undefined ) return; // no data\r\n\r\n\t\tvar value = key[ valuePropertyName ];\r\n\t\tif ( value === undefined ) return; // no data\r\n\r\n\t\tif ( Array.isArray( value ) ) {\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t} while ( key !== undefined );\r\n\r\n\t\t} else if ( value.toArray !== undefined ) {\r\n\t\t\t// ...assume THREE.Math-ish\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\tvalue.toArray( values, values.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t} while ( key !== undefined );\r\n\r\n\t\t} else {\r\n\t\t\t// otherwise push as-is\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\tvalues.push( value );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t} while ( key !== undefined );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/animation/KeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A timed sequence of keyframes for a specific property.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.KeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tif( name === undefined ) throw new Error( \"track name is undefined\" );\r\n\r\n\tif( times === undefined || times.length === 0 ) {\r\n\r\n\t\tthrow new Error( \"no keyframes in track named \" + name );\r\n\r\n\t}\r\n\r\n\tthis.name = name;\r\n\r\n\tthis.times = THREE.AnimationUtils.convertArray( times, this.TimeBufferType );\r\n\tthis.values = THREE.AnimationUtils.convertArray( values, this.ValueBufferType );\r\n\r\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\r\n\r\n\tthis.validate();\r\n\tthis.optimize();\r\n\r\n};\r\n\r\nTHREE.KeyframeTrack.prototype = {\r\n\r\n\tconstructor: THREE.KeyframeTrack,\r\n\r\n\tTimeBufferType: Float32Array,\r\n\tValueBufferType: Float32Array,\r\n\r\n\tDefaultInterpolation: THREE.InterpolateLinear,\r\n\r\n\tInterpolantFactoryMethodDiscrete: function( result ) {\r\n\r\n\t\treturn new THREE.DiscreteInterpolant(\r\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n\t},\r\n\r\n\tInterpolantFactoryMethodLinear: function( result ) {\r\n\r\n\t\treturn new THREE.LinearInterpolant(\r\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n\t},\r\n\r\n\tInterpolantFactoryMethodSmooth: function( result ) {\r\n\r\n\t\treturn new THREE.CubicInterpolant(\r\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n\t},\r\n\r\n\tsetInterpolation: function( interpolation ) {\r\n\r\n\t\tvar factoryMethod;\r\n\r\n\t\tswitch ( interpolation ) {\r\n\r\n\t\t\tcase THREE.InterpolateDiscrete:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.InterpolateLinear:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.InterpolateSmooth:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif ( factoryMethod === undefined ) {\r\n\r\n\t\t\tvar message = \"unsupported interpolation for \" +\r\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\r\n\r\n\t\t\tif ( this.createInterpolant === undefined ) {\r\n\r\n\t\t\t\t// fall back to default, unless the default itself is messed up\r\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\r\n\r\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconsole.warn( message );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.createInterpolant = factoryMethod;\r\n\r\n\t},\r\n\r\n\tgetInterpolation: function() {\r\n\r\n\t\tswitch ( this.createInterpolant ) {\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\r\n\r\n\t\t\t\treturn THREE.InterpolateDiscrete;\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodLinear:\r\n\r\n\t\t\t\treturn THREE.InterpolateLinear;\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\r\n\r\n\t\t\t\treturn THREE.InterpolateSmooth;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetValueSize: function() {\r\n\r\n\t\treturn this.values.length / this.times.length;\r\n\r\n\t},\r\n\r\n\t// move all keyframes either forwards or backwards in time\r\n\tshift: function( timeOffset ) {\r\n\r\n\t\tif( timeOffset !== 0.0 ) {\r\n\r\n\t\t\tvar times = this.times;\r\n\r\n\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttimes[ i ] += timeOffset;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\tscale: function( timeScale ) {\r\n\r\n\t\tif( timeScale !== 1.0 ) {\r\n\r\n\t\t\tvar times = this.times;\r\n\r\n\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttimes[ i ] *= timeScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\ttrim: function( startTime, endTime ) {\r\n\r\n\t\tvar times = this.times,\r\n\t\t\tnKeys = times.length,\r\n\t\t\tfrom = 0,\r\n\t\t\tto = nKeys - 1;\r\n\r\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\r\n\t\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\r\n\r\n\t\t++ to; // inclusive -> exclusive bound\r\n\r\n\t\tif( from !== 0 || to !== nKeys ) {\r\n\r\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\r\n\t\t\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\r\n\r\n\t\t\tvar stride = this.getValueSize();\r\n\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, from, to );\r\n\t\t\tthis.values = THREE.AnimationUtils.\r\n\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\tvalidate: function() {\r\n\r\n\t\tvar valid = true;\r\n\r\n\t\tvar valueSize = this.getValueSize();\r\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\r\n\r\n\t\t\tconsole.error( \"invalid value size in track\", this );\r\n\t\t\tvalid = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar times = this.times,\r\n\t\t\tvalues = this.values,\r\n\r\n\t\t\tnKeys = times.length;\r\n\r\n\t\tif( nKeys === 0 ) {\r\n\r\n\t\t\tconsole.error( \"track is empty\", this );\r\n\t\t\tvalid = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar prevTime = null;\r\n\r\n\t\tfor( var i = 0; i !== nKeys; i ++ ) {\r\n\r\n\t\t\tvar currTime = times[ i ];\r\n\r\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\r\n\r\n\t\t\t\tconsole.error( \"time is not a valid number\", this, i, currTime );\r\n\t\t\t\tvalid = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif( prevTime !== null && prevTime > currTime ) {\r\n\r\n\t\t\t\tconsole.error( \"out of order keys\", this, i, currTime, prevTime );\r\n\t\t\t\tvalid = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprevTime = currTime;\r\n\r\n\t\t}\r\n\r\n\t\tif ( values !== undefined ) {\r\n\r\n\t\t\tif ( THREE.AnimationUtils.isTypedArray( values ) ) {\r\n\r\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar value = values[ i ];\r\n\r\n\t\t\t\t\tif ( isNaN( value ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( \"value is not a valid number\", this, i, value );\r\n\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\r\n\t},\r\n\r\n\t// removes equivalent sequential keys as common in morph target sequences\r\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\toptimize: function() {\r\n\r\n\t\tvar times = this.times,\r\n\t\t\tvalues = this.values,\r\n\t\t\tstride = this.getValueSize(),\r\n\r\n\t\t\twriteIndex = 1;\r\n\r\n\t\tfor( var i = 1, n = times.length - 1; i <= n; ++ i ) {\r\n\r\n\t\t\tvar keep = false;\r\n\r\n\t\t\tvar time = times[ i ];\r\n\t\t\tvar timeNext = times[ i + 1 ];\r\n\r\n\t\t\t// remove adjacent keyframes scheduled at the same time\r\n\r\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\r\n\r\n\t\t\t\t// remove unnecessary keyframes same as their neighbors\r\n\t\t\t\tvar offset = i * stride,\r\n\t\t\t\t\toffsetP = offset - stride,\r\n\t\t\t\t\toffsetN = offset + stride;\r\n\r\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\tvar value = values[ offset + j ];\r\n\r\n\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\r\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\r\n\r\n\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// in-place compaction\r\n\r\n\t\t\tif ( keep ) {\r\n\r\n\t\t\t\tif ( i !== writeIndex ) {\r\n\r\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\r\n\r\n\t\t\t\t\tvar readOffset = i * stride,\r\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\r\n\r\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t++ writeIndex;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( writeIndex !== times.length ) {\r\n\r\n\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, 0, writeIndex );\r\n\t\t\tthis.values = THREE.AnimationUtils.arraySlice( values, 0, writeIndex * stride );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// Static methods:\r\n\r\nObject.assign( THREE.KeyframeTrack, {\r\n\r\n\t// Serialization (in static context, because of constructor invocation\r\n\t// and automatic invocation of .toJSON):\r\n\r\n\tparse: function( json ) {\r\n\r\n\t\tif( json.type === undefined ) {\r\n\r\n\t\t\tthrow new Error( \"track type undefined, can not parse\" );\r\n\r\n\t\t}\r\n\r\n\t\tvar trackType = THREE.KeyframeTrack._getTrackTypeForValueTypeName( json.type );\r\n\r\n\t\tif ( json.times === undefined ) {\r\n\r\n\t\t\tvar times = [], values = [];\r\n\r\n\t\t\tTHREE.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\r\n\r\n\t\t\tjson.times = times;\r\n\t\t\tjson.values = values;\r\n\r\n\t\t}\r\n\r\n\t\t// derived classes can define a static parse method\r\n\t\tif ( trackType.parse !== undefined ) {\r\n\r\n\t\t\treturn trackType.parse( json );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// by default, we asssume a constructor compatible with the base\r\n\t\t\treturn new trackType(\r\n\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function( track ) {\r\n\r\n\t\tvar trackType = track.constructor;\r\n\r\n\t\tvar json;\r\n\r\n\t\t// derived classes can define a static toJSON method\r\n\t\tif ( trackType.toJSON !== undefined ) {\r\n\r\n\t\t\tjson = trackType.toJSON( track );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// by default, we assume the data can be serialized as-is\r\n\t\t\tjson = {\r\n\r\n\t\t\t\t'name': track.name,\r\n\t\t\t\t'times': THREE.AnimationUtils.convertArray( track.times, Array ),\r\n\t\t\t\t'values': THREE.AnimationUtils.convertArray( track.values, Array )\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar interpolation = track.getInterpolation();\r\n\r\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\r\n\r\n\t\t\t\tjson.interpolation = interpolation;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tjson.type = track.ValueTypeName; // mandatory\r\n\r\n\t\treturn json;\r\n\r\n\t},\r\n\r\n\t_getTrackTypeForValueTypeName: function( typeName ) {\r\n\r\n\t\tswitch( typeName.toLowerCase() ) {\r\n\r\n\t\t\tcase \"scalar\":\r\n\t\t\tcase \"double\":\r\n\t\t\tcase \"float\":\r\n\t\t\tcase \"number\":\r\n\t\t\tcase \"integer\":\r\n\r\n\t\t\t\treturn THREE.NumberKeyframeTrack;\r\n\r\n\t\t\tcase \"vector\":\r\n\t\t\tcase \"vector2\":\r\n\t\t\tcase \"vector3\":\r\n\t\t\tcase \"vector4\":\r\n\r\n\t\t\t\treturn THREE.VectorKeyframeTrack;\r\n\r\n\t\t\tcase \"color\":\r\n\r\n\t\t\t\treturn THREE.ColorKeyframeTrack;\r\n\r\n\t\t\tcase \"quaternion\":\r\n\r\n\t\t\t\treturn THREE.QuaternionKeyframeTrack;\r\n\r\n\t\t\tcase \"bool\":\r\n\t\t\tcase \"boolean\":\r\n\r\n\t\t\t\treturn THREE.BooleanKeyframeTrack;\r\n\r\n\t\t\tcase \"string\":\r\n\r\n\t\t\t\treturn THREE.StringKeyframeTrack;\r\n\r\n\t\t}\r\n\r\n\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/animation/PropertyBinding.js\r\n\r\n/**\r\n *\r\n * A reference to a real property in the scene graph.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.PropertyBinding = function ( rootNode, path, parsedPath ) {\r\n\r\n\tthis.path = path;\r\n\tthis.parsedPath = parsedPath ||\r\n\t\t\tTHREE.PropertyBinding.parseTrackName( path );\r\n\r\n\tthis.node = THREE.PropertyBinding.findNode(\r\n\t\t\trootNode, this.parsedPath.nodeName ) || rootNode;\r\n\r\n\tthis.rootNode = rootNode;\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.prototype = {\r\n\r\n\tconstructor: THREE.PropertyBinding,\r\n\r\n\tgetValue: function getValue_unbound( targetArray, offset ) {\r\n\r\n\t\tthis.bind();\r\n\t\tthis.getValue( targetArray, offset );\r\n\r\n\t\t// Note: This class uses a State pattern on a per-method basis:\r\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n\t\t// prototype version of these methods with one that represents\r\n\t\t// the bound state. When the property is not found, the methods\r\n\t\t// become no-ops.\r\n\r\n\t},\r\n\r\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\r\n\r\n\t\tthis.bind();\r\n\t\tthis.setValue( sourceArray, offset );\r\n\r\n\t},\r\n\r\n\t// create getter / setter pair for a property in the scene graph\r\n\tbind: function() {\r\n\r\n\t\tvar targetObject = this.node,\r\n\t\t\tparsedPath = this.parsedPath,\r\n\r\n\t\t\tobjectName = parsedPath.objectName,\r\n\t\t\tpropertyName = parsedPath.propertyName,\r\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\r\n\r\n\t\tif ( ! targetObject ) {\r\n\r\n\t\t\ttargetObject = THREE.PropertyBinding.findNode(\r\n\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\r\n\r\n\t\t\tthis.node = targetObject;\r\n\r\n\t\t}\r\n\r\n\t\t// set fail state so we can just 'return' on error\r\n\t\tthis.getValue = this._getValue_unavailable;\r\n\t\tthis.setValue = this._setValue_unavailable;\r\n\r\n \t\t// ensure there is a value node\r\n\t\tif ( ! targetObject ) {\r\n\r\n\t\t\tconsole.error( \"  trying to update node for track: \" + this.path + \" but it wasn't found.\" );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif( objectName ) {\r\n\r\n\t\t\tvar objectIndex = parsedPath.objectIndex;\r\n\r\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\t\t\tswitch ( objectName ) {\r\n\r\n\t\t\t\tcase 'materials':\r\n\r\n\t\t\t\t\tif( ! targetObject.material ) {\r\n\r\n\t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( ! targetObject.material.materials ) {\r\n\r\n\t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'bones':\r\n\r\n\t\t\t\t\tif( ! targetObject.skeleton ) {\r\n\r\n\t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\r\n\t\t\t\t\t// and convert the integer string to a true integer.\r\n\r\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\r\n\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( targetObject[i].name === objectIndex ) {\r\n\r\n\t\t\t\t\t\t\tobjectIndex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( objectIndex !== undefined ) {\r\n\r\n\t\t\t\tif( targetObject[ objectIndex ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// resolve property\r\n\t\tvar nodeProperty = targetObject[ propertyName ];\r\n\r\n\t\tif ( ! nodeProperty ) {\r\n\r\n\t\t\tvar nodeName = parsedPath.nodeName;\r\n\r\n\t\t\tconsole.error( \"  trying to update property for track: \" + nodeName +\r\n\t\t\t\t\t'.' + propertyName + \" but it wasn't found.\", targetObject );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// determine versioning scheme\r\n\t\tvar versioning = this.Versioning.None;\r\n\r\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\r\n\r\n\t\t\tversioning = this.Versioning.NeedsUpdate;\r\n\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\r\n\r\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t}\r\n\r\n\t\t// determine how the property gets bound\r\n\t\tvar bindingType = this.BindingType.Direct;\r\n\r\n\t\tif ( propertyIndex !== undefined ) {\r\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\r\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\r\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\r\n\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\tif ( ! targetObject.geometry ) {\r\n\r\n\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\r\n\r\n\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( targetObject.geometry.morphTargets[i].name === propertyIndex ) {\r\n\r\n\t\t\t\t\t\tpropertyIndex = i;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbindingType = this.BindingType.ArrayElement;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\tthis.propertyIndex = propertyIndex;\r\n\r\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\r\n\t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\r\n\t\t\tbindingType = this.BindingType.HasFromToArray;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t} else if ( nodeProperty.length !== undefined ) {\r\n\r\n\t\t\tbindingType = this.BindingType.EntireArray;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.propertyName = propertyName;\r\n\r\n\t\t}\r\n\r\n\t\t// select getter / setter\r\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\r\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\r\n\r\n\t},\r\n\r\n\tunbind: function() {\r\n\r\n\t\tthis.node = null;\r\n\r\n\t\t// back to the prototype version of getValue / setValue\r\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\r\n\t\tthis.getValue = this._getValue_unbound;\r\n\t\tthis.setValue = this._setValue_unbound;\r\n\r\n\t}\r\n\r\n};\r\n\r\nObject.assign( THREE.PropertyBinding.prototype, { // prototype, continued\r\n\r\n\t// these are used to \"bind\" a nonexistent property\r\n\t_getValue_unavailable: function() {},\r\n\t_setValue_unavailable: function() {},\r\n\r\n\t// initial state of these methods that calls 'bind'\r\n\t_getValue_unbound: THREE.PropertyBinding.prototype.getValue,\r\n\t_setValue_unbound: THREE.PropertyBinding.prototype.setValue,\r\n\r\n\tBindingType: {\r\n\t\tDirect: 0,\r\n\t\tEntireArray: 1,\r\n\t\tArrayElement: 2,\r\n\t\tHasFromToArray: 3\r\n\t},\r\n\r\n\tVersioning: {\r\n\t\tNone: 0,\r\n\t\tNeedsUpdate: 1,\r\n\t\tMatrixWorldNeedsUpdate: 2\r\n\t},\r\n\r\n\tGetterByBindingType: [\r\n\r\n\t\tfunction getValue_direct( buffer, offset ) {\r\n\r\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\r\n\r\n\t\t},\r\n\r\n\t\tfunction getValue_array( buffer, offset ) {\r\n\r\n\t\t\tvar source = this.resolvedProperty;\r\n\r\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tfunction getValue_arrayElement( buffer, offset ) {\r\n\r\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\r\n\r\n\t\t},\r\n\r\n\t\tfunction getValue_toArray( buffer, offset ) {\r\n\r\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\r\n\r\n\t\t}\r\n\r\n\t],\r\n\r\n\tSetterByBindingTypeAndVersioning: [\r\n\r\n\t\t[\r\n\t\t\t// Direct\r\n\r\n\t\t\tfunction setValue_direct( buffer, offset ) {\r\n\r\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t], [\r\n\r\n\t\t\t// EntireArray\r\n\r\n\t\t\tfunction setValue_array( buffer, offset ) {\r\n\r\n\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t], [\r\n\r\n\t\t\t// ArrayElement\r\n\r\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t], [\r\n\r\n\t\t\t// HasToFromArray\r\n\r\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t]\r\n\r\n\t]\r\n\r\n} );\r\n\r\nTHREE.PropertyBinding.Composite =\r\n\t\tfunction( targetGroup, path, optionalParsedPath ) {\r\n\r\n\tvar parsedPath = optionalParsedPath ||\r\n\t\t\tTHREE.PropertyBinding.parseTrackName( path );\r\n\r\n\tthis._targetGroup = targetGroup;\r\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.Composite.prototype = {\r\n\r\n\tconstructor: THREE.PropertyBinding.Composite,\r\n\r\n\tgetValue: function( array, offset ) {\r\n\r\n\t\tthis.bind(); // bind all binding\r\n\r\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\r\n\t\t\tbinding = this._bindings[ firstValidIndex ];\r\n\r\n\t\t// and only call .getValue on the first\r\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\r\n\r\n\t},\r\n\r\n\tsetValue: function( array, offset ) {\r\n\r\n\t\tvar bindings = this._bindings;\r\n\r\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].setValue( array, offset );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tbind: function() {\r\n\r\n\t\tvar bindings = this._bindings;\r\n\r\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].bind();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tunbind: function() {\r\n\r\n\t\tvar bindings = this._bindings;\r\n\r\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].unbind();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.create = function( root, path, parsedPath ) {\r\n\r\n\tif ( ! ( root instanceof THREE.AnimationObjectGroup ) ) {\r\n\r\n\t\treturn new THREE.PropertyBinding( root, path, parsedPath );\r\n\r\n\t} else {\r\n\r\n\t\treturn new THREE.PropertyBinding.Composite( root, path, parsedPath );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.parseTrackName = function( trackName ) {\r\n\r\n\t// matches strings in the form of:\r\n\t//    nodeName.property\r\n\t//    nodeName.property[accessor]\r\n\t//    nodeName.material.property[accessor]\r\n\t//    uuid.property[accessor]\r\n\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\r\n\t//    parentName/nodeName.property\r\n\t//    parentName/parentName/nodeName.property[index]\r\n\t//\t  .bone[Armature.DEF_cog].position\r\n\t// created and tested via https://regex101.com/#javascript\r\n\r\n\tvar re = /^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/;\r\n\tvar matches = re.exec(trackName);\r\n\r\n\tif( ! matches ) {\r\n\t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\r\n\t}\r\n\r\n    if (matches.index === re.lastIndex) {\r\n        re.lastIndex++;\r\n    }\r\n\r\n\tvar results = {\r\n\t\t// directoryName: matches[1], // (tschw) currently unused\r\n\t\tnodeName: matches[3], \t// allowed to be null, specified root node.\r\n\t\tobjectName: matches[5],\r\n\t\tobjectIndex: matches[7],\r\n\t\tpropertyName: matches[9],\r\n\t\tpropertyIndex: matches[11]\t// allowed to be null, specifies that the whole property is set.\r\n\t};\r\n\r\n\tif( results.propertyName === null || results.propertyName.length === 0 ) {\r\n\t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\r\n\t}\r\n\r\n\treturn results;\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.findNode = function( root, nodeName ) {\r\n\r\n\tif( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\r\n\r\n\t\treturn root;\r\n\r\n\t}\r\n\r\n\t// search into skeleton bones.\r\n\tif( root.skeleton ) {\r\n\r\n\t\tvar searchSkeleton = function( skeleton ) {\r\n\r\n\t\t\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\r\n\r\n\t\t\t\tvar bone = skeleton.bones[i];\r\n\r\n\t\t\t\tif( bone.name === nodeName ) {\r\n\r\n\t\t\t\t\treturn bone;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t};\r\n\r\n\t\tvar bone = searchSkeleton( root.skeleton );\r\n\r\n\t\tif( bone ) {\r\n\r\n\t\t\treturn bone;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// search into node subtree.\r\n\tif( root.children ) {\r\n\r\n\t\tvar searchNodeSubtree = function( children ) {\r\n\r\n\t\t\tfor( var i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\tvar childNode = children[i];\r\n\r\n\t\t\t\tif( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n\r\n\t\t\t\t\treturn childNode;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar result = searchNodeSubtree( childNode.children );\r\n\r\n\t\t\t\tif( result ) return result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t};\r\n\r\n\t\tvar subTreeNode = searchNodeSubtree( root.children );\r\n\r\n\t\tif( subTreeNode ) {\r\n\r\n\t\t\treturn subTreeNode;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n};\r\n\r\n// File:src/animation/PropertyMixer.js\r\n\r\n/**\r\n *\r\n * Buffered scene graph property that allows weighted accumulation.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.PropertyMixer = function ( binding, typeName, valueSize ) {\r\n\r\n\tthis.binding = binding;\r\n\tthis.valueSize = valueSize;\r\n\r\n\tvar bufferType = Float64Array,\r\n\t\tmixFunction;\r\n\r\n\tswitch ( typeName ) {\r\n\r\n\t\tcase 'quaternion':\t\t\tmixFunction = this._slerp;\t\tbreak;\r\n\r\n\t\tcase 'string':\r\n\t\tcase 'bool':\r\n\r\n\t\t\tbufferType = Array,\t\tmixFunction = this._select;\t\tbreak;\r\n\r\n\t\tdefault:\t\t\t\t\tmixFunction = this._lerp;\r\n\r\n\t}\r\n\r\n\tthis.buffer = new bufferType( valueSize * 4 );\r\n\t// layout: [ incoming | accu0 | accu1 | orig ]\r\n\t//\r\n\t// interpolators can use .buffer as their .result\r\n\t// the data then goes to 'incoming'\r\n\t//\r\n\t// 'accu0' and 'accu1' are used frame-interleaved for\r\n\t// the cumulative result and are compared to detect\r\n\t// changes\r\n\t//\r\n\t// 'orig' stores the original state of the property\r\n\r\n\tthis._mixBufferRegion = mixFunction;\r\n\r\n\tthis.cumulativeWeight = 0;\r\n\r\n\tthis.useCount = 0;\r\n\tthis.referenceCount = 0;\r\n\r\n};\r\n\r\nTHREE.PropertyMixer.prototype = {\r\n\r\n\tconstructor: THREE.PropertyMixer,\r\n\r\n\t// accumulate data in the 'incoming' region into 'accu<i>'\r\n\taccumulate: function( accuIndex, weight ) {\r\n\r\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\r\n\t\t// the weight and shouldn't have made the call in the first place\r\n\r\n\t\tvar buffer = this.buffer,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\tcurrentWeight = this.cumulativeWeight;\r\n\r\n\t\tif ( currentWeight === 0 ) {\r\n\r\n\t\t\t// accuN := incoming * weight\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentWeight = weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// accuN := accuN + incoming * weight\r\n\r\n\t\t\tcurrentWeight += weight;\r\n\t\t\tvar mix = weight / currentWeight;\r\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cumulativeWeight = currentWeight;\r\n\r\n\t},\r\n\r\n\t// apply the state of 'accu<i>' to the binding when accus differ\r\n\tapply: function( accuIndex ) {\r\n\r\n\t\tvar stride = this.valueSize,\r\n\t\t\tbuffer = this.buffer,\r\n\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\tweight = this.cumulativeWeight,\r\n\r\n\t\t\tbinding = this.binding;\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\tif ( weight < 1 ) {\r\n\r\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\r\n\r\n\t\t\tvar originalValueOffset = stride * 3;\r\n\r\n\t\t\tthis._mixBufferRegion(\r\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\r\n\r\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\r\n\r\n\t\t\t\t// value has changed -> update scene graph\r\n\r\n\t\t\t\tbinding.setValue( buffer, offset );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// remember the state of the bound property and copy it to both accus\r\n\tsaveOriginalState: function() {\r\n\r\n\t\tvar binding = this.binding;\r\n\r\n\t\tvar buffer = this.buffer,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toriginalValueOffset = stride * 3;\r\n\r\n\t\tbinding.getValue( buffer, originalValueOffset );\r\n\r\n\t\t// accu[0..1] := orig -- initially detect changes against the original\r\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\r\n\r\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\r\n\r\n\t\t}\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\r\n\t},\r\n\r\n\t// apply the state previously taken via 'saveOriginalState' to the binding\r\n\trestoreOriginalState: function() {\r\n\r\n\t\tvar originalValueOffset = this.valueSize * 3;\r\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\r\n\r\n\t},\r\n\r\n\r\n\t// mix functions\r\n\r\n\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tif ( t >= 0.5 ) {\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tTHREE.Quaternion.slerpFlat( buffer, dstOffset,\r\n\t\t\t\tbuffer, dstOffset, buffer, srcOffset, t );\r\n\r\n\t},\r\n\r\n\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tvar s = 1 - t;\r\n\r\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tvar j = dstOffset + i;\r\n\r\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/animation/tracks/BooleanKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of Boolean keyframe values.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.BooleanKeyframeTrack = function ( name, times, values ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values );\r\n\r\n};\r\n\r\nTHREE.BooleanKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.BooleanKeyframeTrack,\r\n\r\n\tValueTypeName: 'bool',\r\n\tValueBufferType: Array,\r\n\r\n\tDefaultInterpolation: THREE.InterpolateDiscrete,\r\n\r\n\tInterpolantFactoryMethodLinear: undefined,\r\n\tInterpolantFactoryMethodSmooth: undefined\r\n\r\n\t// Note: Actually this track could have a optimized / compressed\r\n\t// representation of a single value and a custom interpolant that\r\n\t// computes \"firstValue ^ isOdd( index )\".\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/ColorKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of keyframe values that represent color.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.ColorKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.ColorKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.ColorKeyframeTrack,\r\n\r\n\tValueTypeName: 'color'\r\n\r\n\t// ValueBufferType is inherited\r\n\r\n\t// DefaultInterpolation is inherited\r\n\r\n\r\n\t// Note: Very basic implementation and nothing special yet.\r\n\t// However, this is the place for color space parameterization.\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/NumberKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of numeric keyframe values.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.NumberKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.NumberKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.NumberKeyframeTrack,\r\n\r\n\tValueTypeName: 'number',\r\n\r\n\t// ValueBufferType is inherited\r\n\r\n\t// DefaultInterpolation is inherited\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/QuaternionKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of quaternion keyframe values.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.QuaternionKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.QuaternionKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.QuaternionKeyframeTrack,\r\n\r\n\tValueTypeName: 'quaternion',\r\n\r\n\t// ValueBufferType is inherited\r\n\r\n\tDefaultInterpolation: THREE.InterpolateLinear,\r\n\r\n\tInterpolantFactoryMethodLinear: function( result ) {\r\n\r\n\t\treturn new THREE.QuaternionLinearInterpolant(\r\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n\t},\r\n\r\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/StringKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track that interpolates Strings\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.StringKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.StringKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.StringKeyframeTrack,\r\n\r\n\tValueTypeName: 'string',\r\n\tValueBufferType: Array,\r\n\r\n\tDefaultInterpolation: THREE.InterpolateDiscrete,\r\n\r\n\tInterpolantFactoryMethodLinear: undefined,\r\n\r\n\tInterpolantFactoryMethodSmooth: undefined\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/VectorKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of vectored keyframe values.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.VectorKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.VectorKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.VectorKeyframeTrack,\r\n\r\n\tValueTypeName: 'vector'\r\n\r\n\t// ValueBufferType is inherited\r\n\r\n\t// DefaultInterpolation is inherited\r\n\r\n} );\r\n\r\n// File:src/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind( this );\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( listener.getInput() );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.playbackRate = 1;\r\n\tthis.isPlaying = false;\r\n\tthis.hasPlaybackControl = true;\r\n\tthis.sourceType = 'empty';\r\n\r\n\tthis.filters = [];\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Audio,\r\n\r\n\tgetOutput: function () {\r\n\r\n\t\treturn this.gain;\r\n\r\n\t},\r\n\r\n\tsetNodeSource: function ( audioNode ) {\r\n\r\n\t\tthis.hasPlaybackControl = false;\r\n\t\tthis.sourceType = 'audioNode';\r\n\t\tthis.source = audioNode;\r\n\t\tthis.connect();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetBuffer: function ( audioBuffer ) {\r\n\r\n\t\tthis.source.buffer = audioBuffer;\r\n\t\tthis.sourceType = 'buffer';\r\n\r\n\t\tif ( this.autoplay ) this.play();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tplay: function () {\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar source = this.context.createBufferSource();\r\n\r\n\t\tsource.buffer = this.source.buffer;\r\n\t\tsource.loop = this.source.loop;\r\n\t\tsource.onended = this.source.onended;\r\n\t\tsource.start( 0, this.startTime );\r\n\t\tsource.playbackRate.value = this.playbackRate;\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.source = source;\r\n\r\n\t\treturn this.connect();\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = this.context.currentTime;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconnect: function () {\r\n\r\n\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\tthis.source.connect( this.filters[ 0 ] );\r\n\r\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.source.connect( this.getOutput() );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdisconnect: function () {\r\n\r\n\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\r\n\r\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.source.disconnect( this.getOutput() );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetFilters: function () {\r\n\r\n\t\treturn this.filters;\r\n\r\n\t},\r\n\r\n\tsetFilters: function ( value ) {\r\n\r\n\t\tif ( ! value ) value = [];\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filters = value;\r\n\t\t\tthis.connect();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.filters = value;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetFilter: function () {\r\n\r\n\t\treturn this.getFilters()[ 0 ];\r\n\r\n\t},\r\n\r\n\tsetFilter: function ( filter ) {\r\n\r\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\r\n\r\n\t},\r\n\r\n\tsetPlaybackRate: function ( value ) {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.playbackRate = value;\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetPlaybackRate: function () {\r\n\r\n\t\treturn this.playbackRate;\r\n\r\n\t},\r\n\r\n\tonEnded: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tgetLoop: function () {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.source.loop;\r\n\r\n\t},\r\n\r\n\tsetLoop: function ( value ) {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.source.loop = value;\r\n\r\n\t},\r\n\r\n\tgetVolume: function () {\r\n\r\n\t\treturn this.gain.gain.value;\r\n\r\n\t},\r\n\r\n\r\n\tsetVolume: function ( value ) {\r\n\r\n\t\tthis.gain.gain.value = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/audio/AudioAnalyser.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioAnalyser = function ( audio, fftSize ) {\r\n\r\n\tthis.analyser = audio.context.createAnalyser();\r\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\r\n\r\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\r\n\r\n\taudio.getOutput().connect( this.analyser );\r\n\r\n};\r\n\r\nObject.assign( THREE.AudioAnalyser.prototype, {\r\n\r\n\tgetFrequencyData: function () {\r\n\r\n\t\tthis.analyser.getByteFrequencyData( this.data );\r\n\r\n\t\treturn this.data;\r\n\r\n\t},\r\n\r\n\tgetAverageFrequency: function () {\r\n\r\n\t\tvar value = 0, data = this.getFrequencyData();\r\n\r\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\tvalue += data[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn value / data.length;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/audio/AudioContext.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nObject.defineProperty( THREE, 'AudioContext', {\r\n\r\n\tget: ( function () {\r\n\r\n\t\tvar context;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( context === undefined ) {\r\n\r\n\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn context;\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n} );\r\n\r\n// File:src/audio/PositionalAudio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PositionalAudio = function ( listener ) {\r\n\r\n\tTHREE.Audio.call( this, listener );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n};\r\n\r\nTHREE.PositionalAudio.prototype = Object.assign( Object.create( THREE.Audio.prototype ), {\r\n\r\n\tconstructor: THREE.PositionalAudio,\r\n\r\n\tgetOutput: function () {\r\n\r\n\t\treturn this.panner;\r\n\r\n\t},\r\n\r\n\tgetRefDistance: function () {\r\n\r\n\t\treturn this.panner.refDistance;\r\n\r\n\t},\r\n\r\n\tsetRefDistance: function ( value ) {\r\n\r\n\t\tthis.panner.refDistance = value;\r\n\r\n\t},\r\n\r\n\tgetRolloffFactor: function () {\r\n\r\n\t\treturn this.panner.rolloffFactor;\r\n\r\n\t},\r\n\r\n\tsetRolloffFactor: function ( value ) {\r\n\r\n\t\tthis.panner.rolloffFactor = value;\r\n\r\n\t},\r\n\r\n\tgetDistanceModel: function () {\r\n\r\n\t\treturn this.panner.distanceModel;\r\n\r\n\t},\r\n\r\n\tsetDistanceModel: function ( value ) {\r\n\r\n\t\tthis.panner.distanceModel = value;\r\n\r\n\t},\r\n\r\n\tgetMaxDistance: function () {\r\n\r\n\t\treturn this.panner.maxDistance;\r\n\r\n\t},\r\n\r\n\tsetMaxDistance: function ( value ) {\r\n\r\n\t\tthis.panner.maxDistance = value;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: ( function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n\r\n} );\r\n\r\n// File:src/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = THREE.AudioContext;\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.filter = null;\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.AudioListener,\r\n\r\n\tgetInput: function () {\r\n\r\n\t\treturn this.gain;\r\n\r\n\t},\r\n\r\n\tremoveFilter: function ( ) {\r\n\r\n\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.context.destination );\r\n\t\t\tthis.gain.connect( this.context.destination );\r\n\t\t\tthis.filter = null;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetFilter: function () {\r\n\r\n\t\treturn this.filter;\r\n\r\n\t},\r\n\r\n\tsetFilter: function ( value ) {\r\n\r\n\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.context.destination );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.gain.disconnect( this.context.destination );\r\n\r\n\t\t}\r\n\r\n\t\tthis.filter = value;\r\n\t\tthis.gain.connect( this.filter );\r\n\t\tthis.filter.connect( this.context.destination );\r\n\r\n\t},\r\n\r\n\tgetMasterVolume: function () {\r\n\r\n\t\treturn this.gain.gain.value;\r\n\r\n\t},\r\n\r\n\tsetMasterVolume: function ( value ) {\r\n\r\n\t\tthis.gain.gain.value = value;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: ( function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\tvar orientation = new THREE.Vector3();\r\n\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\tvar listener = this.context.listener;\r\n\t\t\tvar up = this.up;\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n} );\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function () {\r\n\r\n\treturn new this.constructor().copy( this );\r\n\r\n};\r\n\r\nTHREE.Camera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tvar options = { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter };\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\r\n\t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\trenderer.setRenderTarget( null );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\r\n\r\n\tconstructor: THREE.OrthographicCamera,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\r\n\t\tthis.zoom = source.zoom;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateProjectionMatrix: function () {\r\n\r\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\t\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author tschw\r\n */\r\n\r\nTHREE.PerspectiveCamera = function( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.zoom = 1;\r\n\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\tthis.focus = 10;\r\n\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.view = null;\r\n\r\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\r\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\r\n\r\n\tconstructor: THREE.PerspectiveCamera,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.zoom = source.zoom;\r\n\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\tthis.focus = source.focus;\r\n\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\tthis.filmGauge = source.filmGauge;\r\n\t\tthis.filmOffset = source.filmOffset;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\r\n\t *\r\n\t * The default film gauge is 35, so that the focal length can be specified for\r\n\t * a 35mm (full frame) camera.\r\n\t *\r\n\t * Values for focal length and film gauge must have the same unit.\r\n\t */\r\n\tsetFocalLength: function ( focalLength ) {\r\n\r\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\r\n\r\n\t\tthis.fov = THREE.Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Calculates the focal length from the current .fov and .filmGauge.\r\n\t */\r\n\tgetFocalLength: function () {\r\n\r\n\t\tvar vExtentSlope = Math.tan( THREE.Math.DEG2RAD * 0.5 * this.fov );\r\n\r\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\r\n\r\n\t},\r\n\r\n\tgetEffectiveFOV: function () {\r\n\r\n\t\treturn THREE.Math.RAD2DEG * 2 * Math.atan(\r\n\t\t\t\tMath.tan( THREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\r\n\r\n\t},\r\n\r\n\tgetFilmWidth: function () {\r\n\r\n\t\t// film not completely covered in portrait format (aspect < 1)\r\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\r\n\r\n\t},\r\n\r\n\tgetFilmHeight: function () {\r\n\r\n\t\t// film not completely covered in landscape format (aspect > 1)\r\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   var w = 1920;\r\n\t *   var h = 1080;\r\n\t *   var fullWidth = w * 3;\r\n\t *   var fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */\r\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\tthis.aspect = fullWidth / fullHeight;\r\n\r\n\t\tthis.view = {\r\n\t\t\tfullWidth: fullWidth,\r\n\t\t\tfullHeight: fullHeight,\r\n\t\t\toffsetX: x,\r\n\t\t\toffsetY: y,\r\n\t\t\twidth: width,\r\n\t\t\theight: height\r\n\t\t};\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t},\r\n\r\n\tclearViewOffset: function() {\r\n\r\n\t\tthis.view = null;\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t},\r\n\r\n\tupdateProjectionMatrix: function () {\r\n\r\n\t\tvar near = this.near,\r\n\t\t\ttop = near * Math.tan(\r\n\t\t\t\t\tTHREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\r\n\t\t\theight = 2 * top,\r\n\t\t\twidth = this.aspect * height,\r\n\t\t\tleft = - 0.5 * width,\r\n\t\t\tview = this.view;\r\n\r\n\t\tif ( view !== null ) {\r\n\r\n\t\t\tvar fullWidth = view.fullWidth,\r\n\t\t\t\tfullHeight = view.fullHeight;\r\n\r\n\t\t\tleft += view.offsetX * width / fullWidth;\r\n\t\t\ttop -= view.offsetY * height / fullHeight;\r\n\t\t\twidth *= view.width / fullWidth;\r\n\t\t\theight *= view.height / fullHeight;\r\n\r\n\t\t}\r\n\r\n\t\tvar skew = this.filmOffset;\r\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\t\tleft, left + width, top - height, top, near, this.far );\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.zoom = this.zoom;\r\n\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\tdata.object.focus = this.focus;\r\n\r\n\t\tdata.object.aspect = this.aspect;\r\n\r\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\tdata.object.filmGauge = this.filmGauge;\r\n\t\tdata.object.filmOffset = this.filmOffset;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/cameras/StereoCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.StereoCamera = function () {\r\n\r\n\tthis.type = 'StereoCamera';\r\n\r\n\tthis.aspect = 1;\r\n\r\n\tthis.cameraL = new THREE.PerspectiveCamera();\r\n\tthis.cameraL.layers.enable( 1 );\r\n\tthis.cameraL.matrixAutoUpdate = false;\r\n\r\n\tthis.cameraR = new THREE.PerspectiveCamera();\r\n\tthis.cameraR.layers.enable( 2 );\r\n\tthis.cameraR.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nObject.assign( THREE.StereoCamera.prototype, {\r\n\r\n\tupdate: ( function () {\r\n\r\n\t\tvar focus, fov, aspect, near, far;\r\n\r\n\t\tvar eyeRight = new THREE.Matrix4();\r\n\t\tvar eyeLeft = new THREE.Matrix4();\r\n\r\n\t\treturn function update ( camera ) {\r\n\r\n\t\t\tvar needsUpdate = focus !== camera.focus || fov !== camera.fov ||\r\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\r\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far;\r\n\r\n\t\t\tif ( needsUpdate ) {\r\n\r\n\t\t\t\tfocus = camera.focus;\r\n\t\t\t\tfov = camera.fov;\r\n\t\t\t\taspect = camera.aspect * this.aspect;\r\n\t\t\t\tnear = camera.near;\r\n\t\t\t\tfar = camera.far;\r\n\r\n\t\t\t\t// Off-axis stereoscopic effect based on\r\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\r\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\r\n\t\t\t\tvar eyeSep = 0.064 / 2;\r\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\r\n\t\t\t\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\r\n\t\t\t\tvar xmin, xmax;\r\n\r\n\t\t\t\t// translate xOffset\r\n\r\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\r\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\r\n\r\n\t\t\t\t// for left eye\r\n\r\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\r\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\r\n\r\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\r\n\r\n\t\t\t\t// for right eye\r\n\r\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\r\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\r\n\r\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\r\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n} );\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color, intensity ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.intensity = intensity !== undefined ? intensity : 1;\r\n\r\n\tthis.receiveShadow = undefined;\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Light,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.intensity = source.intensity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\r\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\r\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/lights/LightShadow.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LightShadow = function ( camera ) {\r\n\r\n\tthis.camera = camera;\r\n\r\n\tthis.bias = 0;\r\n\tthis.radius = 1;\r\n\r\n\tthis.mapSize = new THREE.Vector2( 512, 512 );\r\n\r\n\tthis.map = null;\r\n\tthis.matrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nObject.assign( THREE.LightShadow.prototype, {\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.camera = source.camera.clone();\r\n\r\n\t\tthis.bias = source.bias;\r\n\t\tthis.radius = source.radius;\r\n\r\n\t\tthis.mapSize.copy( source.mapSize );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color, intensity );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n\tthis.castShadow = undefined;\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\r\n\r\n\tconstructor: THREE.AmbientLight\r\n\r\n} );\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color, intensity );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.shadow = new THREE.DirectionalLightShadow();\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\r\n\r\n\tconstructor: THREE.DirectionalLight,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\t\tthis.target = source.target.clone();\r\n\r\n\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/lights/DirectionalLightShadow.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectionalLightShadow = function ( light ) {\r\n\r\n\tTHREE.LightShadow.call( this, new THREE.OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\r\n\r\n};\r\n\r\nTHREE.DirectionalLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\r\n\r\n\tconstructor: THREE.DirectionalLightShadow\r\n\r\n} );\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor, intensity );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.castShadow = undefined;\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\r\n\r\n\tconstructor: THREE.HemisphereLight,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color, intensity );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tObject.defineProperty( this, 'power', {\r\n\t\tget: function () {\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\t\treturn this.intensity * 4 * Math.PI;\r\n\r\n\t\t},\r\n\t\tset: function ( power ) {\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 90, 1, 0.5, 500 ) );\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\r\n\r\n\tconstructor: THREE.PointLight,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\r\n\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, penumbra, decay ) {\r\n\r\n\tTHREE.Light.call( this, color, intensity );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tObject.defineProperty( this, 'power', {\r\n\t\tget: function () {\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\t\treturn this.intensity * Math.PI;\r\n\t\t},\r\n\t\tset: function ( power ) {\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\t\tthis.intensity = power / Math.PI;\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.shadow = new THREE.SpotLightShadow();\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\r\n\r\n\tconstructor: THREE.SpotLight,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.penumbra = source.penumbra;\r\n\t\tthis.decay = source.decay;\r\n\r\n\t\tthis.target = source.target.clone();\r\n\r\n\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/lights/SpotLightShadow.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SpotLightShadow = function () {\r\n\r\n\tTHREE.LightShadow.call( this, new THREE.PerspectiveCamera( 50, 1, 0.5, 500 ) );\r\n\r\n};\r\n\r\nTHREE.SpotLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\r\n\r\n\tconstructor: THREE.SpotLightShadow,\r\n\r\n\tupdate: function ( light ) {\r\n\r\n\t\tvar fov = THREE.Math.RAD2DEG * 2 * light.angle;\r\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\r\n\t\tvar far = light.distance || 500;\r\n\r\n\t\tvar camera = this.camera;\r\n\r\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\r\n\r\n\t\t\tcamera.fov = fov;\r\n\t\t\tcamera.aspect = aspect;\r\n\t\t\tcamera.far = far;\r\n\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/loaders/AudioLoader.js\r\n\r\n/**\r\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n */\r\n\r\nTHREE.AudioLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.AudioLoader.prototype = {\r\n\r\n\tconstructor: THREE.AudioLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar context = THREE.AudioContext;\r\n\r\n\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\r\n\r\n\t\t\t\tonLoad( audioBuffer );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: ( function () {\r\n\r\n\t\tvar color, textureLoader, materialLoader;\r\n\r\n\t\treturn function ( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\tif ( color === undefined ) color = new THREE.Color();\r\n\t\t\tif ( textureLoader === undefined ) textureLoader = new THREE.TextureLoader();\r\n\t\t\tif ( materialLoader === undefined ) materialLoader = new THREE.MaterialLoader();\r\n\r\n\t\t\t// convert from old material format\r\n\r\n\t\t\tvar textures = {};\r\n\r\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\tvar fullPath = texturePath + path;\r\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\tvar texture;\r\n\r\n\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( repeat !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\r\n\r\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.offset.fromArray( offset );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrap !== undefined ) {\r\n\r\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = THREE.MirroredRepeatWrapping;\r\n\r\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = THREE.MirroredRepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( anisotropy !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar uuid = THREE.Math.generateUUID();\r\n\r\n\t\t\t\ttextures[ uuid ] = texture;\r\n\r\n\t\t\t\treturn uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar json = {\r\n\t\t\t\tuuid: THREE.Math.generateUUID(),\r\n\t\t\t\ttype: 'MeshLambertMaterial'\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var name in m ) {\r\n\r\n\t\t\t\tvar value = m[ name ];\r\n\r\n\t\t\t\tswitch ( name ) {\r\n\t\t\t\t\tcase 'DbgColor':\r\n\t\t\t\t\tcase 'DbgIndex':\r\n\t\t\t\t\tcase 'opticalDensity':\r\n\t\t\t\t\tcase 'illumination':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'DbgName':\r\n\t\t\t\t\t\tjson.name = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'blending':\r\n\t\t\t\t\t\tjson.blending = THREE[ value ];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorAmbient':\r\n\t\t\t\t\tcase 'mapAmbient':\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorDiffuse':\r\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorSpecular':\r\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorEmissive':\r\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'specularCoef':\r\n\t\t\t\t\t\tjson.shininess = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'shading':\r\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\r\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapDiffuse':\r\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapDiffuseRepeat':\r\n\t\t\t\t\tcase 'mapDiffuseOffset':\r\n\t\t\t\t\tcase 'mapDiffuseWrap':\r\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapLight':\r\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapLightRepeat':\r\n\t\t\t\t\tcase 'mapLightOffset':\r\n\t\t\t\t\tcase 'mapLightWrap':\r\n\t\t\t\t\tcase 'mapLightAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAO':\r\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAORepeat':\r\n\t\t\t\t\tcase 'mapAOOffset':\r\n\t\t\t\t\tcase 'mapAOWrap':\r\n\t\t\t\t\tcase 'mapAOAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapBump':\r\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapBumpScale':\r\n\t\t\t\t\t\tjson.bumpScale = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapBumpRepeat':\r\n\t\t\t\t\tcase 'mapBumpOffset':\r\n\t\t\t\t\tcase 'mapBumpWrap':\r\n\t\t\t\t\tcase 'mapBumpAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapNormal':\r\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapNormalFactor':\r\n\t\t\t\t\t\tjson.normalScale = [ value, value ];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapNormalRepeat':\r\n\t\t\t\t\tcase 'mapNormalOffset':\r\n\t\t\t\t\tcase 'mapNormalWrap':\r\n\t\t\t\t\tcase 'mapNormalAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapSpecular':\r\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapSpecularRepeat':\r\n\t\t\t\t\tcase 'mapSpecularOffset':\r\n\t\t\t\t\tcase 'mapSpecularWrap':\r\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAlpha':\r\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAlphaRepeat':\r\n\t\t\t\t\tcase 'mapAlphaOffset':\r\n\t\t\t\t\tcase 'mapAlphaWrap':\r\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'flipSided':\r\n\t\t\t\t\t\tjson.side = THREE.BackSide;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'doubleSided':\r\n\t\t\t\t\t\tjson.side = THREE.DoubleSide;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'transparency':\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\r\n\t\t\t\t\t\tjson.opacity = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'depthTest':\r\n\t\t\t\t\tcase 'depthWrite':\r\n\t\t\t\t\tcase 'colorWrite':\r\n\t\t\t\t\tcase 'opacity':\r\n\t\t\t\t\tcase 'reflectivity':\r\n\t\t\t\t\tcase 'transparent':\r\n\t\t\t\t\tcase 'visible':\r\n\t\t\t\t\tcase 'wireframe':\r\n\t\t\t\t\t\tjson[ name ] = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'vertexColors':\r\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = THREE.VertexColors;\r\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = THREE.FaceColors;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\r\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\r\n\r\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\r\n\r\n\t\t\tmaterialLoader.setTextures( textures );\r\n\r\n\t\t\treturn materialLoader.parse( json );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tvar handlers = this.handlers;\r\n\r\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = handlers[ i ];\r\n\t\t\tvar loader  = handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.overrideMimeType( 'text/plain' );\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tvar response = event.target.response;\r\n\r\n\t\t\tTHREE.Cache.add( url, response );\r\n\r\n\t\t\tif ( this.status === 200 ) {\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( response );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} else if ( this.status === 0 ) {\r\n\r\n\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\r\n\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\r\n\r\n\t\t\t\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( response );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn request;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetWithCredentials: function ( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/FontLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.FontLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.FontLoader.prototype = {\r\n\r\n\tconstructor: THREE.FontLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json;\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tjson = JSON.parse( text );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\r\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar font = scope.parse( json );\r\n\r\n\t\t\tif ( onLoad ) onLoad( font );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\treturn new THREE.Font( json );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( manager ) {\r\n\r\n\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\tmanager = undefined;\r\n\r\n\t}\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = {\r\n\r\n\tconstructor: THREE.JSONLoader,\r\n\r\n\t// Deprecated\r\n\r\n\tget statusDomElement () {\r\n\r\n\t\tif ( this._statusDomElement === undefined ) {\r\n\r\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\treturn this._statusDomElement;\r\n\r\n\t},\r\n\r\n\tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json = JSON.parse( text );\r\n\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\tvar type = metadata.type;\r\n\r\n\t\t\t\tif ( type !== undefined ) {\r\n\r\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, texturePath ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry(),\r\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\t\tparseModel( scale );\r\n\r\n\t\tparseSkin();\r\n\t\tparseMorphing( scale );\r\n\t\tparseAnimations();\r\n\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tfunction parseModel( scale ) {\r\n\r\n\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i, j, fi,\r\n\r\n\t\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\ttype,\r\n\t\t\tisQuad,\r\n\t\t\thasMaterial,\r\n\t\t\thasFaceVertexUv,\r\n\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\tfaces = json.faces,\r\n\t\t\tvertices = json.vertices,\r\n\t\t\tnormals = json.normals,\r\n\t\t\tcolors = json.colors,\r\n\r\n\t\t\tnUvLayers = 0;\r\n\r\n\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = vertices.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = faces.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseSkin() {\r\n\r\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseMorphing( scale ) {\r\n\r\n\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\r\n\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\r\n\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseAnimations() {\r\n\r\n\t\t\tvar outputAnimations = [];\r\n\r\n\t\t\t// parse old style Bone/Hierarchy animations\r\n\t\t\tvar animations = [];\r\n\r\n\t\t\tif ( json.animation !== undefined ) {\r\n\r\n\t\t\t\tanimations.push( json.animation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.animations !== undefined ) {\r\n\r\n\t\t\t\tif ( json.animations.length ) {\r\n\r\n\t\t\t\t\tanimations = animations.concat( json.animations );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tanimations.push( json.animations );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\r\n\r\n\t\t\t\tvar clip = THREE.AnimationClip.parseAnimation( animations[ i ], geometry.bones );\r\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// parse implicit morph animations\r\n\t\t\tif ( geometry.morphTargets ) {\r\n\r\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\r\n\t\t\t\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\r\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\treturn { geometry: geometry };\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n\tthis.onStart = undefined;\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\titemsTotal ++;\r\n\r\n\t\tif ( isLoading === false ) {\r\n\r\n\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tisLoading = true;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\titemsLoaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\tisLoading = false;\r\n\r\n\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.itemError = function ( url ) {\r\n\r\n\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\tscope.onError( url );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar index = json.data.index;\r\n\r\n\t\tvar TYPED_ARRAYS = {\r\n\t\t\t'Int8Array': Int8Array,\r\n\t\t\t'Uint8Array': Uint8Array,\r\n\t\t\t'Uint8ClampedArray': Uint8ClampedArray,\r\n\t\t\t'Int16Array': Int16Array,\r\n\t\t\t'Uint16Array': Uint16Array,\r\n\t\t\t'Int32Array': Int32Array,\r\n\t\t\t'Uint32Array': Uint32Array,\r\n\t\t\t'Float32Array': Float32Array,\r\n\t\t\t'Float64Array': Float64Array\r\n\t\t};\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.textures = {};\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTextures: function ( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\r\n\t},\r\n\r\n\tgetTexture: function ( name ) {\r\n\r\n\t\tvar textures = this.textures;\r\n\r\n\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t}\r\n\r\n\t\treturn textures[ name ];\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\r\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\r\n\t\t// for PointsMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\tmaterial.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\tif ( json.normalScale !== undefined ) {\r\n\r\n\t\t\tvar normalScale = json.normalScale;\r\n\r\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\r\n\r\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\r\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.normalScale = new THREE.Vector2().fromArray( normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = this.getTexture( json.roughnessMap );\r\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = this.getTexture( json.metalnessMap );\r\n\r\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = this.getTexture( json.emissiveMap );\r\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) {\r\n\r\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t// MultiMaterial\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.animations ) {\r\n\r\n\t\t\tobject.animations = this.parseAnimations( json.animations );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'BoxBufferGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\t\t\t\tcase 'CylinderBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'ConeGeometry':\r\n\t\t\t\t\tcase 'ConeBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE [ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RingGeometry':\r\n\t\t\t\t\tcase 'RingBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\t\t\t\t\tcase 'TorusBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'LatheGeometry':\r\n\t\t\t\t\tcase 'LatheBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.points,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseAnimations: function ( json ) {\r\n\r\n\t\tvar animations = [];\r\n\r\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\r\n\r\n\t\t\tvar clip = THREE.AnimationClip.parse( json[ i ] );\r\n\r\n\t\t\tanimations.push( clip );\r\n\r\n\t\t}\r\n\r\n\t\treturn animations;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tfunction parseConstant( value ) {\r\n\r\n\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn THREE[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tfunction getGeometry( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getMaterial( name ) {\r\n\r\n\t\t\t\tif ( name === undefined ) return undefined;\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\r\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\r\n\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\r\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\r\n\t\t\t\t\tvar material = getMaterial( data.material );\r\n\r\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\r\n\r\n\t\t\t\t\t\tobject = new THREE.SkinnedMesh( geometry, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tobject = new THREE.Mesh( geometry, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new THREE.LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t};\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar texture = new THREE.Texture();\r\n\r\n\t\tvar loader = new THREE.ImageLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CubeTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.CubeTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CubeTextureLoader,\r\n\r\n\tload: function ( urls, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar texture = new THREE.CubeTexture();\r\n\r\n\t\tvar loader = new THREE.ImageLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setPath( this.path );\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\tloader.load( urls[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded ++;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture();\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\timages[ i ] = {\r\n\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t};\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.fog = true;\r\n\tthis.lights = true;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\tthis.side = THREE.FrontSide;\r\n\tthis.shading = THREE.SmoothShading; // THREE.FlatShading, THREE.SmoothShading\r\n\tthis.vertexColors = THREE.NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthFunc = THREE.LessEqualDepth;\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.clippingPlanes = null;\r\n\tthis.clipShadows = false;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\tthis.premultipliedAlpha = false;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate() {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRoot = meta === undefined;\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tmeta = {\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\r\n\t\tif ( this.roughness !== 0.5 ) data.roughness = this.roughness;\r\n\t\tif ( this.metalness !== 0.5 ) data.metalness = this.metalness;\r\n\r\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalScale = this.normalScale.toArray();\r\n\r\n\t\t}\r\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\t\tif ( this.roughnessMap instanceof THREE.Texture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\r\n\t\tif ( this.metalnessMap instanceof THREE.Texture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.emissiveMap instanceof THREE.Texture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\r\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\tif ( this.side !== THREE.FrontSide ) data.side = this.side;\r\n\t\tif ( this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\r\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\tif ( images.length > 0 ) data.images = images;\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.fog = source.fog;\r\n\t\tthis.lights = source.lights;\r\n\r\n\t\tthis.blending = source.blending;\r\n\t\tthis.side = source.side;\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.colorWrite = source.colorWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\r\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\r\n\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\tthis.visible = source.visible;\r\n\t\tthis.clipShadows = source.clipShadows;\r\n\r\n\t\tvar srcPlanes = source.clippingPlanes,\r\n\t\t\tdstPlanes = null;\r\n\r\n\t\tif ( srcPlanes !== null ) {\r\n\r\n\t\t\tvar n = srcPlanes.length;\r\n\t\t\tdstPlanes = new Array( n );\r\n\r\n\t\t\tfor ( var i = 0; i !== n; ++ i )\r\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tthis.clippingPlanes = dstPlanes;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nObject.assign( THREE.Material.prototype, THREE.EventDispatcher.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\"\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.lights = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\tthis.linecap = source.linecap;\r\n\tthis.linejoin = source.linejoin;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.lights = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\r\n\tthis.scale = source.scale;\r\n\tthis.dashSize = source.dashSize;\r\n\tthis.gapSize = source.gapSize;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.lights = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / https://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.depthPacking = THREE.BasicDepthPacking;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false;\r\n\tthis.lights = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.depthPacking = source.depthPacking;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.emissiveIntensity = 1.0;\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false;\r\n\tthis.lights = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.emissiveIntensity = 1.0;\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.specular.copy( source.specular );\r\n\tthis.shininess = source.shininess;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshStandardMaterial.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  roughness: <float>,\r\n *  metalness: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  roughnessMap: new THREE.Texture( <Image> ),\r\n *\r\n *  metalnessMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n *  envMapIntensity: <float>\r\n *\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshStandardMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.defines = { 'STANDARD': '' };\r\n\r\n\tthis.type = 'MeshStandardMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.roughness = 0.5;\r\n\tthis.metalness = 0.5;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.emissiveIntensity = 1.0;\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.roughnessMap = null;\r\n\r\n\tthis.metalnessMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.envMapIntensity = 1.0;\r\n\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshStandardMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\r\n\r\nTHREE.MeshStandardMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.defines = { 'STANDARD': '' };\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.roughness = source.roughness;\r\n\tthis.metalness = source.metalness;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.roughnessMap = source.roughnessMap;\r\n\r\n\tthis.metalnessMap = source.metalnessMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.envMapIntensity = source.envMapIntensity;\r\n\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhysicalMaterial.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *  reflectivity: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhysicalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.MeshStandardMaterial.call( this );\r\n\r\n\tthis.defines = { 'PHYSICAL': '' };\r\n\r\n\tthis.type = 'MeshPhysicalMaterial';\r\n\r\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhysicalMaterial.prototype = Object.create( THREE.MeshStandardMaterial.prototype );\r\nTHREE.MeshPhysicalMaterial.prototype.constructor = THREE.MeshPhysicalMaterial;\r\n\r\nTHREE.MeshPhysicalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.MeshStandardMaterial.prototype.copy.call( this, source );\r\n\r\n\tthis.defines = { 'PHYSICAL': '' };\r\n\r\n\tthis.reflectivity = source.reflectivity;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MultiMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MultiMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MultiMaterial';\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.MultiMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MultiMaterial,\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tvar materials = this.materials;\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar material = materials[ i ].toJSON( meta );\r\n\t\t\tdelete material.metadata;\r\n\r\n\t\t\toutput.materials.push( material );\r\n\r\n\t\t}\r\n\r\n\t\toutput.visible = this.visible;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new this.constructor();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/PointsMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointsMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointsMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.lights = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\r\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.size = source.size;\r\n\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"1f\", value: 1.0 }, \"parameter2\": { type: \"1i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\tthis.lights = false; // set to use scene lights\r\n\tthis.clipping = false; // set to use user-defined clipping planes\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\tthis.extensions = {\r\n\t\tderivatives: false, // set to use derivatives\r\n\t\tfragDepth: false, // set to use fragment depth values\r\n\t\tdrawBuffers: false, // set to use draw buffers\r\n\t\tshaderTextureLOD: false // set to use shader texture LOD\r\n\t};\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tif ( parameters !== undefined ) {\r\n\r\n\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.fragmentShader = source.fragmentShader;\r\n\tthis.vertexShader = source.vertexShader;\r\n\r\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\r\n\tthis.defines = source.defines;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\tthis.lights = source.lights;\r\n\tthis.clipping = source.clipping;\r\n\r\n\tthis.skinning = source.skinning;\r\n\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\tthis.extensions = source.extensions;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.uniforms = this.uniforms;\r\n\tdata.vertexShader = this.vertexShader;\r\n\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2()\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\tthis.lights = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.map = source.map;\r\n\r\n\tthis.rotation = source.rotation;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/ShadowMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ShadowMaterial = function () {\r\n\r\n\tTHREE.ShaderMaterial.call( this, {\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t{\r\n\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t}\r\n\t\t] ),\r\n\t\tvertexShader: THREE.ShaderChunk[ 'shadow_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'shadow_frag' ]\r\n\t} );\r\n\r\n\tthis.lights = true;\r\n\tthis.transparent = true;\r\n\r\n\tObject.defineProperties( this, {\r\n\t\topacity: {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\treturn this.uniforms.opacity.value;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.uniforms.opacity.value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.ShadowMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.ShadowMaterial.prototype.constructor = THREE.ShadowMaterial;\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\r\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\r\n\t//\r\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\r\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\r\n\tthis.encoding = encoding !== undefined ? encoding :  THREE.LinearEncoding;\r\n\r\n\tthis.version = 0;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.image = source.image;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\tthis.encoding = source.encoding;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getDataURL( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy\r\n\t\t};\r\n\r\n\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\tvar image = this.image;\r\n\r\n\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.image = image.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\ttransformUv: function ( uv ) {\r\n\r\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\r\n\t\tuv.multiply( this.repeat );\r\n\t\tuv.add( this.offset );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nObject.assign( THREE.Texture.prototype, THREE.EventDispatcher.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/DepthTexture.js\r\n\r\n/**\r\n * @author Matt DesLauriers / @mattdesl\r\n */\r\n\r\nTHREE.DepthTexture = function ( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n  THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, THREE.DepthFormat, type, anisotropy );\r\n\r\n  this.image = { width: width, height: height };\r\n\r\n  this.type = type !== undefined ? type : THREE.UnsignedShortType;\r\n\r\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\r\n  this.flipY = false;\r\n  this.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DepthTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DepthTexture.prototype.constructor = THREE.DepthTexture;\r\n\r\n// File:src/textures/CanvasTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n\timages = images !== undefined ? images : [];\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\tthis.flipY = false;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nObject.defineProperty( THREE.CubeTexture.prototype, 'images', {\r\n\r\n\tget: function () {\r\n\r\n\t\treturn this.image;\r\n\r\n\t},\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tthis.image = value;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\r\n\tthis.flipY = false;\r\n\tthis.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tfunction update() {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Group\r\n\r\n} );\r\n\r\n// File:src/objects/Points.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Points = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Points';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Points.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Points,\r\n\r\n\traycast: ( function () {\r\n\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\tvar object = this;\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar matrixWorld = this.matrixWorld;\r\n\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tvar position = new THREE.Vector3();\r\n\r\n\t\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}() ),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tif ( mode === 1 ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\treturn new THREE.LineSegments( geometry, material );\r\n\r\n\t}\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Line.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Line,\r\n\r\n\traycast: ( function () {\r\n\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\tvar precisionSq = precision * precision;\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\tvar vStart = new THREE.Vector3();\r\n\t\t\tvar vEnd = new THREE.Vector3();\r\n\t\t\tvar interSegment = new THREE.Vector3();\r\n\t\t\tvar interRay = new THREE.Vector3();\r\n\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}() ),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/LineSegments.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LineSegments = function ( geometry, material ) {\r\n\r\n\tTHREE.Line.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments';\r\n\r\n};\r\n\r\nTHREE.LineSegments.prototype = Object.assign( Object.create( THREE.Line.prototype ), {\r\n\r\n\tconstructor: THREE.LineSegments\r\n\r\n} );\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.drawMode = THREE.TrianglesDrawMode;\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Mesh,\r\n\r\n\tsetDrawMode: function ( value ) {\r\n\r\n\t\tthis.drawMode = value;\r\n\r\n\t},\r\n\r\n\tupdateMorphTargets: function () {\r\n\r\n\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\t\tthis.morphTargetBase = - 1;\r\n\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetMorphTargetIndexByName: function ( name ) {\r\n\r\n\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\t\treturn 0;\r\n\r\n\t},\r\n\r\n\traycast: ( function () {\r\n\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\tvar vA = new THREE.Vector3();\r\n\t\tvar vB = new THREE.Vector3();\r\n\t\tvar vC = new THREE.Vector3();\r\n\r\n\t\tvar tempA = new THREE.Vector3();\r\n\t\tvar tempB = new THREE.Vector3();\r\n\t\tvar tempC = new THREE.Vector3();\r\n\r\n\t\tvar uvA = new THREE.Vector2();\r\n\t\tvar uvB = new THREE.Vector2();\r\n\t\tvar uvC = new THREE.Vector2();\r\n\r\n\t\tvar barycoord = new THREE.Vector3();\r\n\r\n\t\tvar intersectionPoint = new THREE.Vector3();\r\n\t\tvar intersectionPointWorld = new THREE.Vector3();\r\n\r\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\t\treturn uv1.clone();\r\n\r\n\t\t}\r\n\r\n\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\r\n\r\n\t\t\tvar intersect;\r\n\t\t\tvar material = object.material;\r\n\r\n\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== THREE.DoubleSide, point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( intersect === null ) return null;\r\n\r\n\t\t\tintersectionPointWorld.copy( point );\r\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdistance: distance,\r\n\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\tobject: object\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\r\n\r\n\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\r\n\r\n\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\tif ( uvs ) {\r\n\r\n\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\r\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersection.face = new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) );\r\n\t\t\t\tintersection.faceIndex = a;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn intersection;\r\n\r\n\t\t}\r\n\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar material = this.material;\r\n\t\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\t\tif ( material === undefined ) return;\r\n\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\t// Check boundingBox before continuing\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uvs, intersection;\r\n\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\tvar a, b, c;\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\tuvs = attributes.uv.array;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\t\tc = a + 2;\r\n\r\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tvar fvA, fvB, fvC;\r\n\t\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\r\n\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\r\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\r\n\r\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\t\tfvA = vertices[ face.a ];\r\n\t\t\t\t\tfvB = vertices[ face.b ];\r\n\t\t\t\t\tfvC = vertices[ face.c ];\r\n\r\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\r\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\r\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvA.add( fvA );\r\n\t\t\t\t\t\tvB.add( fvB );\r\n\t\t\t\t\t\tvC.add( fvC );\r\n\r\n\t\t\t\t\t\tfvA = vA;\r\n\t\t\t\t\t\tfvB = vB;\r\n\t\t\t\t\t\tfvC = vC;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\r\n\r\n\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\tif ( uvs ) {\r\n\r\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\r\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\r\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\r\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\r\n\r\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tintersection.face = face;\r\n\t\t\t\t\t\tintersection.faceIndex = f;\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}() ),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Bone,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\t\tthis.skin = source.skin;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\r\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nObject.assign( THREE.Skeleton.prototype, {\r\n\r\n\tcalculateInverses: function () {\r\n\r\n\t\tthis.boneInverses = [];\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tpose: function () {\r\n\r\n\t\tvar bone;\r\n\r\n\t\t// recover the bind-time world matrices\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\tbone = this.bones[ b ];\r\n\r\n\t\t\tif ( bone ) {\r\n\r\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\tbone = this.bones[ b ];\r\n\r\n\t\t\tif ( bone ) {\r\n\r\n\t\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: ( function () {\r\n\r\n\t\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\t// flatten bone matrices to array\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\t\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\r\n\t\t\t\t\tbones[ gbone.parent ] !== undefined ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\r\n\r\n\tconstructor: THREE.SkinnedMesh,\r\n\r\n\tbind: function( skeleton, bindMatrix ) {\r\n\r\n\t\tthis.skeleton = skeleton;\r\n\r\n\t\tif ( bindMatrix === undefined ) {\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t\t}\r\n\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n\t},\r\n\r\n\tpose: function () {\r\n\r\n\t\tthis.skeleton.pose();\r\n\r\n\t},\r\n\r\n\tnormalizeSkinWeights: function () {\r\n\r\n\t\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\r\n\r\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( this.geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar vec = new THREE.Vector4();\r\n\r\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\r\n\r\n\t\t\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\r\n\r\n\t\t\t\tvec.x = skinWeight.getX( i );\r\n\t\t\t\tvec.y = skinWeight.getY( i );\r\n\t\t\t\tvec.z = skinWeight.getZ( i );\r\n\t\t\t\tvec.w = skinWeight.getW( i );\r\n\r\n\t\t\t\tvar scale = 1.0 / vec.lengthManhattan();\r\n\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\t\tvec.multiplyScalar( scale );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function( force ) {\r\n\r\n\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\t\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function() {\r\n\r\n\t\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'LOD';\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tlevels: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: []\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.LOD,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\r\n\t\tvar levels = source.levels;\r\n\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar level = levels[ i ];\r\n\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddLevel: function ( object, distance ) {\r\n\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\r\n\t\tdistance = Math.abs( distance );\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\t\tthis.add( object );\r\n\r\n\t},\r\n\r\n\tgetObjectForDistance: function ( distance ) {\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn levels[ i - 1 ].object;\r\n\r\n\t},\r\n\r\n\traycast: ( function () {\r\n\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t\t};\r\n\r\n\t}() ),\r\n\r\n\tupdate: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function update( camera ) {\r\n\r\n\t\t\tvar levels = this.levels;\r\n\r\n\t\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\tdata.object.levels = [];\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar level = levels[ i ];\r\n\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = function ( material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Sprite';\r\n\r\n\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Sprite,\r\n\r\n\traycast: ( function () {\r\n\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\t\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\r\n\r\n\t\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.push( {\r\n\r\n\t\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\t\tpoint: this.position,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\r\n\t\t\t} );\r\n\r\n\t\t};\r\n\r\n\t}() ),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.material ).copy( this );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.LensFlare,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\t\tthis.positionScreen.copy( source.positionScreen );\r\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\t\tif ( size === undefined ) size = - 1;\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\tif ( opacity === undefined ) opacity = 1;\r\n\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\t\tthis.lensFlares.push( {\r\n\t\t\ttexture: texture,\t// THREE.Texture\r\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\t\tscale: 1, \t\t// scale\r\n\t\t\trotation: 0, \t\t// rotation\r\n\t\t\topacity: opacity,\t// opacity\r\n\t\t\tcolor: color,\t\t// color\r\n\t\t\tblending: blending\t// blending\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Update lens flares update positions on all flares based on the screen position\r\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n\t */\r\n\r\n\tupdateLensFlares: function () {\r\n\r\n\t\tvar f, fl = this.lensFlares.length;\r\n\t\tvar flare;\r\n\t\tvar vecX = - this.positionScreen.x * 2;\r\n\t\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\t\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.copy = function ( source, recursive ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, recursive );\r\n\r\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\tthis.autoUpdate = source.autoUpdate;\r\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment' ] = \"#ifdef ALPHATEST\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_fragment' ] = \"#ifdef USE_AOMAP\\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_pars_fragment' ] = \"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'begin_vertex' ] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'beginnormal_vertex' ] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bsdfs.glsl\r\n\r\nTHREE.ShaderChunk[ 'bsdfs' ] = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\t\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\t\t}\\n\t\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat alpha = pow2( roughness );\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\tfloat D = D_GGX( alpha, dotNH );\\n\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment' ] = \"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'clipping_planes_fragment' ] = \"#if NUM_CLIPPING_PLANES > 0\\n\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\t\tvec4 plane = clippingPlanes[ i ];\\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'clipping_planes_pars_fragment' ] = \"#if NUM_CLIPPING_PLANES > 0\\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\t\tvarying vec3 vViewPosition;\\n\t#endif\\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'clipping_planes_pars_vertex' ] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvarying vec3 vViewPosition;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'clipping_planes_vertex' ] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment' ] = \"#ifdef USE_COLOR\\n\tdiffuseColor.rgb *= vColor;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex' ] = \"#ifdef USE_COLOR\\n\tvColor.xyz = color.xyz;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common' ] = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n\tbool visible;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\tvec3 position;\\n\tvec3 normal;\\n\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'cube_uv_reflection_fragment' ] = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\tvec3 absDirection = abs(direction);\\n\tint face = -1;\\n\tif( absDirection.x > absDirection.z ) {\\n\t\tif(absDirection.x > absDirection.y )\\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\telse {\\n\t\tif(absDirection.z > absDirection.y )\\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\tfloat dxRoughness = dFdx(roughness);\\n\tfloat dyRoughness = dFdy(roughness);\\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\tfloat mipLevel = 0.5 * log2(d);\\n\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\tbool bRes = mipLevel == 0.0;\\n\tscale =  bRes && (scale < a) ? a : scale;\\n\tvec3 r;\\n\tvec2 offset;\\n\tint face = getFaceFromDirection(direction);\\n\tfloat rcpPowScale = 1.0 / powScale;\\n\tif( face == 0) {\\n\t\tr = vec3(direction.x, -direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 1) {\\n\t\tr = vec3(direction.y, direction.x, direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 2) {\\n\t\tr = vec3(direction.z, direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 3) {\\n\t\tr = vec3(direction.x, direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse if( face == 4) {\\n\t\tr = vec3(direction.y, direction.x, -direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse {\\n\t\tr = vec3(direction.z, -direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\tr = normalize(r);\\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\tvec2 base = offset + vec2( texelOffset );\\n\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\tfloat r1 = floor(roughnessVal);\\n\tfloat r2 = r1 + 1.0;\\n\tfloat t = fract(roughnessVal);\\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\tfloat s = mipInfo.y;\\n\tfloat level0 = mipInfo.x;\\n\tfloat level1 = level0 + 1.0;\\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\tvec4 result = mix(color10, color20, t);\\n\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex' ] = \"#ifdef FLIP_SIDED\\n\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'encodings_pars_fragment' ] = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'encodings_fragment' ] = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\tenvColor = envMapTexelToLinear( envColor );\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment' ] = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\tuniform float reflectivity;\\n\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\t\tvarying vec3 vWorldPosition;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvarying vec3 vWorldPosition;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t\tuniform float refractionRatio;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvWorldPosition = worldPosition.xyz;\\n\t#else\\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment' ] = \"#ifdef USE_FOG\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\t#endif\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment' ] = \"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex' ] = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\t\t#endif\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_pars.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_pars' ] = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\tvec3 irradiance = ambientLightColor;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tdirectLight.color = directionalLight.color;\\n\t\tdirectLight.direction = directionalLight.direction;\\n\t\tdirectLight.visible = true;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tvec3 lVector = pointLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\t\t\tdirectLight.color = pointLight.color;\\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat coneCos;\\n\t\tfloat penumbraCos;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\t\tvec3 lVector = spotLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\t\t\tdirectLight.color = spotLight.color;\\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tirradiance *= PI;\\n\t\t#endif\\n\t\treturn irradiance;\\n\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\t\t#else\\n\t\t\tvec4 envMapColor = vec4( 0.0 );\\n\t\t#endif\\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t}\\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\t}\\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\t\t#endif\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\t\tvec2 sampleUV;\\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#endif\\n\t\treturn envMapColor.rgb * envMapIntensity;\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment' ] = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment' ] = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\tvec3\tdiffuseColor;\\n\tvec3\tspecularColor;\\n\tfloat\tspecularShininess;\\n\tfloat\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\t(0)\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_physical_fragment' ] = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\tmaterial.specularColor = mix( vec3( 0.16 * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_physical_pars_fragment' ] = \"struct PhysicalMaterial {\\n\tvec3\tdiffuseColor;\\n\tfloat\tspecularRoughness;\\n\tvec3\tspecularColor;\\n\t#ifndef STANDARD\\n\t#endif\\n};\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_template.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_template' ] = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tlightMapIrradiance *= PI;\\n\t\t#endif\\n\t\tirradiance += lightMapIrradiance;\\n\t#endif\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t}\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\t#endif\\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment' ] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tuniform float logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n\tuniform float logDepthBufFC;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\t#else\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 texelColor = texture2D( map, vUv );\\n\ttexelColor = mapTexelToLinear( texelColor );\\n\tdiffuseColor *= texelColor;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'metalnessmap_fragment' ] = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'metalnessmap_pars_fragment' ] = \"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex' ] = \"#ifdef USE_MORPHNORMALS\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\t#ifndef USE_MORPHNORMALS\\n\tuniform float morphTargetInfluences[ 8 ];\\n\t#else\\n\tuniform float morphTargetInfluences[ 4 ];\\n\t#endif\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\t#ifndef USE_MORPHNORMALS\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normal_fragment' ] = \"#ifdef FLAT_SHADED\\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal );\\n\t#ifdef DOUBLE_SIDED\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment' ] = \"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/packing.glsl\r\n\r\nTHREE.ShaderChunk[ 'packing' ] = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthoDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat OrthoDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'premultiplied_alpha_fragment' ] = \"#ifdef PREMULTIPLIED_ALPHA\\n\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'project_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'roughnessmap_fragment' ] = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'roughnessmap_pars_fragment' ] = \"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\t\tvec2 f = fract( uv * size + 0.5 );\\n\t\tfloat a = mix( lb, lt, f.y );\\n\t\tfloat b = mix( rb, rt, f.y );\\n\t\tfloat c = mix( a, b, f.x );\\n\t\treturn c;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\t\tbool frustumTest = all( frustumTestVec );\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn 1.0;\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t#endif\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmask_pars_fragment' ] = \"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex' ] = \"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\t#ifdef BONE_TEXTURE\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\t\t\ty = dy * ( y + 0.5 );\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\t\t\treturn bone;\\n\t\t}\\n\t#else\\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\t\t}\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment' ] = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment' ] = \"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'tonemapping_fragment' ] = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'tonemapping_pars_fragment' ] = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_fragment' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvUv2 = uv2;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_fragment' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex' ] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\t#ifdef USE_SKINNING\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\t#else\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\": { type: \"1f\", value: 1.0 },\r\n\r\n\t\t\"map\": { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\": { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"specularMap\": { type: \"t\", value: null },\r\n\t\t\"alphaMap\": { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\": { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\": { type: \"1f\", value: - 1 },\r\n\t\t\"reflectivity\": { type: \"1f\", value: 1.0 },\r\n\t\t\"refractionRatio\": { type: \"1f\", value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\t\"aoMap\": { type: \"t\", value: null },\r\n\t\t\"aoMapIntensity\": { type: \"1f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\t\"lightMap\": { type: \"t\", value: null },\r\n\t\t\"lightMapIntensity\": { type: \"1f\", value: 1 }\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\t\"emissiveMap\": { type: \"t\", value: null }\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\": { type: \"t\", value: null },\r\n\t\t\"bumpScale\": { type: \"1f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\": { type: \"t\", value: null },\r\n\t\t\"normalScale\": { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\t\"displacementMap\": { type: \"t\", value: null },\r\n\t\t\"displacementScale\": { type: \"1f\", value: 1 },\r\n\t\t\"displacementBias\": { type: \"1f\", value: 0 }\r\n\r\n\t},\r\n\r\n\troughnessmap: {\r\n\r\n\t\t\"roughnessMap\": { type: \"t\", value: null }\r\n\r\n\t},\r\n\r\n\tmetalnessmap: {\r\n\r\n\t\t\"metalnessMap\": { type: \"t\", value: null }\r\n\r\n\t},\r\n\r\n\tfog: {\r\n\r\n\t\t\"fogDensity\": { type: \"1f\", value: 0.00025 },\r\n\t\t\"fogNear\": { type: \"1f\", value: 1 },\r\n\t\t\"fogFar\": { type: \"1f\", value: 2000 },\r\n\t\t\"fogColor\": { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\": { type: \"3fv\", value: [] },\r\n\r\n\t\t\"directionalLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\"direction\": { type: \"v3\" },\r\n\t\t\t\"color\": { type: \"c\" },\r\n\r\n\t\t\t\"shadow\": { type: \"1i\" },\r\n\t\t\t\"shadowBias\": { type: \"1f\" },\r\n\t\t\t\"shadowRadius\": { type: \"1f\" },\r\n\t\t\t\"shadowMapSize\": { type: \"v2\" }\r\n\t\t} },\r\n\r\n\t\t\"directionalShadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"directionalShadowMatrix\": { type: \"m4v\", value: [] },\r\n\r\n\t\t\"spotLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\"color\": { type: \"c\" },\r\n\t\t\t\"position\": { type: \"v3\" },\r\n\t\t\t\"direction\": { type: \"v3\" },\r\n\t\t\t\"distance\": { type: \"1f\" },\r\n\t\t\t\"coneCos\": { type: \"1f\" },\r\n\t\t\t\"penumbraCos\": { type: \"1f\" },\r\n\t\t\t\"decay\": { type: \"1f\" },\r\n\r\n\t\t\t\"shadow\": { type: \"1i\" },\r\n\t\t\t\"shadowBias\": { type: \"1f\" },\r\n\t\t\t\"shadowRadius\": { type: \"1f\" },\r\n\t\t\t\"shadowMapSize\": { type: \"v2\" }\r\n\t\t} },\r\n\r\n\t\t\"spotShadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"spotShadowMatrix\": { type: \"m4v\", value: [] },\r\n\r\n\t\t\"pointLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\"color\": { type: \"c\" },\r\n\t\t\t\"position\": { type: \"v3\" },\r\n\t\t\t\"decay\": { type: \"1f\" },\r\n\t\t\t\"distance\": { type: \"1f\" },\r\n\r\n\t\t\t\"shadow\": { type: \"1i\" },\r\n\t\t\t\"shadowBias\": { type: \"1f\" },\r\n\t\t\t\"shadowRadius\": { type: \"1f\" },\r\n\t\t\t\"shadowMapSize\": { type: \"v2\" }\r\n\t\t} },\r\n\r\n\t\t\"pointShadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"pointShadowMatrix\": { type: \"m4v\", value: [] },\r\n\r\n\t\t\"hemisphereLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\"direction\": { type: \"v3\" },\r\n\t\t\t\"skyColor\": { type: \"c\" },\r\n\t\t\t\"groundColor\": { type: \"c\" }\r\n\t\t} }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\": { type: \"1f\", value: 1.0 },\r\n\t\t\"size\": { type: \"1f\", value: 1.0 },\r\n\t\t\"scale\": { type: \"1f\", value: 1.0 },\r\n\t\t\"map\": { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\": { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib/cube_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'cube_frag' ] = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/cube_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'cube_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/depth_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'depth_frag' ] = \"#if DEPTH_PACKING == 3200\\n\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( 1.0 );\\n\t#if DEPTH_PACKING == 3200\\n\t\tdiffuseColor.a = opacity;\\n\t#endif\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <logdepthbuf_fragment>\\n\t#if DEPTH_PACKING == 3200\\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\t#elif DEPTH_PACKING == 3201\\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\t#endif\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/depth_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'depth_vert' ] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'distanceRGBA_frag' ] = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'distanceRGBA_vert' ] = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvWorldPosition = worldPosition;\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/equirect_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'equirect_frag' ] = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 direction = normalize( vWorldPosition );\\n\tvec2 sampleUV;\\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/equirect_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'equirect_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/linedashed_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'linedashed_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <color_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/linedashed_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'linedashed_vert' ] = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\tvLineDistance = scale * lineDistance;\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\tgl_Position = projectionMatrix * mvPosition;\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshbasic_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\tReflectedLight reflectedLight;\\n\treflectedLight.directDiffuse = vec3( 0.0 );\\n\treflectedLight.directSpecular = vec3( 0.0 );\\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshbasic_vert' ] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <skinbase_vertex>\\n\t#ifdef USE_ENVMAP\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <envmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshlambert_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshlambert_frag' ] = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <emissivemap_fragment>\\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\t#include <lightmap_fragment>\\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\t#ifdef DOUBLE_SIDED\\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\t#else\\n\t\treflectedLight.directDiffuse = vLightFront;\\n\t#endif\\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshlambert_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshlambert_vert' ] = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_lambert_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshphong_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshphong_frag' ] = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_phong_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshphong_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshphong_vert' ] = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshphysical_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshphysical_frag' ] = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <roughnessmap_fragment>\\n\t#include <metalnessmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_physical_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshphysical_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshphysical_vert' ] = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/normal_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'normal_frag' ] = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/normal_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'normal_vert' ] = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvNormal = normalize( normalMatrix * normal );\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/points_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'points_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_particle_fragment>\\n\t#include <color_fragment>\\n\t#include <alphatest_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/points_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'points_vert' ] = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\t#else\\n\t\tgl_PointSize = size;\\n\t#endif\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/shadow_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadow_frag' ] = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/shadow_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadow_vert' ] = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'common' ],\r\n\t\t\tTHREE.UniformsLib[ 'aomap' ],\r\n\t\t\tTHREE.UniformsLib[ 'fog' ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'meshbasic_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshbasic_frag' ]\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'common' ],\r\n\t\t\tTHREE.UniformsLib[ 'aomap' ],\r\n\t\t\tTHREE.UniformsLib[ 'lightmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\r\n\t\t\tTHREE.UniformsLib[ 'fog' ],\r\n\t\t\tTHREE.UniformsLib[ 'lights' ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'meshlambert_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshlambert_frag' ]\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'common' ],\r\n\t\t\tTHREE.UniformsLib[ 'aomap' ],\r\n\t\t\tTHREE.UniformsLib[ 'lightmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\r\n\t\t\tTHREE.UniformsLib[ 'bumpmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'normalmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'displacementmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'fog' ],\r\n\t\t\tTHREE.UniformsLib[ 'lights' ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"1f\", value: 30 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'meshphong_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshphong_frag' ]\r\n\r\n\t},\r\n\r\n\t'standard': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'common' ],\r\n\t\t\tTHREE.UniformsLib[ 'aomap' ],\r\n\t\t\tTHREE.UniformsLib[ 'lightmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\r\n\t\t\tTHREE.UniformsLib[ 'bumpmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'normalmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'displacementmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'roughnessmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'metalnessmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'fog' ],\r\n\t\t\tTHREE.UniformsLib[ 'lights' ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"roughness\": { type: \"1f\", value: 0.5 },\r\n\t\t\t\t\"metalness\": { type: \"1f\", value: 0 },\r\n\t\t\t\t\"envMapIntensity\" : { type: \"1f\", value: 1 } // temporary\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\r\n\r\n\t},\r\n\r\n\t'points': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'points' ],\r\n\t\t\tTHREE.UniformsLib[ 'fog' ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'points_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'points_frag' ]\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'common' ],\r\n\t\t\tTHREE.UniformsLib[ 'fog' ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"1f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"1f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"1f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'linedashed_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'linedashed_frag' ]\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'common' ],\r\n\t\t\tTHREE.UniformsLib[ 'displacementmap' ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'depth_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'depth_frag' ]\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"1f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'normal_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'normal_frag' ]\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: {\r\n\t\t\t\"tCube\": { type: \"t\", value: null },\r\n\t\t\t\"tFlip\": { type: \"1f\", value: - 1 }\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'cube_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'cube_frag' ]\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: {\r\n\t\t\t\"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\"tFlip\": { type: \"1f\", value: - 1 }\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'equirect_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'equirect_frag' ]\r\n\r\n\t},\r\n\r\n\t'distanceRGBA': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"lightPos\": { type: \"v3\", value: new THREE.Vector3() }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'distanceRGBA_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'distanceRGBA_frag' ]\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderLib[ 'physical' ] = {\r\n\r\n\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\tTHREE.ShaderLib[ 'standard' ].uniforms,\r\n\r\n\t\t{\r\n\t\t\t// future\r\n\t\t}\r\n\r\n\t] ),\r\n\r\n\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\r\n\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\r\n\r\n};\r\n\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n * @author tschw\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar opaqueObjectsLastIndex = - 1;\r\n\tvar transparentObjects = [];\r\n\tvar transparentObjectsLastIndex = - 1;\r\n\r\n\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// user-defined clipping\r\n\r\n\tthis.clippingPlanes = [];\r\n\tthis.localClippingEnabled = false;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// physical lights\r\n\r\n\tthis.physicallyCorrectLights = false;\r\n\r\n\t// tone mapping\r\n\r\n\tthis.toneMapping = THREE.LinearToneMapping;\r\n\tthis.toneMappingExposure = 1.0;\r\n\tthis.toneMappingWhitePoint = 1.0;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentRenderTarget = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_currentScissor = new THREE.Vector4(),\r\n\t_currentScissorTest = null,\r\n\r\n\t_currentViewport = new THREE.Vector4(),\r\n\r\n\t//\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t//\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0,\r\n\r\n\t_width = _canvas.width,\r\n\t_height = _canvas.height,\r\n\r\n\t_pixelRatio = 1,\r\n\r\n\t_scissor = new THREE.Vector4( 0, 0, _width, _height ),\r\n\t_scissorTest = false,\r\n\r\n\t_viewport = new THREE.Vector4( 0, 0, _width, _height ),\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t// clipping\r\n\r\n\t_clipping = new THREE.WebGLClipping(),\r\n\t_clippingEnabled = false,\r\n\t_localClippingEnabled = false,\r\n\r\n\t_sphere = new THREE.Sphere(),\r\n\r\n\t// camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_lights = {\r\n\r\n\t\thash: '',\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: [],\r\n\t\tdirectionalShadowMap: [],\r\n\t\tdirectionalShadowMatrix: [],\r\n\t\tspot: [],\r\n\t\tspotShadowMap: [],\r\n\t\tspotShadowMatrix: [],\r\n\t\tpoint: [],\r\n\t\tpointShadowMap: [],\r\n\t\tpointShadowMatrix: [],\r\n\t\themi: [],\r\n\r\n\t\tshadows: []\r\n\r\n\t},\r\n\r\n\t// info\r\n\r\n\t_infoMemory = {\r\n\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\r\n\t},\r\n\r\n\t_infoRender = {\r\n\r\n\t\tcalls: 0,\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tpoints: 0\r\n\r\n\t};\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: _infoRender,\r\n\t\tmemory: _infoMemory,\r\n\t\tprograms: null\r\n\r\n\t};\r\n\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\r\n\r\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\r\n\t\t\t_gl.getShaderPrecisionFormat = function () {\r\n\r\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar _isWebGL2 = (typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext);\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'WEBGL_depth_texture' );\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\r\n\t}\r\n\r\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\tvar properties = new THREE.WebGLProperties();\r\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\tvar lightCache = new THREE.WebGLLights();\r\n\r\n\tthis.info.programs = programCache.programs;\r\n\r\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n\t//\r\n\r\n\tfunction getTargetPixelRatio() {\r\n\r\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\r\n\r\n\t}\r\n\r\n\tfunction glClearColor( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\tstate.clearColor( r, g, b, a );\r\n\r\n\t}\r\n\r\n\tfunction setDefaultGLState() {\r\n\r\n\t\tstate.init();\r\n\r\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\r\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t}\r\n\r\n\tfunction resetGLState() {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\tstate.reset();\r\n\r\n\t}\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.capabilities = capabilities;\r\n\tthis.extensions = extensions;\r\n\tthis.properties = properties;\r\n\tthis.state = state;\r\n\r\n\t// shadow map\r\n\r\n\tvar shadowMap = new THREE.WebGLShadowMap( this, _lights, objects );\r\n\r\n\tthis.shadowMap = shadowMap;\r\n\r\n\r\n\t// Plugins\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.getContextAttributes = function () {\r\n\r\n\t\treturn _gl.getContextAttributes();\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function getMaxAnisotropy() {\r\n\r\n\t\t\tif ( value !== undefined ) return value;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t};\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn capabilities.precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn _pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tif ( value === undefined ) return;\r\n\r\n\t\t_pixelRatio = value;\r\n\r\n\t\tthis.setSize( _viewport.z, _viewport.w, false );\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _width,\r\n\t\t\theight: _height\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\r\n\t\t_canvas.width = width * _pixelRatio;\r\n\t\t_canvas.height = height * _pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\tstate.viewport( _viewport.set( x, y, width, height ) );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\tstate.scissor( _scissor.set( x, y, width, height ) );\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( boolean ) {\r\n\r\n\t\tstate.setScissorTest( _scissorTest = boolean );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\tthis.clear( true, false, false );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\tthis.clear( false, true, false );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\tthis.clear( false, false, true );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\tthis.dispose = function() {\r\n\r\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tfunction onContextLost( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tresetGLState();\r\n\t\tsetDefaultGLState();\r\n\r\n\t\tproperties.clear();\r\n\r\n\t}\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t}\r\n\r\n\t// Buffer deallocation\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\t// remove all webgl properties\r\n\t\tproperties.delete( texture );\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\tif ( ! renderTarget ) return;\r\n\r\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\tif ( renderTarget.depthTexture ) {\r\n\r\n\t\t\trenderTarget.depthTexture.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( renderTarget.texture );\r\n\t\tproperties.delete( renderTarget );\r\n\r\n\t}\r\n\r\n\tfunction deallocateMaterial( material ) {\r\n\r\n\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\tproperties.delete( material );\r\n\r\n\t}\r\n\r\n\r\n\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\tprogramCache.releaseProgram( programInfo );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar buffers = properties.get( object );\r\n\r\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.type !== 'MeshPhysicalMaterial' && material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvar array = object.normalArray;\r\n\r\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\r\n\r\n\t\tsetMaterial( material );\r\n\r\n\t\tvar program = setProgram( camera, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false;\r\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tvar activeInfluences = [];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tactiveInfluences.sort( absNumericalSort );\r\n\r\n\t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n\t\t\t\tactiveInfluences.length = 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprogram.getUniforms().setValue(\r\n\t\t\t\t\t_gl, 'morphTargetInfluences', morphInfluences );\r\n\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tvar renderer;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\trenderer.setIndex( index );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer = bufferRenderer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar dataStart = 0;\r\n\t\tvar dataCount = Infinity;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tdataCount = index.count;\r\n\r\n\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\tdataCount = position.count;\r\n\r\n\t\t}\r\n\r\n\t\tvar rangeStart = geometry.drawRange.start;\r\n\t\tvar rangeCount = geometry.drawRange.count;\r\n\r\n\t\tvar groupStart = group !== null ? group.start : 0;\r\n\t\tvar groupCount = group !== null ? group.count : Infinity;\r\n\r\n\t\tvar drawStart = Math.max( dataStart, rangeStart, groupStart );\r\n\t\tvar drawEnd = Math.min( dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\r\n\r\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\r\n\r\n\t\t//\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tswitch ( object.drawMode ) {\r\n\r\n\t\t\t\t\tcase THREE.TrianglesDrawMode:\r\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.TriangleStripDrawMode:\r\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.TriangleFanDrawMode:\r\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\r\n\r\n\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Points ) {\r\n\r\n\t\t\trenderer.setMode( _gl.POINTS );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.render( drawStart, drawCount );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tvar type = _gl.FLOAT;\r\n\t\t\t\t\tvar array = geometryAttribute.array;\r\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\r\n\r\n\t\t\t\t\tif ( array instanceof Float32Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.FLOAT;\r\n\r\n\t\t\t\t\t} else if ( array instanceof Float64Array ) {\r\n\r\n\t\t\t\t\t\tconsole.warn(\"Unsupported data buffer format: Float64Array\");\r\n\r\n\t\t\t\t\t} else if ( array instanceof Uint16Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\r\n\t\t\t\t\t} else if ( array instanceof Int16Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.SHORT;\r\n\r\n\t\t\t\t\t} else if ( array instanceof Uint32Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\r\n\t\t\t\t\t} else if ( array instanceof Int32Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.INT;\r\n\r\n\t\t\t\t\t} else if ( array instanceof Int8Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.BYTE;\r\n\r\n\t\t\t\t\t} else if ( array instanceof Uint8Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.UNSIGNED_BYTE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction absNumericalSort( a, b ) {\r\n\r\n\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\r\n\t\topaqueObjectsLastIndex = - 1;\r\n\t\ttransparentObjectsLastIndex = - 1;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\t_localClippingEnabled = this.localClippingEnabled;\r\n\t\t_clippingEnabled = _clipping.init(\r\n\t\t\t\tthis.clippingPlanes, _localClippingEnabled, camera );\r\n\r\n\t\tprojectObject( scene, camera );\r\n\r\n\r\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\r\n\r\n\t\tsetupShadows( lights );\r\n\r\n\t\tshadowMap.render( scene, camera );\r\n\r\n\t\tsetupLights( lights, camera );\r\n\r\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\r\n\r\n\t\t//\r\n\r\n\t\t_infoRender.calls = 0;\r\n\t\t_infoRender.vertices = 0;\r\n\t\t_infoRender.faces = 0;\r\n\t\t_infoRender.points = 0;\r\n\r\n\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\trenderTarget = null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\t\trenderObjects( opaqueObjects, camera, fog );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, fog );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar texture = renderTarget.texture;\r\n\r\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\r\n\t\t\t\t\ttexture.minFilter !== THREE.NearestFilter &&\r\n\t\t\t\t\ttexture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tarray = transparentObjects;\r\n\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueObjects;\r\n\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing render item or grow the array\r\n\r\n\t\tvar renderItem = array[ index ];\r\n\r\n\t\tif ( renderItem !== undefined ) {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.z = _vector3.z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tz: _vector3.z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// TODO Duplicated code (Frustum)\r\n\r\n\tfunction isObjectViewable( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null )\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t_sphere.copy( geometry.boundingSphere ).\r\n\t\t\tapplyMatrix4( object.matrixWorld );\r\n\r\n\t\treturn isSphereViewable( _sphere );\r\n\r\n\t}\r\n\r\n\tfunction isSpriteViewable( sprite ) {\r\n\r\n\t\t_sphere.center.set( 0, 0, 0 );\r\n\t\t_sphere.radius = 0.7071067811865476;\r\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\r\n\r\n\t\treturn isSphereViewable( _sphere );\r\n\r\n\t}\r\n\r\n\tfunction isSphereViewable( sphere ) {\r\n\r\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\r\n\r\n\t\tvar numPlanes = _clipping.numPlanes;\r\n\r\n\t\tif ( numPlanes === 0 ) return true;\r\n\r\n\t\tvar planes = _this.clippingPlanes,\r\n\r\n\t\t\tcenter = sphere.center,\r\n\t\t\tnegRad = - sphere.radius,\r\n\t\t\ti = 0;\r\n\r\n\t\tdo {\r\n\r\n\t\t\t// out when deeper than radius in the negative halfspace\r\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\r\n\r\n\t\t} while ( ++ i !== numPlanes );\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object.layers.test( camera.layers ) ) {\r\n\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\t\tlights.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\t\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\r\n\r\n\t\t\t\t\tsprites.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\t\tlensFlares.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\r\n\r\n\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n\t\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\r\n\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, fog, overrideMaterial ) {\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\tvar object = renderItem.object;\r\n\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\t\tsetMaterial( material );\r\n\r\n\t\t\t\tvar program = setProgram( camera, fog, material, object );\r\n\r\n\t\t\t\t_currentGeometryProgram = '';\r\n\r\n\t\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.renderBufferDirect( camera, fog, geometry, material, object, group );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initMaterial( material, fog, object ) {\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tvar parameters = programCache.getParameters(\r\n\t\t\t\tmaterial, _lights, fog, _clipping.numPlanes, object );\r\n\r\n\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\tvar program = materialProperties.program;\r\n\t\tvar programChange = true;\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\t// new material\r\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t// changed glsl or parameters\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t// same glsl and uniform list\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// only rebuild uniform list\r\n\t\t\tprogramChange = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( programChange ) {\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n\t\t\tmaterialProperties.program = program;\r\n\t\t\tmaterial.program = program;\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( ! ( material instanceof THREE.ShaderMaterial ) &&\r\n\t\t\t\t! ( material instanceof THREE.RawShaderMaterial ) ||\r\n\t\t\t\tmaterial.clipping === true ) {\r\n\r\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\r\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.lights ) {\r\n\r\n\t\t\t// store the light setup it was created for\r\n\r\n\t\t\tmaterialProperties.lightsHash = _lights.hash;\r\n\r\n\t\t\t// wire up the material to this renderer's lighting state\r\n\r\n\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\r\n\t\t\tuniforms.directionalLights.value = _lights.directional;\r\n\t\t\tuniforms.spotLights.value = _lights.spot;\r\n\t\t\tuniforms.pointLights.value = _lights.point;\r\n\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\r\n\r\n\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\r\n\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\r\n\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\r\n\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\r\n\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\r\n\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\r\n\r\n\t\t}\r\n\r\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\r\n\t\t\tuniformsList =\r\n\t\t\t\t\tTHREE.WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\r\n\r\n\t\tmaterialProperties.uniformsList = uniformsList;\r\n\t\tmaterialProperties.dynamicUniforms =\r\n\t\t\t\tTHREE.WebGLUniforms.splitDynamic( uniformsList, uniforms );\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tif ( material.side !== THREE.DoubleSide )\r\n\t\t\tstate.enable( _gl.CULL_FACE );\r\n\t\telse\r\n\t\t\tstate.disable( _gl.CULL_FACE );\r\n\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tif ( _clippingEnabled ) {\r\n\r\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\r\n\r\n\t\t\t\tvar useCache =\r\n\t\t\t\t\t\tcamera === _currentCamera &&\r\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\r\n\r\n\t\t\t\t// we might want to call this function with some ClippingGroup\r\n\t\t\t\t// object instead of the material, once it becomes feasible\r\n\t\t\t\t// (#8465, #8379)\r\n\t\t\t\t_clipping.setState(\r\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipShadows,\r\n\t\t\t\t\t\tcamera, materialProperties, useCache );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialProperties.numClippingPlanes !== undefined &&\r\n\t\t\t\tmaterialProperties.numClippingPlanes !== _clipping.numPlanes ) {\r\n\r\n\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialProperties.program === undefined ) {\r\n\r\n\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialProperties.lightsHash !== undefined &&\r\n\t\t\tmaterialProperties.lightsHash !== _lights.hash ) {\r\n\r\n\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.needsUpdate ) {\r\n\r\n\t\t\tinitMaterial( material, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = materialProperties.program,\r\n\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\r\n\r\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\r\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) {\r\n\r\n\t\t\t\t_currentCamera = camera;\r\n\r\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\r\n\t\t\t\t// now, in case this material supports lights - or later, when\r\n\t\t\t\t// the next material that does gets activated:\r\n\r\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\r\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\r\n\r\n\t\t\t\tif ( uCamPos !== undefined ) {\r\n\r\n\t\t\t\t\tuCamPos.setValue( _gl,\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\r\n\t\t\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\r\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\r\n\r\n\t\t\tvar skeleton = object.skeleton;\r\n\r\n\t\t\tif ( skeleton ) {\r\n\r\n\t\t\t\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\r\n\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\r\n\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\tif ( material.lights ) {\r\n\r\n\t\t\t\t// the current material requires lighting info\r\n\r\n\t\t\t\t// note: all lighting uniforms are always set correctly\r\n\t\t\t\t// they simply reference the renderer's state for their\r\n\t\t\t\t// values\r\n\t\t\t\t//\r\n\t\t\t\t// use the current material's .needsUpdate flags to set\r\n\t\t\t\t// the GL state when required\r\n\r\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhysicalMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshStandardMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsStandard( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tTHREE.WebGLUniforms.upload(\r\n\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// common matrices\r\n\r\n\t\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\r\n\t\tp_uniforms.set( _gl, object, 'normalMatrix' );\r\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\r\n\r\n\r\n\t\t// dynamic uniforms\r\n\r\n\t\tvar dynUniforms = materialProperties.dynamicUniforms;\r\n\r\n\t\tif ( dynUniforms !== null ) {\r\n\r\n\t\t\tTHREE.WebGLUniforms.evalDynamic(\r\n\t\t\t\t\tdynUniforms, m_uniforms, object, camera );\r\n\r\n\t\t\tTHREE.WebGLUniforms.upload( _gl, dynUniforms, m_uniforms, _this );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t// 1. color map\r\n\t\t// 2. specular map\r\n\t\t// 3. normal map\r\n\t\t// 4. bump map\r\n\t\t// 5. alpha map\r\n\t\t// 6. emissive map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.roughnessMap ) {\r\n\r\n\t\t\tuvScaleMap = material.roughnessMap;\r\n\r\n\t\t} else if ( material.metalnessMap ) {\r\n\r\n\t\t\tuvScaleMap = material.metalnessMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\t// backwards compatibility\r\n\t\t\tif ( uvScaleMap instanceof THREE.WebGLRenderTarget ) {\r\n\r\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\r\n\t\t// don't flip CubeTexture envMaps, flip everything else:\r\n\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\r\n\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\r\n\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\r\n\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap instanceof THREE.CubeTexture ) ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPoints ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size * _pixelRatio;\r\n\t\tuniforms.scale.value = _canvas.clientHeight * 0.5;\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLambert ( uniforms, material ) {\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsStandard ( uniforms, material ) {\r\n\r\n\t\tuniforms.roughness.value = material.roughness;\r\n\t\tuniforms.metalness.value = material.metalness;\r\n\r\n\t\tif ( material.roughnessMap ) {\r\n\r\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.metalnessMap ) {\r\n\r\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.envMap ) {\r\n\r\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\r\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhysical ( uniforms, material ) {\r\n\r\n\t\trefreshUniformsStandard( uniforms, material );\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLights.needsUpdate = value;\r\n\t\tuniforms.pointLights.needsUpdate = value;\r\n\t\tuniforms.spotLights.needsUpdate = value;\r\n\t\tuniforms.hemisphereLights.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\t// Lighting\r\n\r\n\tfunction setupShadows ( lights ) {\r\n\r\n\t\tvar lightShadowsLength = 0;\r\n\r\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t_lights.shadows[ lightShadowsLength ++ ] = light;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_lights.shadows.length = lightShadowsLength;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights, camera ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\t\tshadowMap,\r\n\r\n\t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n\t\tdirectionalLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tr += color.r * intensity;\r\n\t\t\t\tg += color.g * intensity;\r\n\t\t\t\tb += color.b * intensity;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tuniforms.direction.sub( _vector3 );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\r\n\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\r\n\t\t\t\t_lights.directional[ directionalLength ++ ] = uniforms;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\t\t\t\tuniforms.distance = distance;\r\n\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tuniforms.direction.sub( _vector3 );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\r\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\r\n\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\r\n\t\t\t\t_lights.spot[ spotLength ++ ] = uniforms;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\tuniforms.distance = light.distance;\r\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\r\n\r\n\t\t\t\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\r\n\r\n\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = new THREE.Matrix4();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\r\n\t\t\t\t// equal to inverse of the light's position\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\r\n\t\t\t\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\r\n\r\n\t\t\t\t_lights.point[ pointLength ++ ] = uniforms;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\t\t\t\tuniforms.direction.normalize();\r\n\r\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\r\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\r\n\r\n\t\t\t\t_lights.hemi[ hemiLength ++ ] = uniforms;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_lights.ambient[ 0 ] = r;\r\n\t\t_lights.ambient[ 1 ] = g;\r\n\t\t_lights.ambient[ 2 ] = b;\r\n\r\n\t\t_lights.directional.length = directionalLength;\r\n\t\t_lights.spot.length = spotLength;\r\n\t\t_lights.point.length = pointLength;\r\n\t\t_lights.hemi.length = hemiLength;\r\n\r\n\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tstate.setCullFace( cullFace );\r\n\t\tstate.setFlipSided( frontFaceDirection === THREE.FrontFaceDirectionCW );\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction allocTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isPowerOfTwoImage ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isPowerOfTwoImage ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension ) {\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\r\n\r\n\t\t\timage = makePowerOfTwo( image );\r\n\r\n\t\t}\r\n\r\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DepthTexture ) {\r\n\r\n\t\t\t// populate depth texture with dummy data\r\n\r\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType ) {\r\n\r\n\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\r\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\r\n\r\n\t\t\t} else if ( _isWebGL2 ) {\r\n\r\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\r\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\r\n\r\n\t\t} else if ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t}\r\n\r\n\tfunction setTexture2D( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tvar image = texture.image;\r\n\r\n\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t}\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction isPowerOfTwo( image ) {\r\n\r\n\t\treturn THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height );\r\n\r\n\t}\r\n\r\n\tfunction textureNeedsPowerOfTwo( texture ) {\r\n\r\n\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) return true;\r\n\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) return true;\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction makePowerOfTwo( image ) {\r\n\r\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\r\n\t\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setTextureCube ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setTextureCubeDynamic ( texture, slot ) {\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t}\r\n\r\n\tthis.allocTextureUnit = allocTextureUnit;\r\n\r\n\t//this.setTexture2D = setTexture2D;\r\n\tthis.setTexture2D = ( function() {\r\n\r\n\t\tvar warned = false;\r\n\r\n\t\t// backwards compatibility: peel texture.texture\r\n\t\treturn function( texture, slot ) {\r\n\r\n\t\t\tif ( texture instanceof THREE.WebGLRenderTarget ) {\r\n\r\n\t\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\t\twarned = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture = texture.texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsetTexture2D( texture, slot );\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\tthis.setTexture = ( function() {\r\n\r\n\t\tvar warned = false;\r\n\r\n\t\treturn function( texture, slot ) {\r\n\r\n\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\r\n\t\t\t\twarned = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.setTexture2D( texture, slot );\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\tthis.setTextureCube = ( function() {\r\n\r\n\t\tvar warned = false;\r\n\r\n\t\treturn function( texture, slot ) {\r\n\r\n\t\t\t// backwards compatibility: peel texture.texture\r\n\t\t\tif ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\t\twarned = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture = texture.texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\r\n\t\t\t// TODO: unify these code paths\r\n\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t// this function alone should take care of cube textures\r\n\t\t\t\tsetTextureCube( texture, slot );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\r\n\r\n\t\t\t\tsetTextureCubeDynamic( texture, slot );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\t// Render targets\r\n\r\n\t// Setup storage for target texture and bind it to correct framebuffer\r\n\tfunction setupFrameBufferTexture ( framebuffer, renderTarget, attachment, textureTarget ) {\r\n\r\n\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\r\n\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\r\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\tfunction setupRenderBufferStorage ( renderbuffer, renderTarget ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// FIXME: We don't support !depth !stencil\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\r\n\tfunction setupDepthTexture ( framebuffer, renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\tif ( !( renderTarget.depthTexture instanceof THREE.DepthTexture ) ) {\r\n\r\n\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\r\n\r\n\t\t}\r\n\r\n\t\t// upload an empty depth texture with framebuffer size\r\n\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\r\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\r\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\r\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\r\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\r\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\r\n\t\t}\r\n\r\n\t\t_this.setTexture2D( renderTarget.depthTexture, 0 );\r\n\r\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\r\n\r\n\t}\r\n\r\n\t// Setup GL resources for a non-texture depth buffer\r\n\tfunction setupDepthRenderbuffer( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget.depthTexture ) {\r\n\r\n\t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\r\n\r\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Set up GL resources for the render target\r\n\tfunction setupRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t_infoMemory.textures ++;\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height );\r\n\r\n\t\t// Setup framebuffer\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t}\r\n\r\n\t\t// Setup color buffer\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\r\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\r\n\r\n\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t\t// Setup depth and stencil buffers\r\n\r\n\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\tsetupDepthRenderbuffer( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.getCurrentRenderTarget = function() {\r\n\r\n\t\treturn _currentRenderTarget;\r\n\r\n\t};\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\t_currentRenderTarget = renderTarget;\r\n\r\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tsetupRenderTarget( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\tvar framebuffer;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_currentScissor.copy( renderTarget.scissor );\r\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\r\n\r\n\t\t\t_currentViewport.copy( renderTarget.viewport );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\r\n\t\t\t_currentScissorTest = _scissorTest;\r\n\r\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\r\n\r\n\t\t}\r\n\r\n\t\tif ( _currentFramebuffer !== framebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\tstate.scissor( _currentScissor );\r\n\t\tstate.setScissorTest( _currentScissorTest );\r\n\r\n\t\tstate.viewport( _currentViewport );\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTarget === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\tif ( framebuffer ) {\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tvar texture = renderTarget.texture;\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && paramThreeToGL( texture.format ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.type !== THREE.UnsignedByteType &&\r\n\t\t\t\t     paramThreeToGL( texture.type ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) &&\r\n\t\t\t\t     ! ( texture.type === THREE.FloatType && extensions.get( 'WEBGL_color_buffer_float' ) ) &&\r\n\t\t\t\t     ! ( texture.type === THREE.HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n\r\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\r\n\r\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( texture.format ), paramThreeToGL( texture.type ), buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} finally {\r\n\r\n\t\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap( renderTarget ) {\r\n\r\n\t\tvar target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\r\n\t\tvar texture = properties.get( renderTarget.texture ).__webglTexture;\r\n\r\n\t\tstate.bindTexture( target, texture );\r\n\t\t_gl.generateMipmap( target );\r\n\t\tstate.bindTexture( target, null );\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\t\tif ( p === THREE.DepthFormat ) return _gl.DEPTH_COMPONENT;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author Marius Kintel / https://github.com/kintel\r\n */\r\n\r\n/*\r\n In options, we can specify:\r\n * Texture parameters for an auto-generated target texture\r\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n*/\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.scissor = new THREE.Vector4( 0, 0, width, height );\r\n\tthis.scissorTest = false;\r\n\r\n\tthis.viewport = new THREE.Vector4( 0, 0, width, height );\r\n\r\n\toptions = options || {};\r\n\r\n\tif ( options.minFilter === undefined ) options.minFilter = THREE.LinearFilter;\r\n\r\n\tthis.texture = new THREE.Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\tthis.depthTexture = null;\r\n\r\n};\r\n\r\nObject.assign( THREE.WebGLRenderTarget.prototype, THREE.EventDispatcher.prototype, {\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tthis.viewport.set( 0, 0, width, height );\r\n\t\tthis.scissor.set( 0, 0, width, height );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\tthis.viewport.copy( source.viewport );\r\n\r\n\t\tthis.texture = source.texture.clone();\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\tthis.depthTexture = source.depthTexture;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\tthis.activeMipMapLevel = 0;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawArrays( mode, start, count );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tvar count = 0;\r\n\r\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tcount = position.data.count;\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcount = position.count;\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLClipping.js\r\n\r\nTHREE.WebGLClipping = function() {\r\n\r\n\tvar scope = this,\r\n\r\n\t\tglobalState = null,\r\n\t\tnumGlobalPlanes = 0,\r\n\t\tlocalClippingEnabled = false,\r\n\t\trenderingShadows = false,\r\n\r\n\t\tplane = new THREE.Plane(),\r\n\t\tviewNormalMatrix = new THREE.Matrix3(),\r\n\r\n\t\tuniform = { value: null, needsUpdate: false };\r\n\r\n\tthis.uniform = uniform;\r\n\tthis.numPlanes = 0;\r\n\r\n\tthis.init = function( planes, enableLocalClipping, camera ) {\r\n\r\n\t\tvar enabled =\r\n\t\t\tplanes.length !== 0 ||\r\n\t\t\tenableLocalClipping ||\r\n\t\t\t// enable state of previous frame - the clipping code has to\r\n\t\t\t// run another frame in order to reset the state:\r\n\t\t\tnumGlobalPlanes !== 0 ||\r\n\t\t\tlocalClippingEnabled;\r\n\r\n\t\tlocalClippingEnabled = enableLocalClipping;\r\n\r\n\t\tglobalState = projectPlanes( planes, camera, 0 );\r\n\t\tnumGlobalPlanes = planes.length;\r\n\r\n\t\treturn enabled;\r\n\r\n\t};\r\n\r\n\tthis.beginShadows = function() {\r\n\r\n\t\trenderingShadows = true;\r\n\t\tprojectPlanes( null );\r\n\r\n\t};\r\n\r\n\tthis.endShadows = function() {\r\n\r\n\t\trenderingShadows = false;\r\n\t\tresetGlobalState();\r\n\r\n\t};\r\n\r\n\tthis.setState = function( planes, clipShadows, camera, cache, fromCache ) {\r\n\r\n\t\tif ( ! localClippingEnabled ||\r\n\t\t\t\tplanes === null || planes.length === 0 ||\r\n\t\t\t\trenderingShadows && ! clipShadows ) {\r\n\t\t\t// there's no local clipping\r\n\r\n\t\t\tif ( renderingShadows ) {\r\n\t\t\t\t// there's no global clipping\r\n\r\n\t\t\t\tprojectPlanes( null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tresetGlobalState();\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\r\n\t\t\t\tlGlobal = nGlobal * 4,\r\n\r\n\t\t\t\tdstArray = cache.clippingState || null;\r\n\r\n\t\t\tuniform.value = dstArray; // ensure unique state\r\n\r\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\r\n\r\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\r\n\r\n\t\t\t\tdstArray[ i ] = globalState[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcache.clippingState = dstArray;\r\n\t\t\tthis.numPlanes += nGlobal;\r\n\r\n\t\t}\r\n\r\n\r\n\t};\r\n\r\n\tfunction resetGlobalState() {\r\n\r\n\t\tif ( uniform.value !== globalState ) {\r\n\r\n\t\t\tuniform.value = globalState;\r\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\r\n\r\n\t\t}\r\n\r\n\t\tscope.numPlanes = numGlobalPlanes;\r\n\r\n\t}\r\n\r\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\r\n\r\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\r\n\t\t\tdstArray = null;\r\n\r\n\t\tif ( nPlanes !== 0 ) {\r\n\r\n\t\t\tdstArray = uniform.value;\r\n\r\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\r\n\r\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\r\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\r\n\r\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\r\n\r\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0, i4 = dstOffset;\r\n\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\r\n\r\n\t\t\t\t\tplane.copy( planes[ i ] ).\r\n\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\r\n\r\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\r\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniform.value = dstArray;\r\n\t\t\tuniform.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tscope.numPlanes = nPlanes;\r\n\t\treturn dstArray;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tvar type, size;\r\n\r\n\tfunction setIndex( index ) {\r\n\r\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\tsize = 4;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\tsize = 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawElements( mode, count, type, start * size );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry, start, count ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'WEBGL_depth_texture':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_etc1':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLCapabilities.js\r\n\r\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tthis.getMaxPrecision = getMaxPrecision;\r\n\r\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp';\r\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\r\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\r\n\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\r\n\tif ( _maxPrecision !== this.precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\tthis.precision = _maxPrecision;\r\n\r\n\t}\r\n\r\n\tif ( this.logarithmicDepthBuffer ) {\r\n\r\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLGeometries.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = {};\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n\t\t\treturn geometries[ geometry.id ];\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tvar buffergeometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\tif ( buffergeometry.index !== null ) {\r\n\r\n\t\t\tdeleteAttribute( buffergeometry.index );\r\n\r\n\t\t}\r\n\r\n\t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\t// TODO\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe ) {\r\n\r\n\t\t\tdeleteAttribute( property.wireframe );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( geometry );\r\n\r\n\t\tvar bufferproperty = properties.get( buffergeometry );\r\n\r\n\t\tif ( bufferproperty.wireframe ) {\r\n\r\n\t\t\tdeleteAttribute( bufferproperty.wireframe );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( buffergeometry );\r\n\r\n\t\t//\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction deleteAttribute( attribute ) {\r\n\r\n\t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n\t\tif ( buffer !== undefined ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\tremoveAttributeBuffer( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction deleteAttributes( attributes ) {\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tproperties.delete( attribute.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tproperties.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.get = get;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLLights.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLLights = function () {\r\n\r\n\tvar lights = {};\r\n\r\n\tthis.get = function ( light ) {\r\n\r\n\t\tif ( lights[ light.id ] !== undefined ) {\r\n\r\n\t\t\treturn lights[ light.id ];\r\n\r\n\t\t}\r\n\r\n\t\tvar uniforms;\r\n\r\n\t\tswitch ( light.type ) {\r\n\r\n\t\t\tcase 'DirectionalLight':\r\n\t\t\t\tuniforms = {\r\n\t\t\t\t\tdirection: new THREE.Vector3(),\r\n\t\t\t\t\tcolor: new THREE.Color(),\r\n\r\n\t\t\t\t\tshadow: false,\r\n\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\tshadowMapSize: new THREE.Vector2()\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SpotLight':\r\n\t\t\t\tuniforms = {\r\n\t\t\t\t\tposition: new THREE.Vector3(),\r\n\t\t\t\t\tdirection: new THREE.Vector3(),\r\n\t\t\t\t\tcolor: new THREE.Color(),\r\n\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\tconeCos: 0,\r\n\t\t\t\t\tpenumbraCos: 0,\r\n\t\t\t\t\tdecay: 0,\r\n\r\n\t\t\t\t\tshadow: false,\r\n\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\tshadowMapSize: new THREE.Vector2()\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PointLight':\r\n\t\t\t\tuniforms = {\r\n\t\t\t\t\tposition: new THREE.Vector3(),\r\n\t\t\t\t\tcolor: new THREE.Color(),\r\n\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\tdecay: 0,\r\n\r\n\t\t\t\t\tshadow: false,\r\n\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\tshadowMapSize: new THREE.Vector2()\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'HemisphereLight':\r\n\t\t\t\tuniforms = {\r\n\t\t\t\t\tdirection: new THREE.Vector3(),\r\n\t\t\t\t\tskyColor: new THREE.Color(),\r\n\t\t\t\t\tgroundColor: new THREE.Color()\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tlights[ light.id ] = uniforms;\r\n\r\n\t\treturn uniforms;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLObjects.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\r\n\t//\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n\t\tvar geometry = geometries.get( object );\r\n\r\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tgeometry.updateFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n\t\tvar attributeProperties = properties.get( data );\r\n\r\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n\t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n\t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe !== undefined ) {\r\n\r\n\t\t\treturn property.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = [];\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\t\tvar position = attributes.position;\r\n\r\n\t\t// console.time( 'wireframe' );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar edges = {};\r\n\t\t\tvar array = index.array;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar array = attributes.position.array;\r\n\r\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = i + 0;\r\n\t\t\t\tvar b = i + 1;\r\n\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\tproperty.wireframe = attribute;\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tfunction checkEdge( edges, a, b ) {\r\n\r\n\t\tif ( a > b ) {\r\n\r\n\t\t\tvar tmp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tvar list = edges[ a ];\r\n\r\n\t\tif ( list === undefined ) {\r\n\r\n\t\t\tedges[ a ] = [ b ];\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\r\n\t\t\tlist.push( b );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\r\n\tthis.update = update;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction getEncodingComponents( encoding ) {\r\n\r\n\t\tswitch ( encoding ) {\r\n\r\n\t\t\tcase THREE.LinearEncoding:\r\n\t\t\t\treturn [ 'Linear','( value )' ];\r\n\t\t\tcase THREE.sRGBEncoding:\r\n\t\t\t\treturn [ 'sRGB','( value )' ];\r\n\t\t\tcase THREE.RGBEEncoding:\r\n\t\t\t\treturn [ 'RGBE','( value )' ];\r\n\t\t\tcase THREE.RGBM7Encoding:\r\n\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\r\n\t\t\tcase THREE.RGBM16Encoding:\r\n\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\r\n\t\t\tcase THREE.RGBDEncoding:\r\n\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\r\n\t\t\tcase THREE.GammaEncoding:\r\n\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\r\n\r\n\t\tvar components = getEncodingComponents( encoding );\r\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\r\n\r\n\t}\r\n\r\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\r\n\r\n\t\tvar components = getEncodingComponents( encoding );\r\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\r\n\r\n\t}\r\n\r\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\r\n\r\n\t\tvar toneMappingName;\r\n\r\n\t\tswitch ( toneMapping ) {\r\n\r\n\t\t\tcase THREE.LinearToneMapping:\r\n\t\t\t\ttoneMappingName = \"Linear\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.ReinhardToneMapping:\r\n\t\t\t\ttoneMappingName = \"Reinhard\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.Uncharted2ToneMapping:\r\n\t\t\t\ttoneMappingName = \"Uncharted2\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.CineonToneMapping:\r\n\t\t\t\ttoneMappingName = \"OptimizedCineon\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\r\n\r\n\t\t}\r\n\r\n\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\r\n\r\n\t}\r\n\r\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\r\n\r\n\t\textensions = extensions || {};\r\n\r\n\t\tvar chunks = [\r\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\r\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\r\n\t\t];\r\n\r\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\tfunction replaceLightNums( string, parameters ) {\r\n\r\n\t\treturn string\r\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\r\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\r\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\r\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\r\n\r\n\t}\r\n\r\n\tfunction parseIncludes( string ) {\r\n\r\n\t\tvar pattern = /#include +<([\\w\\d.]+)>/g;\r\n\r\n\t\tfunction replace( match, include ) {\r\n\r\n\t\t\tvar replace = THREE.ShaderChunk[ include ];\r\n\r\n\t\t\tif ( replace === undefined ) {\r\n\r\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn parseIncludes( replace );\r\n\r\n\t\t}\r\n\r\n\t\treturn string.replace( pattern, replace );\r\n\r\n\t}\r\n\r\n\tfunction unrollLoops( string ) {\r\n\r\n\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\n\r\n\t\tfunction replace( match, start, end, snippet ) {\r\n\r\n\t\t\tvar unroll = '';\r\n\r\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\r\n\r\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn unroll;\r\n\r\n\t\t}\r\n\r\n\t\treturn string.replace( pattern, replace );\r\n\r\n\t}\r\n\r\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar extensions = material.extensions;\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.CubeUVReflectionMapping:\r\n\t\t\t\tcase THREE.CubeUVRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = '';\r\n\t\t\tprefixFragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tcustomExtensions,\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\r\n\r\n\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\r\n\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? THREE.ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\r\n\r\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? THREE.ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\r\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\r\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\r\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\r\n\r\n\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvertexShader = parseIncludes( vertexShader, parameters );\r\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\r\n\r\n\t\tfragmentShader = parseIncludes( fragmentShader, parameters );\r\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\r\n\r\n\t\tif ( material instanceof THREE.ShaderMaterial === false ) {\r\n\r\n\t\t\tvertexShader = unrollLoops( vertexShader );\r\n\t\t\tfragmentShader = unrollLoops( fragmentShader );\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\t// console.log( '*VERTEX*', vertexGlsl );\r\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\r\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function() {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms =\r\n\t\t\t\t\t\tnew THREE.WebGLUniforms( gl, program, renderer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function() {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function() {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLPrograms.js\r\n\r\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\r\n\tvar programs = [];\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tMeshStandardMaterial: 'physical',\r\n\t\tMeshPhysicalMaterial: 'physical',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points'\r\n\t};\r\n\r\n\tvar parameterNames = [\r\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\r\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\r\n\t\t\"roughnessMap\", \"metalnessMap\",\r\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\r\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\r\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\r\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"depthPacking\"\r\n\t];\r\n\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\r\n\r\n\t\tvar encoding;\r\n\r\n\t\tif ( ! map ) {\r\n\r\n\t\t\tencoding = THREE.LinearEncoding;\r\n\r\n\t\t} else if ( map instanceof THREE.Texture ) {\r\n\r\n\t\t\tencoding = map.encoding;\r\n\r\n\t\t} else if ( map instanceof THREE.WebGLRenderTarget ) {\r\n\r\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\r\n\t\t\tencoding = map.texture.encoding;\r\n\r\n\t\t}\r\n\r\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\r\n\t\tif ( encoding === THREE.LinearEncoding && gammaOverrideLinear ) {\r\n\r\n\t\t\tencoding = THREE.GammaEncoding;\r\n\r\n\t\t}\r\n\r\n\t\treturn encoding;\r\n\r\n\t}\r\n\r\n\tthis.getParameters = function ( material, lights, fog, nClipPlanes, object ) {\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxBones = allocateBones( object );\r\n\t\tvar precision = renderer.getPrecision();\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\r\n\t\t\tmap: !! material.map,\r\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\r\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === THREE.CubeUVReflectionMapping ) || ( material.envMap.mapping === THREE.CubeUVRefractionMapping ) ),\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\taoMap: !! material.aoMap,\r\n\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\troughnessMap: !! material.roughnessMap,\r\n\t\t\tmetalnessMap: !! material.metalnessMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\tnumDirLights: lights.directional.length,\r\n\t\t\tnumPointLights: lights.point.length,\r\n\t\t\tnumSpotLights: lights.spot.length,\r\n\t\t\tnumHemiLights: lights.hemi.length,\r\n\r\n\t\t\tnumClippingPlanes: nClipPlanes,\r\n\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\r\n\t\t\ttoneMapping: renderer.toneMapping,\r\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\r\n\r\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide,\r\n\r\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\r\n\r\n\t\t};\r\n\r\n\t\treturn parameters;\r\n\r\n\t};\r\n\r\n\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tarray.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray.push( material.fragmentShader );\r\n\t\t\tarray.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tarray.push( name );\r\n\t\t\t\tarray.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn array.join();\r\n\r\n\t};\r\n\r\n\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tthis.releaseProgram = function( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tvar i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\tthis.programs = programs;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProperties.js\r\n\r\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\r\n\r\nTHREE.WebGLProperties = function () {\r\n\r\n\tvar properties = {};\r\n\r\n\tthis.get = function ( object ) {\r\n\r\n\t\tvar uuid = object.uuid;\r\n\t\tvar map = properties[ uuid ];\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties[ uuid ] = map;\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t};\r\n\r\n\tthis.delete = function ( object ) {\r\n\r\n\t\tdelete properties[ object.uuid ];\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tproperties = {};\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tfunction addLineNumbers( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t}\r\n\r\n\treturn function WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShadowMap.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\r\n\tvar _gl = _renderer.context,\r\n\t_state = _renderer.state,\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_lightShadows = _lights.shadows,\r\n\r\n\t_shadowMapSize = new THREE.Vector2(),\r\n\r\n\t_lookTarget = new THREE.Vector3(),\r\n\t_lightPositionWorld = new THREE.Vector3(),\r\n\r\n\t_renderList = [],\r\n\r\n\t_MorphingFlag = 1,\r\n\t_SkinningFlag = 2,\r\n\r\n\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\r\n\r\n\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\r\n\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\r\n\r\n\t_materialCache = {};\r\n\r\n\tvar cubeDirections = [\r\n\t\tnew THREE.Vector3( 1, 0, 0 ), new THREE.Vector3( - 1, 0, 0 ), new THREE.Vector3( 0, 0, 1 ),\r\n\t\tnew THREE.Vector3( 0, 0, - 1 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 )\r\n\t];\r\n\r\n\tvar cubeUps = [\r\n\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ),\r\n\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 0, 1 ),\tnew THREE.Vector3( 0, 0, - 1 )\r\n\t];\r\n\r\n\tvar cube2DViewPorts = [\r\n\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(),\r\n\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()\r\n\t];\r\n\r\n\t// init\r\n\r\n\tvar depthMaterialTemplate = new THREE.MeshDepthMaterial();\r\n\tdepthMaterialTemplate.depthPacking = THREE.RGBADepthPacking;\r\n\tdepthMaterialTemplate.clipping = true;\r\n\r\n\tvar distanceShader = THREE.ShaderLib[ \"distanceRGBA\" ];\r\n\tvar distanceUniforms = THREE.UniformsUtils.clone( distanceShader.uniforms );\r\n\r\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\r\n\r\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\r\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\r\n\r\n\t\tvar depthMaterial = depthMaterialTemplate.clone();\r\n\t\tdepthMaterial.morphTargets = useMorphing;\r\n\t\tdepthMaterial.skinning = useSkinning;\r\n\r\n\t\t_depthMaterials[ i ] = depthMaterial;\r\n\r\n\t\tvar distanceMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tdefines: {\r\n\t\t\t\t'USE_SHADOWMAP': ''\r\n\t\t\t},\r\n\t\t\tuniforms: distanceUniforms,\r\n\t\t\tvertexShader: distanceShader.vertexShader,\r\n\t\t\tfragmentShader: distanceShader.fragmentShader,\r\n\t\t\tmorphTargets: useMorphing,\r\n\t\t\tskinning: useSkinning,\r\n\t\t\tclipping: true\r\n\t\t} );\r\n\r\n\t\t_distanceMaterials[ i ] = distanceMaterial;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = THREE.PCFShadowMap;\r\n\r\n\tthis.renderReverseSided = true;\r\n\tthis.renderSingleSided = true;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\tif ( _lightShadows.length === 0 ) return;\r\n\r\n\t\t// Set GL state for depth map.\r\n\t\t_state.clearColor( 1, 1, 1, 1 );\r\n\t\t_state.disable( _gl.BLEND );\r\n\t\t_state.setDepthTest( true );\r\n\t\t_state.setScissorTest( false );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tvar faceCount, isPointLight;\r\n\r\n\t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar light = _lightShadows[ i ];\r\n\t\t\tvar shadow = light.shadow;\r\n\r\n\t\t\tif ( shadow === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowCamera = shadow.camera;\r\n\r\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\r\n\r\n\t\t\tif ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tfaceCount = 6;\r\n\t\t\t\tisPointLight = true;\r\n\r\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\r\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\r\n\r\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t\t// following orientation:\r\n\t\t\t\t//\r\n\t\t\t\t//  xzXZ\r\n\t\t\t\t//   y Y\r\n\t\t\t\t//\r\n\t\t\t\t// X - Positive x direction\r\n\t\t\t\t// x - Negative x direction\r\n\t\t\t\t// Y - Positive y direction\r\n\t\t\t\t// y - Negative y direction\r\n\t\t\t\t// Z - Positive z direction\r\n\t\t\t\t// z - Negative z direction\r\n\r\n\t\t\t\t// positive X\r\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t// negative X\r\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t// positive Z\r\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t// negative Z\r\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t// positive Y\r\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\r\n\t\t\t\t// negative Y\r\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\r\n\r\n\t\t\t\t_shadowMapSize.x *= 4.0;\r\n\t\t\t\t_shadowMapSize.y *= 2.0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfaceCount = 1;\r\n\t\t\t\tisPointLight = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( shadow.map === null ) {\r\n\r\n\t\t\t\tvar pars = { minFilter: THREE.NearestFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tshadow.map = new THREE.WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n\r\n\t\t\t\tshadowCamera.updateProjectionMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( shadow instanceof THREE.SpotLightShadow ) {\r\n\r\n\t\t\t\tshadow.update( light );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowMap = shadow.map;\r\n\t\t\tvar shadowMatrix = shadow.matrix;\r\n\r\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// render shadow map for each cube face (if omni-directional) or\r\n\t\t\t// run a single pass if not\r\n\r\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\r\n\r\n\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\r\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\r\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\r\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\r\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\r\n\t\t\t\t\t_state.viewport( vpDimensions );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t\t// compute shadow matrix\r\n\r\n\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t\t_renderList.length = 0;\r\n\r\n\t\t\t\tprojectObject( scene, camera, shadowCamera );\r\n\r\n\t\t\t\t// render shadow map\r\n\t\t\t\t// render regular objects\r\n\r\n\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Restore GL state.\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t};\r\n\r\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tvar result = null;\r\n\r\n\t\tvar materialVariants = _depthMaterials;\r\n\t\tvar customMaterial = object.customDepthMaterial;\r\n\r\n\t\tif ( isPointLight ) {\r\n\r\n\t\t\tmaterialVariants = _distanceMaterials;\r\n\t\t\tcustomMaterial = object.customDistanceMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! customMaterial ) {\r\n\r\n\t\t\tvar useMorphing = geometry.morphTargets !== undefined &&\r\n\t\t\t\t\tgeometry.morphTargets.length > 0 && material.morphTargets;\r\n\r\n\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\r\n\t\t\tvar variantIndex = 0;\r\n\r\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\r\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\r\n\r\n\t\t\tresult = materialVariants[ variantIndex ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\tresult = customMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tif ( _renderer.localClippingEnabled &&\r\n\t\t\t material.clipShadows === true &&\r\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\r\n\r\n\t\t\t// in this case we need a unique material instance reflecting the\r\n\t\t\t// appropriate state\r\n\r\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\r\n\r\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\r\n\r\n\t\t\tif ( materialsForVariant === undefined ) {\r\n\r\n\t\t\t\tmaterialsForVariant = {};\r\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\r\n\r\n\t\t\tif ( cachedMaterial === undefined ) {\r\n\r\n\t\t\t\tcachedMaterial = result.clone();\r\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tresult = cachedMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tresult.visible = material.visible;\r\n\t\tresult.wireframe = material.wireframe;\r\n\r\n\t\tvar side = material.side;\r\n\r\n\t\tif ( scope.renderSingleSided && side == THREE.DoubleSide ) {\r\n\r\n\t\t\tside = THREE.FrontSide;\r\n\r\n\t\t}\r\n\r\n\t\tif ( scope.renderReverseSided ) {\r\n\r\n\t\t\tif ( side === THREE.FrontSide ) side = THREE.BackSide;\r\n\t\t\telse if ( side === THREE.BackSide ) side = THREE.FrontSide;\r\n\r\n\t\t}\r\n\r\n\t\tresult.side = side;\r\n\r\n\t\tresult.clipShadows = material.clipShadows;\r\n\t\tresult.clippingPlanes = material.clippingPlanes;\r\n\r\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\tresult.linewidth = material.linewidth;\r\n\r\n\t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\r\n\r\n\t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera, shadowCamera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object.layers.test( camera.layers ) && ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) ) {\r\n\r\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera, shadowCamera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\r\n\tvar _this = this;\r\n\r\n\tthis.buffers = {\r\n\t\tcolor: new THREE.WebGLColorBuffer( gl, this ),\r\n\t\tdepth: new THREE.WebGLDepthBuffer( gl, this ),\r\n\t\tstencil: new THREE.WebGLStencilBuffer( gl, this )\r\n\t};\r\n\r\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\r\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\r\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\r\n\r\n\tvar capabilities = {};\r\n\r\n\tvar compressedTextureFormats = null;\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\tvar currentPremultipledAlpha = false;\r\n\r\n\tvar currentFlipSided = null;\r\n\tvar currentCullFace = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tvar currentScissorTest = null;\r\n\r\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n\tvar currentTextureSlot = null;\r\n\tvar currentBoundTextures = {};\r\n\r\n\tvar currentScissor = new THREE.Vector4();\r\n\tvar currentViewport = new THREE.Vector4();\r\n\r\n\tfunction createTexture( type, target, count ) {\r\n\r\n\t\tvar data = new Uint8Array( 3 );\r\n\t\tvar texture = gl.createTexture();\r\n\r\n\t\tgl.bindTexture( type, texture );\r\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\r\n\t\tfor ( var i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tgl.texImage2D( target + i, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, data );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tvar emptyTextures = {};\r\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\r\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\r\n\r\n\t//\r\n\r\n\tthis.init = function () {\r\n\r\n\t\tthis.clearColor( 0, 0, 0, 1 );\r\n\t\tthis.clearDepth( 1 );\r\n\t\tthis.clearStencil( 0 );\r\n\r\n\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\tthis.setDepthFunc( THREE.LessEqualDepth );\r\n\r\n\t\tthis.setFlipSided( false );\r\n\t\tthis.setCullFace( THREE.CullFaceBack );\r\n\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\tthis.enable( gl.BLEND );\r\n\t\tthis.setBlending( THREE.NormalBlending );\r\n\r\n\t};\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\r\n\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\r\n\t\t\tattributeDivisors[ attribute ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttributeAndDivisor = function ( attribute, meshPerAttribute, extension ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n\r\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\r\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tcapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tcapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getCompressedTextureFormats = function () {\r\n\r\n\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\r\n\r\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn compressedTextureFormats;\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\r\n\r\n\t\tif ( blending !== THREE.NoBlending ) {\r\n\r\n\t\t\tthis.enable( gl.BLEND );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.BLEND );\r\n\t\t\tcurrentBlending = blending; // no blending, that is\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\r\n\r\n\t\t\tif ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// TODO Deprecate\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tthis.buffers.color.setMask( colorWrite );\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tthis.buffers.depth.setTest( depthTest );\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tthis.buffers.depth.setMask( depthWrite );\r\n\r\n\t};\r\n\r\n\tthis.setDepthFunc = function ( depthFunc ) {\r\n\r\n\t\tthis.buffers.depth.setFunc( depthFunc );\r\n\r\n\t};\r\n\r\n\tthis.setStencilTest = function ( stencilTest ) {\r\n\r\n\t\tthis.buffers.stencil.setTest( stencilTest );\r\n\r\n\t};\r\n\r\n\tthis.setStencilWrite = function ( stencilWrite ) {\r\n\r\n\t\tthis.buffers.stencil.setMask( stencilWrite );\r\n\r\n\t};\r\n\r\n\tthis.setStencilFunc = function ( stencilFunc, stencilRef, stencilMask ) {\r\n\r\n\t\tthis.buffers.stencil.setFunc( stencilFunc, stencilRef, stencilMask );\r\n\r\n\t};\r\n\r\n\tthis.setStencilOp = function ( stencilFail, stencilZFail, stencilZPass ) {\r\n\r\n\t\tthis.buffers.stencil.setOp( stencilFail, stencilZFail, stencilZPass );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setCullFace = function ( cullFace ) {\r\n\r\n\t\tif ( cullFace !== THREE.CullFaceNone ) {\r\n\r\n\t\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\t\tif ( cullFace !== currentCullFace ) {\r\n\r\n\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t\tgl.cullFace( gl.BACK );\r\n\r\n\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t\tgl.cullFace( gl.FRONT );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t\tcurrentCullFace = cullFace;\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\r\n\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getScissorTest = function () {\r\n\r\n\t\treturn currentScissorTest;\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( scissorTest ) {\r\n\r\n\t\tcurrentScissorTest = scissorTest;\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// texture\r\n\r\n\tthis.activeTexture = function ( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\r\n\t\tif ( currentTextureSlot === null ) {\r\n\r\n\t\t\t_this.activeTexture();\r\n\r\n\t\t}\r\n\r\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.compressedTexImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.texImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// TODO Deprecate\r\n\r\n\tthis.clearColor = function ( r, g, b, a ) {\r\n\r\n\t\tthis.buffers.color.setClear( r, g, b, a );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function ( depth ) {\r\n\r\n\t\tthis.buffers.depth.setClear( depth );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function ( stencil ) {\r\n\r\n\t\tthis.buffers.stencil.setClear( stencil );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.scissor = function ( scissor ) {\r\n\r\n\t\tif ( currentScissor.equals( scissor ) === false ) {\r\n\r\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\r\n\t\t\tcurrentScissor.copy( scissor );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.viewport = function ( viewport ) {\r\n\r\n\t\tif ( currentViewport.equals( viewport ) === false ) {\r\n\r\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\r\n\t\t\tcurrentViewport.copy( viewport );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcapabilities = {};\r\n\r\n\t\tcompressedTextureFormats = null;\r\n\r\n\t\tcurrentTextureSlot = null;\r\n\t\tcurrentBoundTextures = {};\r\n\r\n\t\tcurrentBlending = null;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\t\tcurrentCullFace = null;\r\n\r\n\t\tthis.buffers.color.reset();\r\n\t\tthis.buffers.depth.reset();\r\n\t\tthis.buffers.stencil.reset();\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.WebGLColorBuffer = function ( gl, state ) {\r\n\r\n\tvar locked = false;\r\n\r\n\tvar color = new THREE.Vector4();\r\n\tvar currentColorMask = null;\r\n\tvar currentColorClear = new THREE.Vector4();\r\n\r\n\tthis.setMask = function ( colorMask ) {\r\n\r\n\t\tif ( currentColorMask !== colorMask && ! locked ) {\r\n\r\n\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\r\n\t\t\tcurrentColorMask = colorMask;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLocked = function ( lock ) {\r\n\r\n\t\tlocked = lock;\r\n\r\n\t};\r\n\r\n\tthis.setClear = function ( r, g, b, a ) {\r\n\r\n\t\tcolor.set( r, g, b, a );\r\n\r\n\t\tif ( currentColorClear.equals( color ) === false ) {\r\n\r\n\t\t\tgl.clearColor( r, g, b, a );\r\n\t\t\tcurrentColorClear.copy( color );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tlocked = false;\r\n\r\n\t\tcurrentColorMask = null;\r\n\t\tcurrentColorClear = new THREE.Vector4();\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.WebGLDepthBuffer = function( gl, state ) {\r\n\r\n\tvar locked = false;\r\n\r\n\tvar currentDepthMask = null;\r\n\tvar currentDepthFunc = null;\r\n\tvar currentDepthClear = null;\r\n\r\n\tthis.setTest = function ( depthTest ) {\r\n\r\n\t\tif ( depthTest ) {\r\n\r\n\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setMask = function( depthMask ){\r\n\r\n\t\tif ( currentDepthMask !== depthMask && ! locked ) {\r\n\r\n\t\t\tgl.depthMask( depthMask );\r\n\t\t\tcurrentDepthMask = depthMask;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFunc = function ( depthFunc ) {\r\n\r\n\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\tcase THREE.NeverDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.EqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLocked = function ( lock ) {\r\n\r\n\t\tlocked = lock;\r\n\r\n\t};\r\n\r\n\tthis.setClear = function ( depth ) {\r\n\r\n\t\tif ( currentDepthClear !== depth ) {\r\n\r\n\t\t\tgl.clearDepth( depth );\r\n\t\t\tcurrentDepthClear = depth;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tlocked = false;\r\n\r\n\t\tcurrentDepthMask = null;\r\n\t\tcurrentDepthFunc = null;\r\n\t\tcurrentDepthClear = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.WebGLStencilBuffer = function ( gl, state ) {\r\n\r\n\tvar locked = false;\r\n\r\n\tvar currentStencilMask = null;\r\n\tvar currentStencilFunc = null;\r\n\tvar currentStencilRef = null;\r\n\tvar currentStencilFuncMask = null;\r\n\tvar currentStencilFail  = null;\r\n\tvar currentStencilZFail = null;\r\n\tvar currentStencilZPass = null;\r\n\tvar currentStencilClear = null;\r\n\r\n\tthis.setTest = function ( stencilTest ) {\r\n\r\n\t\tif ( stencilTest ) {\r\n\r\n\t\t\tstate.enable( gl.STENCIL_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.disable( gl.STENCIL_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setMask = function ( stencilMask ) {\r\n\r\n\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\r\n\r\n\t\t\tgl.stencilMask( stencilMask );\r\n\t\t\tcurrentStencilMask = stencilMask;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFunc = function ( stencilFunc, stencilRef, stencilMask ) {\r\n\r\n\t\tif ( currentStencilFunc !== stencilFunc ||\r\n\t\t     currentStencilRef \t!== stencilRef \t||\r\n\t\t     currentStencilFuncMask !== stencilMask ) {\r\n\r\n\t\t\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\r\n\r\n\t\t\tcurrentStencilFunc = stencilFunc;\r\n\t\t\tcurrentStencilRef  = stencilRef;\r\n\t\t\tcurrentStencilFuncMask = stencilMask;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setOp\t = function ( stencilFail, stencilZFail, stencilZPass ) {\r\n\r\n\t\tif ( currentStencilFail\t !== stencilFail \t||\r\n\t\t     currentStencilZFail !== stencilZFail ||\r\n\t\t     currentStencilZPass !== stencilZPass ) {\r\n\r\n\t\t\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\r\n\r\n\t\t\tcurrentStencilFail  = stencilFail;\r\n\t\t\tcurrentStencilZFail = stencilZFail;\r\n\t\t\tcurrentStencilZPass = stencilZPass;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLocked = function ( lock ) {\r\n\r\n\t\tlocked = lock;\r\n\r\n\t};\r\n\r\n\tthis.setClear = function ( stencil ) {\r\n\r\n\t\tif ( currentStencilClear !== stencil ) {\r\n\r\n\t\t\tgl.clearStencil( stencil );\r\n\t\t\tcurrentStencilClear = stencil;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tlocked = false;\r\n\r\n\t\tcurrentStencilMask = null;\r\n\t\tcurrentStencilFunc = null;\r\n\t\tcurrentStencilRef = null;\r\n\t\tcurrentStencilFuncMask = null;\r\n\t\tcurrentStencilFail = null;\r\n\t\tcurrentStencilZFail = null;\r\n\t\tcurrentStencilZPass = null;\r\n\t\tcurrentStencilClear = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLUniforms.js\r\n\r\n/**\r\n *\r\n * Uniforms of a program.\r\n * Those form a tree structure with a special top-level container for the root,\r\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\r\n *\r\n *\r\n * Properties of inner nodes including the top-level container:\r\n *\r\n * .seq - array of nested uniforms\r\n * .map - nested uniforms by name\r\n *\r\n *\r\n * Methods of all nodes except the top-level container:\r\n *\r\n * .setValue( gl, value, [renderer] )\r\n *\r\n * \t\tuploads a uniform value(s)\r\n *  \tthe 'renderer' parameter is needed for sampler uniforms\r\n *\r\n *\r\n * Static methods of the top-level container (renderer factorizations):\r\n *\r\n * .upload( gl, seq, values, renderer )\r\n *\r\n * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n *\r\n * .seqWithValue( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with corresponding entry in values\r\n *\r\n * .splitDynamic( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with dynamic entry and removes them from 'seq'\r\n *\r\n *\r\n * Methods of the top-level container (renderer factorizations):\r\n *\r\n * .setValue( gl, name, value )\r\n *\r\n * \t\tsets uniform with  name 'name' to 'value'\r\n *\r\n * .set( gl, obj, prop )\r\n *\r\n * \t\tsets uniform from object and property with same name than uniform\r\n *\r\n * .setOptional( gl, obj, prop )\r\n *\r\n * \t\tlike .set for an optional property of the object\r\n *\r\n *\r\n * @author tschw\r\n *\r\n */\r\n\r\nTHREE.WebGLUniforms = ( function() { // scope\r\n\r\n\t// --- Base for inner nodes (including the root) ---\r\n\r\n\tvar UniformContainer = function() {\r\n\r\n\t\t\tthis.seq = [];\r\n\t\t\tthis.map = {};\r\n\r\n\t\t},\r\n\r\n\t// --- Utilities ---\r\n\r\n\t// Array Caches (provide typed arrays for temporary by size)\r\n\r\n\t\tarrayCacheF32 = [],\r\n\t\tarrayCacheI32 = [],\r\n\r\n\t\tuncacheTemporaryArrays = function() {\r\n\r\n\t\t\tarrayCacheF32.length = 0;\r\n\t\t\tarrayCacheI32.length = 0;\r\n\r\n\t\t},\r\n\r\n\t// Flattening for arrays of vectors and matrices\r\n\r\n\t\tflatten = function( array, nBlocks, blockSize ) {\r\n\r\n\t\t\tvar firstElem = array[ 0 ];\r\n\r\n\t\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\r\n\t\t\t// unoptimized: ! isNaN( firstElem )\r\n\t\t\t// see http://jacksondunstan.com/articles/983\r\n\r\n\t\t\tvar n = nBlocks * blockSize,\r\n\t\t\t\tr = arrayCacheF32[ n ];\r\n\r\n\t\t\tif ( r === undefined ) {\r\n\r\n\t\t\t\tr = new Float32Array( n );\r\n\t\t\t\tarrayCacheF32[ n ] = r;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( nBlocks !== 0 ) {\r\n\r\n\t\t\t\tfirstElem.toArray( r, 0 );\r\n\r\n\t\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\r\n\r\n\t\t\t\t\toffset += blockSize;\r\n\t\t\t\t\tarray[ i ].toArray( r, offset );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn r;\r\n\r\n\t\t},\r\n\r\n\t// Texture unit allocation\r\n\r\n\t\tallocTexUnits = function( renderer, n ) {\r\n\r\n\t\t\tvar r = arrayCacheI32[ n ];\r\n\r\n\t\t\tif ( r === undefined ) {\r\n\r\n\t\t\t\tr = new Int32Array( n );\r\n\t\t\t\tarrayCacheI32[ n ] = r;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i !== n; ++ i )\r\n\t\t\t\tr[ i ] = renderer.allocTextureUnit();\r\n\r\n\t\t\treturn r;\r\n\r\n\t\t},\r\n\r\n\t// --- Setters ---\r\n\r\n\t// Note: Defining these methods externally, because they come in a bunch\r\n\t// and this way their names minify.\r\n\r\n\t\t// Single scalar\r\n\r\n\t\tsetValue1f = function( gl, v ) { gl.uniform1f( this.addr, v ); },\r\n\t\tsetValue1i = function( gl, v ) { gl.uniform1i( this.addr, v ); },\r\n\r\n\t\t// Single float vector (from flat array or THREE.VectorN)\r\n\r\n\t\tsetValue2fv = function( gl, v ) {\r\n\r\n\t\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\r\n\t\t\telse gl.uniform2f( this.addr, v.x, v.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetValue3fv = function( gl, v ) {\r\n\r\n\t\t\tif ( v.x !== undefined )\r\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\r\n\t\t\telse if ( v.r !== undefined )\r\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\r\n\t\t\telse\r\n\t\t\t\tgl.uniform3fv( this.addr, v );\r\n\r\n\t\t},\r\n\r\n\t\tsetValue4fv = function( gl, v ) {\r\n\r\n\t\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\r\n\t\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n\t\t},\r\n\r\n\t\t// Single matrix (from flat array or MatrixN)\r\n\r\n\t\tsetValue2fm = function( gl, v ) {\r\n\r\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\r\n\r\n\t\t},\r\n\r\n\t\tsetValue3fm = function( gl, v ) {\r\n\r\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\r\n\r\n\t\t},\r\n\r\n\t\tsetValue4fm = function( gl, v ) {\r\n\r\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\r\n\r\n\t\t},\r\n\r\n\t\t// Single texture (2D / Cube)\r\n\r\n\t\tsetValueT1 = function( gl, v, renderer ) {\r\n\r\n\t\t\tvar unit = renderer.allocTextureUnit();\r\n\t\t\tgl.uniform1i( this.addr, unit );\r\n\t\t\tif ( v ) renderer.setTexture2D( v, unit );\r\n\r\n\t\t},\r\n\r\n\t\tsetValueT6 = function( gl, v, renderer ) {\r\n\r\n\t\t\tvar unit = renderer.allocTextureUnit();\r\n\t\t\tgl.uniform1i( this.addr, unit );\r\n\t\t\tif ( v ) renderer.setTextureCube( v, unit );\r\n\r\n\t\t},\r\n\r\n\t\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\r\n\r\n\t\tsetValue2iv = function( gl, v ) { gl.uniform2iv( this.addr, v ); },\r\n\t\tsetValue3iv = function( gl, v ) { gl.uniform3iv( this.addr, v ); },\r\n\t\tsetValue4iv = function( gl, v ) { gl.uniform4iv( this.addr, v ); },\r\n\r\n\t\t// Helper to pick the right setter for the singular case\r\n\r\n\t\tgetSingularSetter = function( type ) {\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 0x1406: return setValue1f; // FLOAT\r\n\t\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\r\n\t\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\r\n\t\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\r\n\r\n\t\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\r\n\t\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\r\n\t\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\r\n\r\n\t\t\t\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\r\n\t\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\r\n\r\n\t\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\r\n\t\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\r\n\t\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\r\n\t\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// Array of scalars\r\n\r\n\t\tsetValue1fv = function( gl, v ) { gl.uniform1fv( this.addr, v ); },\r\n\t\tsetValue1iv = function( gl, v ) { gl.uniform1iv( this.addr, v ); },\r\n\r\n\t\t// Array of vectors (flat or from THREE classes)\r\n\r\n\t\tsetValueV2a = function( gl, v ) {\r\n\r\n\t\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\r\n\r\n\t\t},\r\n\r\n\t\tsetValueV3a = function( gl, v ) {\r\n\r\n\t\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\r\n\r\n\t\t},\r\n\r\n\t\tsetValueV4a = function( gl, v ) {\r\n\r\n\t\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\r\n\r\n\t\t},\r\n\r\n\t\t// Array of matrices (flat or from THREE clases)\r\n\r\n\t\tsetValueM2a = function( gl, v ) {\r\n\r\n\t\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\r\n\r\n\t\t},\r\n\r\n\t\tsetValueM3a = function( gl, v ) {\r\n\r\n\t\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\r\n\r\n\t\t},\r\n\r\n\t\tsetValueM4a = function( gl, v ) {\r\n\r\n\t\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\r\n\r\n\t\t},\r\n\r\n\t\t// Array of textures (2D / Cube)\r\n\r\n\t\tsetValueT1a = function( gl, v, renderer ) {\r\n\r\n\t\t\tvar n = v.length,\r\n\t\t\t\tunits = allocTexUnits( renderer, n );\r\n\r\n\t\t\tgl.uniform1iv( this.addr, units );\r\n\r\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar tex = v[ i ];\r\n\t\t\t\tif ( tex ) renderer.setTexture2D( tex, units[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tsetValueT6a = function( gl, v, renderer ) {\r\n\r\n\t\t\tvar n = v.length,\r\n\t\t\t\tunits = allocTexUnits( renderer, n );\r\n\r\n\t\t\tgl.uniform1iv( this.addr, units );\r\n\r\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar tex = v[ i ];\r\n\t\t\t\tif ( tex ) renderer.setTextureCube( tex, units[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\r\n\t\t// Helper to pick the right setter for a pure (bottom-level) array\r\n\r\n\t\tgetPureArraySetter = function( type ) {\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 0x1406: return setValue1fv; // FLOAT\r\n\t\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\r\n\t\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\r\n\t\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\r\n\r\n\t\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\r\n\t\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\r\n\t\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\r\n\r\n\t\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\r\n\t\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\r\n\r\n\t\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\r\n\t\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\r\n\t\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\r\n\t\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t// --- Uniform Classes ---\r\n\r\n\t\tSingleUniform = function SingleUniform( id, activeInfo, addr ) {\r\n\r\n\t\t\tthis.id = id;\r\n\t\t\tthis.addr = addr;\r\n\t\t\tthis.setValue = getSingularSetter( activeInfo.type );\r\n\r\n\t\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t\t},\r\n\r\n\t\tPureArrayUniform = function( id, activeInfo, addr ) {\r\n\r\n\t\t\tthis.id = id;\r\n\t\t\tthis.addr = addr;\r\n\t\t\tthis.size = activeInfo.size;\r\n\t\t\tthis.setValue = getPureArraySetter( activeInfo.type );\r\n\r\n\t\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t\t},\r\n\r\n\t\tStructuredUniform = function( id ) {\r\n\r\n\t\t\tthis.id = id;\r\n\r\n\t\t\tUniformContainer.call( this ); // mix-in\r\n\r\n\t\t};\r\n\r\n\tStructuredUniform.prototype.setValue = function( gl, value ) {\r\n\r\n\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\r\n\t\t// are not allowed in structured uniforms.\r\n\r\n\t\tvar seq = this.seq;\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ];\r\n\t\t\tu.setValue( gl, value[ u.id ] );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// --- Top-level ---\r\n\r\n\t// Parser - builds up the property tree from the path strings\r\n\r\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g,\r\n\t\t// extracts\r\n\t\t// \t- the identifier (member name or array index)\r\n\t\t//  - followed by an optional right bracket (found when array index)\r\n\t\t//  - followed by an optional left bracket or dot (type of subscript)\r\n\t\t//\r\n\t\t// Note: These portions can be read in a non-overlapping fashion and\r\n\t\t// allow straightforward parsing of the hierarchy that WebGL encodes\r\n\t\t// in the uniform names.\r\n\r\n\t\taddUniform = function( container, uniformObject ) {\r\n\r\n\t\t\tcontainer.seq.push( uniformObject );\r\n\t\t\tcontainer.map[ uniformObject.id ] = uniformObject;\r\n\r\n\t\t},\r\n\r\n\t\tparseUniform = function( activeInfo, addr, container ) {\r\n\r\n\t\t\tvar path = activeInfo.name,\r\n\t\t\t\tpathLength = path.length;\r\n\r\n\t\t\t// reset RegExp object, because of the early exit of a previous run\r\n\t\t\tRePathPart.lastIndex = 0;\r\n\r\n\t\t\tfor (; ;) {\r\n\r\n\t\t\t\tvar match = RePathPart.exec( path ),\r\n\t\t\t\t\tmatchEnd = RePathPart.lastIndex,\r\n\r\n\t\t\t\t\tid = match[ 1 ],\r\n\t\t\t\t\tidIsIndex = match[ 2 ] === ']',\r\n\t\t\t\t\tsubscript = match[ 3 ];\r\n\r\n\t\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\r\n\r\n\t\t\t\tif ( subscript === undefined ||\r\n\t\t\t\t\t\tsubscript === '[' && matchEnd + 2 === pathLength ) {\r\n\t\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n\r\n\t\t\t\t\taddUniform( container, subscript === undefined ?\r\n\t\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\r\n\t\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// step into inner node / create it in case it doesn't exist\r\n\r\n\t\t\t\t\tvar map = container.map,\r\n\t\t\t\t\t\tnext = map[ id ];\r\n\r\n\t\t\t\t\tif ( next === undefined ) {\r\n\r\n\t\t\t\t\t\tnext = new StructuredUniform( id );\r\n\t\t\t\t\t\taddUniform( container, next );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontainer = next;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t// Root Container\r\n\r\n\t\tWebGLUniforms = function WebGLUniforms( gl, program, renderer ) {\r\n\r\n\t\t\tUniformContainer.call( this );\r\n\r\n\t\t\tthis.renderer = renderer;\r\n\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar info = gl.getActiveUniform( program, i ),\r\n\t\t\t\t\tpath = info.name,\r\n\t\t\t\t\taddr = gl.getUniformLocation( program, path );\r\n\r\n\t\t\t\tparseUniform( info, addr, this );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\r\n\tWebGLUniforms.prototype.setValue = function( gl, name, value ) {\r\n\r\n\t\tvar u = this.map[ name ];\r\n\r\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.prototype.set = function( gl, object, name ) {\r\n\r\n\t\tvar u = this.map[ name ];\r\n\r\n\t\tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.prototype.setOptional = function( gl, object, name ) {\r\n\r\n\t\tvar v = object[ name ];\r\n\r\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\r\n\r\n\t};\r\n\r\n\r\n\t// Static interface\r\n\r\n\tWebGLUniforms.upload = function( gl, seq, values, renderer ) {\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ],\r\n\t\t\t\tv = values[ u.id ];\r\n\r\n\t\t\tif ( v.needsUpdate !== false ) {\r\n\t\t\t\t// note: always updating when .needsUpdate is undefined\r\n\r\n\t\t\t\tu.setValue( gl, v.value, renderer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.seqWithValue = function( seq, values ) {\r\n\r\n\t\tvar r = [];\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ];\r\n\t\t\tif ( u.id in values ) r.push( u );\r\n\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.splitDynamic = function( seq, values ) {\r\n\r\n\t\tvar r = null,\r\n\t\t\tn = seq.length,\r\n\t\t\tw = 0;\r\n\r\n\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ],\r\n\t\t\t\tv = values[ u.id ];\r\n\r\n\t\t\tif ( v && v.dynamic === true ) {\r\n\r\n\t\t\t\tif ( r === null ) r = [];\r\n\t\t\t\tr.push( u );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// in-place compact 'seq', removing the matches\r\n\t\t\t\tif ( w < i ) seq[ w ] = u;\r\n\t\t\t\t++ w;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( w < n ) seq.length = w;\r\n\r\n\t\treturn r;\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.evalDynamic = function( seq, values, object, camera ) {\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar v = values[ seq[ i ].id ],\r\n\t\t\t\tf = v.onUpdateCallback;\r\n\r\n\t\t\tif ( f !== undefined ) f.call( v, object, camera );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn WebGLUniforms;\r\n\r\n} )();\r\n\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar shader, program, attributes, uniforms;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tfunction init() {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t 1, - 1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t- 1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tshader = {\r\n\r\n\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\"if ( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\"}\"\r\n\r\n\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\"if ( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"}\"\r\n\r\n\t\t\t].join( \"\\n\" )\r\n\r\n\t\t};\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewport ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewport.w / viewport.z,\r\n\t\t\thalfViewportWidth = viewport.z * 0.5,\r\n\t\t\thalfViewportHeight = viewport.w * 0.5;\r\n\r\n\t\tvar size = 16 / viewport.w,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tvar validArea = new THREE.Box2();\r\n\r\n\t\tvalidArea.min.set( 0, 0 );\r\n\t\tvalidArea.max.set( viewport.z - 16, viewport.w - 16 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.vertex );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/uniforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.setDepthWrite( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewport.w;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition );\r\n\r\n\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\r\n\r\n\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\r\n\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tstate.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\tstate.setDepthWrite( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tfunction init() {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.position );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map ) {\r\n\r\n\t\t\t\trenderer.setTexture2D( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture2D( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\t\t\r\n\t\tif ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/Three.Legacy.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nObject.assign( THREE, {\r\n\tFace4: function ( a, b, c, d, normal, color, materialIndex ) {\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\t},\r\n\tLineStrip: 0,\r\n\tLinePieces: 1,\r\n\tMeshFaceMaterial: THREE.MultiMaterial,\r\n\tPointCloud: function ( geometry, material ) {\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t},\r\n\tParticle: THREE.Sprite,\r\n\tParticleSystem: function ( geometry, material ) {\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t},\r\n\tPointCloudMaterial: function ( parameters ) {\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t},\r\n\tParticleBasicMaterial: function ( parameters ) {\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t},\r\n\tParticleSystemMaterial: function ( parameters ) {\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t},\r\n\tVertex: function ( x, y, z ) {\r\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\r\n\t\treturn new THREE.Vector3( x, y, z );\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.assign( THREE.Box2.prototype, {\r\n\tempty: function () {\r\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\r\n\t\treturn this.isEmpty();\r\n\t},\r\n\tisIntersectionBox: function ( box ) {\r\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\treturn this.intersectsBox( box );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Box3.prototype, {\r\n\tempty: function () {\r\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\r\n\t\treturn this.isEmpty();\r\n\t},\r\n\tisIntersectionBox: function ( box ) {\r\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\treturn this.intersectsBox( box );\r\n\t},\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\treturn this.intersectsSphere( sphere );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Matrix3.prototype, {\r\n\tmultiplyVector3: function ( vector ) {\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\t},\r\n\tmultiplyVector3Array: function ( a ) {\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Matrix4.prototype, {\r\n\textractPosition: function ( m ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\t},\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\t},\r\n\tmultiplyVector3: function ( vector ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\t},\r\n\tmultiplyVector4: function ( vector ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\t},\r\n\tmultiplyVector3Array: function ( a ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\t},\r\n\trotateAxis: function ( v ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\tv.transformDirection( this );\r\n\t},\r\n\tcrossVector: function ( vector ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\t},\r\n\ttranslate: function ( v ) {\r\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\t},\r\n\trotateX: function ( angle ) {\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\t},\r\n\trotateY: function ( angle ) {\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\t},\r\n\trotateZ: function ( angle ) {\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\t},\r\n\trotateByAxis: function ( axis, angle ) {\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Plane.prototype, {\r\n\tisIntersectionLine: function ( line ) {\r\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\r\n\t\treturn this.intersectsLine( line );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Quaternion.prototype, {\r\n\tmultiplyVector3: function ( vector ) {\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Ray.prototype, {\r\n\tisIntersectionBox: function ( box ) {\r\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\treturn this.intersectsBox( box );\r\n\t},\r\n\tisIntersectionPlane: function ( plane ) {\r\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\r\n\t\treturn this.intersectsPlane( plane );\r\n\t},\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\treturn this.intersectsSphere( sphere );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Vector3.prototype, {\r\n\tsetEulerFromRotationMatrix: function () {\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\t},\r\n\tsetEulerFromQuaternion: function () {\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\t},\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\t},\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\treturn this.setFromMatrixScale( m );\r\n\t},\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\treturn this.setFromMatrixColumn( matrix, index );\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.assign( THREE.Object3D.prototype, {\r\n\tgetChildByName: function ( name ) {\r\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\t},\r\n\trenderDepth: function ( value ) {\r\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\t},\r\n\ttranslate: function ( distance, axis ) {\r\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.Object3D.prototype, {\r\n\teulerOrder: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\treturn this.rotation.order;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\tthis.rotation.order = value;\r\n\t\t}\r\n\t},\r\n\tuseQuaternion: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.LOD.prototype, {\r\n\tobjects: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\treturn this.levels;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\r\n\r\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\r\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\r\n\r\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\r\n\tthis.setFocalLength( focalLength );\r\n\r\n};\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.Light.prototype, {\r\n\tonlyShadow: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\r\n\t\t}\r\n\t},\r\n\tshadowCameraFov: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\r\n\t\t\tthis.shadow.camera.fov = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraLeft: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\r\n\t\t\tthis.shadow.camera.left = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraRight: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\r\n\t\t\tthis.shadow.camera.right = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraTop: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\r\n\t\t\tthis.shadow.camera.top = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraBottom: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\r\n\t\t\tthis.shadow.camera.bottom = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraNear: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\r\n\t\t\tthis.shadow.camera.near = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraFar: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\r\n\t\t\tthis.shadow.camera.far = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraVisible: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\r\n\t\t}\r\n\t},\r\n\tshadowBias: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\r\n\t\t\tthis.shadow.bias = value;\r\n\t\t}\r\n\t},\r\n\tshadowDarkness: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\r\n\t\t}\r\n\t},\r\n\tshadowMapWidth: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\r\n\t\t\tthis.shadow.mapSize.width = value;\r\n\t\t}\r\n\t},\r\n\tshadowMapHeight: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\r\n\t\t\tthis.shadow.mapSize.height = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.BufferAttribute.prototype, {\r\n\tlength: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.BufferGeometry.prototype, {\r\n\taddIndex: function ( index ) {\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\tthis.setIndex( index );\r\n\t},\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\t\tif ( indexOffset !== undefined ) {\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\t\t}\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\tthis.addGroup( start, count );\r\n\t},\r\n\tclearDrawCalls: function () {\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\tthis.clearGroups();\r\n\t},\r\n\tcomputeTangents: function () {\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\t},\r\n\tcomputeOffsets: function () {\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.BufferGeometry.prototype, {\r\n\tdrawcalls: {\r\n\t\tget: function () {\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\t}\r\n\t},\r\n\toffsets: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.Material.prototype, {\r\n\twrapAround: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\t}\r\n\t},\r\n\twrapRGB: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\t\treturn new THREE.Color();\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.MeshPhongMaterial.prototype, {\r\n\tmetal: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.ShaderMaterial.prototype, {\r\n\tderivatives: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\treturn this.extensions.derivatives;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\tthis.extensions.derivatives = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nTHREE.EventDispatcher.prototype = Object.assign( Object.create( {\r\n\r\n\t// Note: Extra base ensures these properties are not 'assign'ed.\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( target ) {\r\n\r\n\t\tconsole.warn( \"THREE.EventDispatcher: .apply is deprecated, \" +\r\n\t\t\t\t\"just inherit or Object.assign the prototype to mix-in.\" );\r\n\r\n\t\tObject.assign( target, this );\r\n\r\n\t}\r\n\r\n} ), THREE.EventDispatcher.prototype );\r\n\r\n//\r\n\r\nObject.assign( THREE.WebGLRenderer.prototype, {\r\n\tsupportsFloatTextures: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\treturn this.extensions.get( 'OES_texture_float' );\r\n\t},\r\n\tsupportsHalfFloatTextures: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\r\n\t},\r\n\tsupportsStandardDerivatives: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\r\n\t},\r\n\tsupportsCompressedTextureS3TC: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t},\r\n\tsupportsCompressedTexturePVRTC: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t},\r\n\tsupportsBlendMinMax: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\r\n\t},\r\n\tsupportsVertexTextures: function () {\r\n\t\treturn this.capabilities.vertexTextures;\r\n\t},\r\n\tsupportsInstancedArrays: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\r\n\t},\r\n\tenableScissorTest: function ( boolean ) {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\r\n\t\tthis.setScissorTest( boolean );\r\n\t},\r\n\tinitMaterial: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\t},\r\n\taddPrePlugin: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\t},\r\n\taddPostPlugin: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\t},\r\n\tupdateShadowMap: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.WebGLRenderer.prototype, {\r\n\tshadowMapEnabled: {\r\n\t\tget: function () {\r\n\t\t\treturn this.shadowMap.enabled;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\tthis.shadowMap.enabled = value;\r\n\t\t}\r\n\t},\r\n\tshadowMapType: {\r\n\t\tget: function () {\r\n\t\t\treturn this.shadowMap.type;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\tthis.shadowMap.type = value;\r\n\t\t}\r\n\t},\r\n\tshadowMapCullFace: {\r\n\t\tget: function () {\r\n\t\t\treturn this.shadowMap.cullFace;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\tthis.shadowMap.cullFace = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.WebGLShadowMap.prototype, {\r\n\tcullFace: {\r\n\t\tget: function () {\r\n\t\t\treturn this.renderReverseSided ? THREE.CullFaceFront : THREE.CullFaceBack;\r\n\t\t},\r\n\t\tset: function ( cullFace ) {\r\n\t\t\tvar value = ( cullFace !== THREE.CullFaceBack );\r\n\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\r\n\t\t\tthis.renderReverseSided = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.WebGLRenderTarget.prototype, {\r\n\twrapS: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\treturn this.texture.wrapS;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\tthis.texture.wrapS = value;\r\n\t\t}\r\n\t},\r\n\twrapT: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\treturn this.texture.wrapT;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\tthis.texture.wrapT = value;\r\n\t\t}\r\n\t},\r\n\tmagFilter: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\treturn this.texture.magFilter;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\tthis.texture.magFilter = value;\r\n\t\t}\r\n\t},\r\n\tminFilter: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\treturn this.texture.minFilter;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\tthis.texture.minFilter = value;\r\n\t\t}\r\n\t},\r\n\tanisotropy: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\treturn this.texture.anisotropy;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\tthis.texture.anisotropy = value;\r\n\t\t}\r\n\t},\r\n\toffset: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\treturn this.texture.offset;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\tthis.texture.offset = value;\r\n\t\t}\r\n\t},\r\n\trepeat: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\treturn this.texture.repeat;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\tthis.texture.repeat = value;\r\n\t\t}\r\n\t},\r\n\tformat: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\treturn this.texture.format;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\tthis.texture.format = value;\r\n\t\t}\r\n\t},\r\n\ttype: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\treturn this.texture.type;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\tthis.texture.type = value;\r\n\t\t}\r\n\t},\r\n\tgenerateMipmaps: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\treturn this.texture.generateMipmaps;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\tthis.texture.generateMipmaps = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.assign( THREE.Audio.prototype, {\r\n\tload: function ( file ) {\r\n\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\r\n\t\tvar scope = this;\r\n\t\tvar audioLoader = new THREE.AudioLoader();\r\n\t\taudioLoader.load( file, function ( buffer ) {\r\n\t\t\tscope.setBuffer( buffer );\r\n\t\t} );\r\n\t\treturn this;\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.AudioAnalyser.prototype, {\r\n\tgetData: function ( file ) {\r\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\r\n\t\treturn this.getFrequencyData();\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\r\n\r\n\t\tvar loader = new THREE.TextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\r\n\r\n\t\tvar loader = new THREE.CubeTextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/extras/CurveUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.CurveUtils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Group();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ShapeUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.ShapeUtils = {\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tarea: function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t},\r\n\r\n\ttriangulate: ( function () {\r\n\r\n\t\t/**\r\n\t\t * This code is a quick port of code written in C++ which was submitted to\r\n\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t\t * See original code and more information here:\r\n\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t\t *\r\n\t\t * ported to actionscript by Zevan Rosser\r\n\t\t * www.actionsnippet.com\r\n\t\t *\r\n\t\t * ported to javascript by Joshua Koo\r\n\t\t * http://www.lab4games.net/zz85/blog\r\n\t\t *\r\n\t\t */\r\n\r\n\t\tfunction snip( contour, u, v, w, n, verts ) {\r\n\r\n\t\t\tvar p;\r\n\t\t\tvar ax, ay, bx, by;\r\n\t\t\tvar cx, cy, px, py;\r\n\r\n\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\t\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// takes in an contour array and returns\r\n\r\n\t\treturn function ( contour, indices ) {\r\n\r\n\t\t\tvar n = contour.length;\r\n\r\n\t\t\tif ( n < 3 ) return null;\r\n\r\n\t\t\tvar result = [],\r\n\t\t\t\tverts = [],\r\n\t\t\t\tvertIndices = [];\r\n\r\n\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\t\tvar u, v, w;\r\n\r\n\t\t\tif ( THREE.ShapeUtils.area( contour ) > 0.0 ) {\r\n\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar nv = n;\r\n\r\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t//return null;\r\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\r\n\r\n\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\treturn result;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnv --;\r\n\r\n\t\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( indices ) return vertIndices;\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} )(),\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.ShapeUtils.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2: ( function () {\r\n\r\n\t\tfunction b2p0( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b2p1( t, p ) {\r\n\r\n\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b2p2( t, p ) {\r\n\r\n\t\t\treturn t * t * p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( t, p0, p1, p2 ) {\r\n\r\n\t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3: ( function () {\r\n\r\n\t\tfunction b3p0( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * k * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b3p1( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * k * t * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b3p2( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * t * t * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b3p3( t, p ) {\r\n\r\n\t\t\treturn t * t * t * p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\nTHREE.Curve.prototype = {\r\n\r\n\tconstructor: THREE.Curve,\r\n\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\r\n\tgetPoint: function ( t ) {\r\n\r\n\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\treturn null;\r\n\r\n\t},\r\n\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\r\n\tgetPointAt: function ( u ) {\r\n\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t );\r\n\r\n\t},\r\n\r\n\t// Get sequence of points using getPoint( t )\r\n\r\n\tgetPoints: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\r\n\t\tvar d, pts = [];\r\n\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn pts;\r\n\r\n\t},\r\n\r\n\t// Get sequence of points using getPointAt( u )\r\n\r\n\tgetSpacedPoints: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\r\n\t\tvar d, pts = [];\r\n\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn pts;\r\n\r\n\t},\r\n\r\n\t// Get total curve arc length\r\n\r\n\tgetLength: function () {\r\n\r\n\t\tvar lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\r\n\t},\r\n\r\n\t// Get list of cumulative segment lengths\r\n\r\n\tgetLengths: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n\t\tif ( this.cacheArcLengths\r\n\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t&& ! this.needsUpdate ) {\r\n\r\n\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\treturn this.cacheArcLengths;\r\n\r\n\t\t}\r\n\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t\tvar cache = [];\r\n\t\tvar current, last = this.getPoint( 0 );\r\n\t\tvar p, sum = 0;\r\n\r\n\t\tcache.push( 0 );\r\n\r\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheArcLengths = cache;\r\n\r\n\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n\t},\r\n\r\n\tupdateArcLengths: function() {\r\n\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\r\n\t},\r\n\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n\tgetUtoTmapping: function ( u, distance ) {\r\n\r\n\t\tvar arcLengths = this.getLengths();\r\n\r\n\t\tvar i = 0, il = arcLengths.length;\r\n\r\n\t\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\t\tif ( distance ) {\r\n\r\n\t\t\ttargetArcLength = distance;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t\t}\r\n\r\n\t\t//var time = Date.now();\r\n\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\t\tvar low = 0, high = il - 1, comparison;\r\n\r\n\t\twhile ( low <= high ) {\r\n\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\t\tlow = i + 1;\r\n\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\t\thigh = i - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\t// DONE\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ti = high;\r\n\r\n\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\t\tvar t = i / ( il - 1 );\r\n\t\t\treturn t;\r\n\r\n\t\t}\r\n\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\r\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t\t// add that fractional amount to t\r\n\r\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\t\treturn t;\r\n\r\n\t},\r\n\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\r\n\tgetTangent: function( t ) {\r\n\r\n\t\tvar delta = 0.0001;\r\n\t\tvar t1 = t - delta;\r\n\t\tvar t2 = t + delta;\r\n\r\n\t\t// Capping in case of danger\r\n\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\t\tvar pt1 = this.getPoint( t1 );\r\n\t\tvar pt2 = this.getPoint( t2 );\r\n\r\n\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\treturn vec.normalize();\r\n\r\n\t},\r\n\r\n\tgetTangentAt: function ( u ) {\r\n\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\r\n\tthis.autoClose = false; // Automatically closes the path\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.assign( Object.create( THREE.Curve.prototype ), {\r\n\r\n\tconstructor: THREE.CurvePath,\r\n\r\n\tadd: function ( curve ) {\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t},\r\n\r\n\tclosePath: function () {\r\n\r\n\t\t// TODO Test\r\n\t\t// and verify for vector3 (needs to implement equals)\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\r\n\tgetPoint: function ( t ) {\r\n\r\n\t\tvar d = t * this.getLength();\r\n\t\tvar curveLengths = this.getCurveLengths();\r\n\t\tvar i = 0;\r\n\r\n\t\t// To think about boundaries points.\r\n\r\n\t\twhile ( i < curveLengths.length ) {\r\n\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\t\tvar diff = curveLengths[ i ] - d;\r\n\t\t\t\tvar curve = this.curves[ i ];\r\n\r\n\t\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ti ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n\t},\r\n\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\r\n\tgetLength: function () {\r\n\r\n\t\tvar lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\r\n\t},\r\n\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\n\tgetCurveLengths: function () {\r\n\r\n\t\t// We use cache values if curves and cache array are same length\r\n\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\t\treturn this.cacheLengths;\r\n\r\n\t\t}\r\n\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\r\n\t\tvar lengths = [], sums = 0;\r\n\r\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheLengths = lengths;\r\n\r\n\t\treturn lengths;\r\n\r\n\t},\r\n\r\n\t/**************************************************************\r\n\t *\tCreate Geometries Helpers\r\n\t **************************************************************/\r\n\r\n\t/// Generate geometry from path points (for Line or Points objects)\r\n\r\n\tcreatePointsGeometry: function ( divisions ) {\r\n\r\n\t\tvar pts = this.getPoints( divisions );\r\n\t\treturn this.createGeometry( pts );\r\n\r\n\t},\r\n\r\n\t// Generate geometry from equidistant sampling along the path\r\n\r\n\tcreateSpacedPointsGeometry: function ( divisions ) {\r\n\r\n\t\tvar pts = this.getSpacedPoints( divisions );\r\n\t\treturn this.createGeometry( pts );\r\n\r\n\t},\r\n\r\n\tcreateGeometry: function ( points ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry();\r\n\r\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = points[ i ];\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3( point.x, point.y, point.z || 0 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/extras/core/Font.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Font = function ( data ) {\r\n\r\n\tthis.data = data;\r\n\r\n};\r\n\r\nObject.assign( THREE.Font.prototype, {\r\n\r\n\tgenerateShapes: function ( text, size, divisions ) {\r\n\r\n\t\tfunction createPaths( text ) {\r\n\r\n\t\t\tvar chars = String( text ).split( '' );\r\n\t\t\tvar scale = size / data.resolution;\r\n\t\t\tvar offset = 0;\r\n\r\n\t\t\tvar paths = [];\r\n\r\n\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\r\n\r\n\t\t\t\tvar ret = createPath( chars[ i ], scale, offset );\r\n\t\t\t\toffset += ret.offset;\r\n\r\n\t\t\t\tpaths.push( ret.path );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn paths;\r\n\r\n\t\t}\r\n\r\n\t\tfunction createPath( c, scale, offset ) {\r\n\r\n\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\r\n\r\n\t\t\tif ( ! glyph ) return;\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar pts = [], b2 = THREE.ShapeUtils.b2, b3 = THREE.ShapeUtils.b3;\r\n\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\r\n\r\n\t\t\tif ( glyph.o ) {\r\n\r\n\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\r\n\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\r\n\r\n\t\t\t\t\tvar action = outline[ i ++ ];\r\n\r\n\t\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\t\t\tcase 'm': // moveTo\r\n\r\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\r\n\r\n\t\t\t\t\t\t\tpath.moveTo( x, y );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'l': // lineTo\r\n\r\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\r\n\r\n\t\t\t\t\t\t\tpath.lineTo( x, y );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'q': // quadraticCurveTo\r\n\r\n\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\r\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\r\n\r\n\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\t\tb2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\t\t\tb2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'b': // bezierCurveTo\r\n\r\n\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\r\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\r\n\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale;\r\n\r\n\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\t\tb3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\t\t\tb3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn { offset: glyph.ha * scale, path: path };\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( size === undefined ) size = 100;\r\n\t\tif ( divisions === undefined ) divisions = 4;\r\n\r\n\t\tvar data = this.data;\r\n\r\n\t\tvar paths = createPaths( text );\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t\t}\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call( this );\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.assign( Object.create( THREE.CurvePath.prototype ), {\r\n\r\n\tconstructor: THREE.Path,\r\n\r\n\t// TODO Clean up PATH API\r\n\r\n\t// Create path using straight lines to connect all points\r\n\t// - vectors: array of Vector2\r\n\r\n\tfromPoints: function ( vectors ) {\r\n\r\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmoveTo: function ( x, y ) {\r\n\r\n\t\tthis.actions.push( { action: 'moveTo', args: [ x, y ] } );\r\n\r\n\t},\r\n\r\n\tlineTo: function ( x, y ) {\r\n\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\t\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.actions.push( { action: 'lineTo', args: [ x, y ] } );\r\n\r\n\t},\r\n\r\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\r\n\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\t\tvar curve = new THREE.QuadraticBezierCurve(\r\n\t\t\tnew THREE.Vector2( x0, y0 ),\r\n\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\tnew THREE.Vector2( aX, aY )\r\n\t\t);\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.actions.push( { action: 'quadraticCurveTo', args: [ aCPx, aCPy, aX, aY ] } );\r\n\r\n\t},\r\n\r\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\t\tvar curve = new THREE.CubicBezierCurve(\r\n\t\t\tnew THREE.Vector2( x0, y0 ),\r\n\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\tnew THREE.Vector2( aX, aY )\r\n\t\t);\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.actions.push( { action: 'bezierCurveTo', args: [ aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ] } );\r\n\r\n\t},\r\n\r\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\r\n\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\t\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\t\tArray.prototype.push.apply( npts, pts );\r\n\r\n\t\tvar curve = new THREE.SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.actions.push( { action: 'splineThru', args: args } );\r\n\r\n\t},\r\n\r\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n\t},\r\n\r\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n\t},\r\n\r\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n\t},\r\n\r\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\tvar args = [\r\n\t\t\taX, aY,\r\n\t\t\txRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle,\r\n\t\t\taClockwise,\r\n\t\t\taRotation || 0 // aRotation is optional.\r\n\t\t];\r\n\r\n\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\targs.push( lastPoint.x );\r\n\t\targs.push( lastPoint.y );\r\n\r\n\t\tthis.actions.push( { action: 'ellipse', args: args } );\r\n\r\n\t},\r\n\r\n\tgetSpacedPoints: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = 40;\r\n\r\n\t\tvar points = [];\r\n\r\n\t\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t\t//if ( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.autoClose ) {\r\n\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\r\n\t},\r\n\r\n\tgetPoints: function ( divisions ) {\r\n\r\n\t\tdivisions = divisions || 12;\r\n\r\n\t\tvar b2 = THREE.ShapeUtils.b2;\r\n\t\tvar b3 = THREE.ShapeUtils.b3;\r\n\r\n\t\tvar points = [];\r\n\r\n\t\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\t\tlaste, tx, ty;\r\n\r\n\t\tfor ( var i = 0, l = this.actions.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar item = this.actions[ i ];\r\n\r\n\t\t\tvar action = item.action;\r\n\t\t\tvar args = item.args;\r\n\r\n\t\t\tswitch ( action ) {\r\n\r\n\t\t\tcase 'moveTo':\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'lineTo':\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'quadraticCurveTo':\r\n\r\n\t\t\t\tcpx  = args[ 2 ];\r\n\t\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\t\tvar t = j / divisions;\r\n\r\n\t\t\t\t\ttx = b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\tty = b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'bezierCurveTo':\r\n\r\n\t\t\t\tcpx  = args[ 4 ];\r\n\t\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\t\tcpx2 = args[ 2 ];\r\n\t\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\t\tvar t = j / divisions;\r\n\r\n\t\t\t\t\ttx = b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\tty = b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'splineThru':\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\t\tvar spts = [ last ];\r\n\r\n\t\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\t\tfor ( var j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'arc':\r\n\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\t\tvar t = j / tdivisions;\r\n\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log(points);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ellipse':\r\n\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\t\taRotation = args[ 7 ];\r\n\r\n\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\t\tvar cos, sin;\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\t\tsin = Math.sin( aRotation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\t\tvar t = j / tdivisions;\r\n\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\t\tvar x = tx, y = ty;\r\n\r\n\t\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log(points);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t} // end switch\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\t// Normalize to remove the closing point by default.\r\n\t\tvar lastPoint = points[ points.length - 1 ];\r\n\t\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < Number.EPSILON &&\r\n\t\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < Number.EPSILON )\r\n\t\t\tpoints.splice( points.length - 1, 1 );\r\n\r\n\t\tif ( this.autoClose ) {\r\n\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\r\n\t},\r\n\r\n\ttoShapes: function ( isCCW, noHoles ) {\r\n\r\n\t\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\t\tfor ( var i = 0, l = inActions.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar item = inActions[ i ];\r\n\r\n\t\t\t\tvar args = item.args;\r\n\t\t\t\tvar action = item.action;\r\n\r\n\t\t\t\tif ( action === 'moveTo' ) {\r\n\r\n\t\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(subPaths);\r\n\r\n\t\t\treturn\tsubPaths;\r\n\r\n\t\t}\r\n\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\t\tvar shapes = [];\r\n\r\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tvar inside = false;\r\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn\tinside;\r\n\r\n\t\t}\r\n\r\n\t\tvar isClockWise = THREE.ShapeUtils.isClockWise;\r\n\r\n\t\tvar subPaths = extractSubpaths( this.actions );\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\r\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\t\tif ( subPaths.length === 1 ) {\r\n\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\t\tvar betterShapeHoles = [];\r\n\t\tvar newShapes = [];\r\n\t\tvar newShapeHoles = [];\r\n\t\tvar mainIdx = 0;\r\n\t\tvar tmpPoints;\r\n\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\r\n\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\t\tif ( solid ) {\r\n\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t\t//console.log('cw', i);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t\t//console.log('ccw', i);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\t\tif ( newShapes.length > 1 ) {\r\n\r\n\t\t\tvar ambiguous = false;\r\n\t\t\tvar toChange = [];\r\n\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\r\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\tvar hole_unassigned = true;\r\n\r\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar tmpHoles;\r\n\r\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\r\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.assign( Object.create( THREE.Path.prototype ), {\r\n\r\n\tconstructor: THREE.Shape,\r\n\r\n\t// Convenience method to return ExtrudeGeometry\r\n\r\n\textrude: function ( options ) {\r\n\r\n\t\treturn new THREE.ExtrudeGeometry( this, options );\r\n\r\n\t},\r\n\r\n\t// Convenience method to return ShapeGeometry\r\n\r\n\tmakeGeometry: function ( options ) {\r\n\r\n\t\treturn new THREE.ShapeGeometry( this, options );\r\n\r\n\t},\r\n\r\n\tgetPointsHoles: function ( divisions ) {\r\n\r\n\t\tvar holesPts = [];\r\n\r\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n\r\n\t\t}\r\n\r\n\t\treturn holesPts;\r\n\r\n\t},\r\n\r\n\t// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\n\textractAllPoints: function ( divisions ) {\r\n\r\n\t\treturn {\r\n\r\n\t\t\tshape: this.getPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t\t};\r\n\r\n\t},\r\n\r\n\textractPoints: function ( divisions ) {\r\n\r\n\t\treturn this.extractAllPoints( divisions );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub( this.v1 );\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar b2 = THREE.ShapeUtils.b2;\r\n\r\n\treturn new THREE.Vector2(\r\n\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\r\n\t);\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\r\n\r\n\treturn new THREE.Vector2(\r\n\t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\r\n\t).normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar b3 = THREE.ShapeUtils.b3;\r\n\r\n\treturn new THREE.Vector2( \r\n\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n\t);\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\r\n\r\n\treturn new THREE.Vector2( \r\n\t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n\t).normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\tvar point1 = points[ intPoint ];\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\r\n\treturn new THREE.Vector2(\r\n\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\t\r\n\tthis.aRotation = aRotation || 0;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\tvar cos = Math.cos( this.aRotation );\r\n\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\tvar tx = x, ty = y;\r\n\r\n\t\t// Rotate the point about the center of the ellipse.\r\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\r\n\t}\r\n\r\n\treturn new THREE.Vector2( x, y );\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar b2 = THREE.ShapeUtils.b2;\t\t\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\r\n\t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar b3 = THREE.ShapeUtils.b3;\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\r\n\t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\r\n\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CatmullRomCurve3.js\r\n\r\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\nTHREE.CatmullRomCurve3 = ( function() {\r\n\r\n\tvar\r\n\t\ttmp = new THREE.Vector3(),\r\n\t\tpx = new CubicPoly(),\r\n\t\tpy = new CubicPoly(),\r\n\t\tpz = new CubicPoly();\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n\t\tthis.c0 = x0;\r\n\t\tthis.c1 = t0;\r\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t// rescale tangents for parametrization in [0,1]\r\n\t\tt1 *= dt1;\r\n\t\tt2 *= dt1;\r\n\r\n\t\t// initCubicPoly\r\n\t\tthis.init( x1, x2, t1, t2 );\r\n\r\n\t};\r\n\r\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.calc = function( t ) {\r\n\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t2 * t;\r\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n\t};\r\n\r\n\t// Subclass Three.js curve\r\n\treturn THREE.Curve.create(\r\n\r\n\t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n\t\t\tthis.points = p || [];\r\n\t\t\tthis.closed = false;\r\n\r\n\t\t},\r\n\r\n\t\tfunction ( t ) {\r\n\r\n\t\t\tvar points = this.points,\r\n\t\t\t\tpoint, intPoint, weight, l;\r\n\r\n\t\t\tl = points.length;\r\n\r\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n\t\t\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tif ( this.closed ) {\r\n\r\n\t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar p0, p1, p2, p3; // 4 points\r\n\r\n\t\t\tif ( this.closed || intPoint > 0 ) {\r\n\r\n\t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\tp0 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp1 = points[ intPoint % l ];\r\n\t\t\tp2 = points[ ( intPoint + 1 ) % l ];\r\n\r\n\t\t\tif ( this.closed || intPoint + 2 < l ) {\r\n\r\n\t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\r\n\t\t\t\tp3 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t\t// safety check for repeated points\r\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\tpx.calc( weight ),\r\n\t\t\t\tpy.calc( weight ),\r\n\t\t\t\tpz.calc( weight )\r\n\t\t\t);\r\n\r\n\t\t\treturn v;\r\n\r\n\t\t}\r\n\r\n\t);\r\n\r\n} )();\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = function ( points ) {\r\n\r\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\r\n\r\n\tTHREE.CatmullRomCurve3.call( this, points );\r\n\tthis.type = 'catmullrom';\r\n\tthis.closed = true;\r\n\r\n};\r\n\r\nTHREE.ClosedSplineCurve3.prototype = Object.create( THREE.CatmullRomCurve3.prototype );\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry;\r\n\r\n// File:src/extras/geometries/BoxBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\nTHREE.BoxBufferGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'BoxBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tvar scope = this;\r\n\r\n\t// segments\r\n\twidthSegments = Math.floor( widthSegments ) || 1;\r\n\theightSegments = Math.floor( heightSegments ) || 1;\r\n\tdepthSegments = Math.floor( depthSegments ) || 1;\r\n\r\n\t// these are used to calculate buffer length\r\n\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\r\n\tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\r\n\r\n\t// buffers\r\n\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\r\n\tvar vertices = new Float32Array( vertexCount * 3 );\r\n\tvar normals = new Float32Array( vertexCount * 3 );\r\n\tvar uvs = new Float32Array( vertexCount * 2 );\r\n\r\n\t// offset variables\r\n\tvar vertexBufferOffset = 0;\r\n\tvar uvBufferOffset = 0;\r\n\tvar indexBufferOffset = 0;\r\n\tvar numberOfVertices = 0;\r\n\r\n\t// group variables\r\n\tvar groupStart = 0;\r\n\r\n\t// build each side of the box geometry\r\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\r\n\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\r\n\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\r\n\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\r\n\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\r\n\r\n\t// build geometry\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\t// helper functions\r\n\r\n\tfunction calculateVertexCount ( w, h, d ) {\r\n\r\n\t\tvar vertices = 0;\r\n\r\n\t\t// calculate the amount of vertices for each side (plane)\r\n\t\tvertices += (w + 1) * (h + 1) * 2; // xy\r\n\t\tvertices += (w + 1) * (d + 1) * 2; // xz\r\n\t\tvertices += (d + 1) * (h + 1) * 2; // zy\r\n\r\n\t\treturn vertices;\r\n\r\n\t}\r\n\r\n\tfunction calculateIndexCount ( w, h, d ) {\r\n\r\n\t\tvar index = 0;\r\n\r\n\t\t// calculate the amount of squares for each side\r\n\t\tindex += w * h * 2; // xy\r\n\t\tindex += w * d * 2; // xz\r\n\t\tindex += d * h * 2; // zy\r\n\r\n\t\treturn index * 6; // two triangles per square => six vertices per square\r\n\r\n\t}\r\n\r\n\tfunction buildPlane ( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\r\n\r\n\t\tvar segmentWidth\t= width / gridX;\r\n\t\tvar segmentHeight = height / gridY;\r\n\r\n\t\tvar widthHalf = width / 2;\r\n\t\tvar heightHalf = height / 2;\r\n\t\tvar depthHalf = depth / 2;\r\n\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\r\n\t\tvar vertexCounter = 0;\r\n\t\tvar groupCount = 0;\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tvar y = iy * segmentHeight - heightHalf;\r\n\r\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\r\n\r\n\t\t\t\t// set values to correct vector component\r\n\t\t\t\tvector[ u ] = x * udir;\r\n\t\t\t\tvector[ v ] = y * vdir;\r\n\t\t\t\tvector[ w ] = depthHalf;\r\n\r\n\t\t\t\t// now apply vector to vertex buffer\r\n\t\t\t\tvertices[ vertexBufferOffset ] = vector.x;\r\n\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vector.y;\r\n\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vector.z;\r\n\r\n\t\t\t\t// set values to correct vector component\r\n\t\t\t\tvector[ u ] = 0;\r\n\t\t\t\tvector[ v ] = 0;\r\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\t\t\t// now apply vector to normal buffer\r\n\t\t\t\tnormals[ vertexBufferOffset ] = vector.x;\r\n\t\t\t\tnormals[ vertexBufferOffset + 1 ] = vector.y;\r\n\t\t\t\tnormals[ vertexBufferOffset + 2 ] = vector.z;\r\n\r\n\t\t\t\t// uvs\r\n\t\t\t\tuvs[ uvBufferOffset ] = ix / gridX;\r\n\t\t\t\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\t\t// update offsets and counters\r\n\t\t\t\tvertexBufferOffset += 3;\r\n\t\t\t\tuvBufferOffset += 2;\r\n\t\t\t\tvertexCounter += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 1. you need three indices to draw a single face\r\n\t\t// 2. a single segment consists of two faces\r\n\t\t// 3. so we need to generate six (2*3) indices per segment\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\t// face one\r\n\t\t\t\tindices[ indexBufferOffset ] = a;\r\n\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\r\n\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\r\n\r\n\t\t\t\t// face two\r\n\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\r\n\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\r\n\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\r\n\r\n\t\t\t\t// update offsets and counters\r\n\t\t\t\tindexBufferOffset += 6;\r\n\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// add a group to the geometry. this will ensure multi material support\r\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\r\n\r\n\t\t// calculate new start value for groups\r\n\t\tgroupStart += groupCount;\r\n\r\n\t\t// update total number of vertices\r\n\t\tnumberOfVertices += vertexCounter;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry;\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\n// File:src/extras/geometries/CircleBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CircleBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar vertices = segments + 2;\r\n\r\n\tvar positions = new Float32Array( vertices * 3 );\r\n\tvar normals = new Float32Array( vertices * 3 );\r\n\tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n\t// center data is already zero, but need to set a few extras\r\n\tnormals[ 2 ] = 1.0;\r\n\tuvs[ 0 ] = 0.5;\r\n\tuvs[ 1 ] = 0.5;\r\n\r\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n\t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tindices.push( i, i + 1, 0 );\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\r\n// File:src/extras/geometries/CylinderBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\nTHREE.CylinderBufferGeometry = function( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CylinderBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tvar scope = this;\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\theightSegments = Math.floor( heightSegments ) || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\r\n\r\n\t// used to calculate buffer length\r\n\r\n\tvar nbCap = 0;\r\n\r\n\tif ( openEnded === false ) {\r\n\r\n\t\tif ( radiusTop > 0 ) nbCap ++;\r\n\t\tif ( radiusBottom > 0 ) nbCap ++;\r\n\r\n\t}\r\n\r\n\tvar vertexCount = calculateVertexCount();\r\n\tvar indexCount = calculateIndexCount();\r\n\r\n\t// buffers\r\n\r\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\r\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\t// helper variables\r\n\r\n\tvar index = 0,\r\n\t    indexOffset = 0,\r\n\t    indexArray = [],\r\n\t    halfHeight = height / 2;\r\n\r\n\t// group variables\r\n\tvar groupStart = 0;\r\n\r\n\t// generate geometry\r\n\r\n\tgenerateTorso();\r\n\r\n\tif ( openEnded === false ) {\r\n\r\n\t\tif ( radiusTop > 0 ) generateCap( true );\r\n\t\tif ( radiusBottom > 0 ) generateCap( false );\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\r\n\tthis.setIndex( indices );\r\n\tthis.addAttribute( 'position', vertices );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\t// helper functions\r\n\r\n\tfunction calculateVertexCount() {\r\n\r\n\t\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\r\n\r\n\t\tif ( openEnded === false ) {\r\n\r\n\t\t\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\r\n\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\r\n\t}\r\n\r\n\tfunction calculateIndexCount() {\r\n\r\n\t\tvar count = radialSegments * heightSegments * 2 * 3;\r\n\r\n\t\tif ( openEnded === false ) {\r\n\r\n\t\t\tcount += radialSegments * nbCap * 3;\r\n\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\r\n\t}\r\n\r\n\tfunction generateTorso() {\r\n\r\n\t\tvar x, y;\r\n\t\tvar normal = new THREE.Vector3();\r\n\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\tvar groupCount = 0;\r\n\r\n\t\t// this will be used to calculate the normal\r\n\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\t\tvar indexRow = [];\r\n\r\n\t\t\tvar v = y / heightSegments;\r\n\r\n\t\t\t// calculate the radius of the current row\r\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\t\t// vertex\r\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\tvertex.y = - v * height + halfHeight;\r\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\t\t\t\tnormal.copy( vertex );\r\n\r\n\t\t\t\t// handle special case if radiusTop/radiusBottom is zero\r\n\r\n\t\t\t\tif ( ( radiusTop === 0 && y === 0 ) || ( radiusBottom === 0 && y === heightSegments ) ) {\r\n\r\n\t\t\t\t\tnormal.x = Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\t\tnormal.z = Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal.setY( Math.sqrt( normal.x * normal.x + normal.z * normal.z ) * tanTheta ).normalize();\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\t\t// save index of vertex in respective row\r\n\t\t\t\tindexRow.push( index );\r\n\r\n\t\t\t\t// increase index\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// now save vertices of the row in our index array\r\n\t\t\tindexArray.push( indexRow );\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\t\t// we use the index array to access the correct indices\r\n\t\t\t\tvar i1 = indexArray[ y ][ x ];\r\n\t\t\t\tvar i2 = indexArray[ y + 1 ][ x ];\r\n\t\t\t\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\r\n\t\t\t\tvar i4 = indexArray[ y ][ x + 1 ];\r\n\r\n\t\t\t\t// face one\r\n\t\t\t\tindices.setX( indexOffset, i1 ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\r\n\r\n\t\t\t\t// face two\r\n\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, i3 ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\r\n\r\n\t\t\t\t// update counters\r\n\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// add a group to the geometry. this will ensure multi material support\r\n\t\tscope.addGroup( groupStart, groupCount, 0 );\r\n\r\n\t\t// calculate new start value for groups\r\n\t\tgroupStart += groupCount;\r\n\r\n\t}\r\n\r\n\tfunction generateCap( top ) {\r\n\r\n\t\tvar x, centerIndexStart, centerIndexEnd;\r\n\r\n\t\tvar uv = new THREE.Vector2();\r\n\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\tvar groupCount = 0;\r\n\r\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\r\n\t\tvar sign = ( top === true ) ? 1 : - 1;\r\n\r\n\t\t// save the index of the first center vertex\r\n\t\tcenterIndexStart = index;\r\n\r\n\t\t// first we generate the center vertex data of the cap.\r\n\t\t// because the geometry needs one set of uvs per face,\r\n\t\t// we must generate a center vertex per face/segment\r\n\r\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\r\n\r\n\t\t\t// normal\r\n\t\t\tnormals.setXYZ( index, 0, sign, 0 );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = 0.5;\r\n\t\t\tuv.y = 0.5;\r\n\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\t// save the index of the last center vertex\r\n\t\tcenterIndexEnd = index;\r\n\r\n\t\t// now we generate the surrounding vertices, normals and uvs\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\t\t\tvar theta = u * thetaLength + thetaStart;\r\n\r\n\t\t\tvar cosTheta = Math.cos( theta );\r\n\t\t\tvar sinTheta = Math.sin( theta );\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\tvertex.y = halfHeight * sign;\r\n\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal\r\n\t\t\tnormals.setXYZ( index, 0, sign, 0 );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\r\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar c = centerIndexStart + x;\r\n\t\t\tvar i = centerIndexEnd + x;\r\n\r\n\t\t\tif ( top === true ) {\r\n\r\n\t\t\t\t// face top\r\n\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// face bottom\r\n\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update counters\r\n\t\t\tgroupCount += 3;\r\n\r\n\t\t}\r\n\r\n\t\t// add a group to the geometry. this will ensure multi material support\r\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\r\n\r\n\t\t// calculate new start value for groups\r\n\t\tgroupStart += groupCount;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.CylinderBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry;\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\n// File:src/extras/geometries/ConeBufferGeometry.js\r\n\r\n/*\r\n * @author: abelnation / http://github.com/abelnation\r\n */\r\n\r\nTHREE.ConeBufferGeometry = function (\r\n\tradius, height,\r\n\tradialSegments, heightSegments,\r\n\topenEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.CylinderBufferGeometry.call( this,\r\n\t\t0, radius, height,\r\n\t\tradialSegments, heightSegments,\r\n\t\topenEnded, thetaStart, thetaLength );\r\n\r\n\tthis.type = 'ConeBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n};\r\n\r\nTHREE.ConeBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.ConeBufferGeometry.prototype.constructor = THREE.ConeBufferGeometry;\r\n\r\n// File:src/extras/geometries/ConeGeometry.js\r\n\r\n/**\r\n * @author abelnation / http://github.com/abelnation\r\n */\r\n\r\nTHREE.ConeGeometry = function (\r\n\tradius, height,\r\n\tradialSegments, heightSegments,\r\n\topenEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.CylinderGeometry.call( this,\r\n\t\t0, radius, height,\r\n\t\tradialSegments, heightSegments,\r\n\t\topenEnded, thetaStart, thetaLength );\r\n\r\n\tthis.type = 'ConeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n};\r\n\r\nTHREE.ConeGeometry.prototype = Object.create( THREE.CylinderGeometry.prototype );\r\nTHREE.ConeGeometry.prototype.constructor = THREE.ConeGeometry;\r\n\r\n// File:src/extras/geometries/EdgesGeometry.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.DEG2RAD * thresholdAngle );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\r\n\tfunction sortFunction( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t}\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = [];\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n};\r\n\r\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initialization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.ShapeUtils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t// check for collinear edges\r\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n\r\n\t\t\t// not collinear\r\n\r\n\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > Number.EPSILON ) {\r\n\r\n\t\t\t\tif ( v_next_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t//bs = bevelSize * t; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, 0 ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, 1 ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, 1 ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.ShapeUtils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\n // points - to create a closed torus, one must use a set of points\r\n //    like so: [ a, b, c, d, a ], see first is the same as last.\r\n // segments - the number of circumference segments to create\r\n // phiStart - the starting radian\r\n // phiLength - the radian (0 to 2PI) range of the lathed section\r\n //    2PI is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheBufferGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'LatheBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = Math.floor( segments ) || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || Math.PI * 2;\r\n\r\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\r\n\tphiLength = THREE.Math.clamp( phiLength, 0, Math.PI * 2 );\r\n\r\n\t// these are used to calculate buffer length\r\n\tvar vertexCount = ( segments + 1 ) * points.length;\r\n\tvar indexCount = segments * points.length * 2 * 3;\r\n\r\n\t// buffers\r\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\t// helper variables\r\n\tvar index = 0, indexOffset = 0, base;\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\tvar vertex = new THREE.Vector3();\r\n\tvar uv = new THREE.Vector2();\r\n\tvar i, j;\r\n\r\n\t// generate vertices and uvs\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar sin = Math.sin( phi );\r\n\t\tvar cos = Math.cos( phi );\r\n\r\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertex.x = points[ j ].x * sin;\r\n\t\t\tvertex.y = points[ j ].y;\r\n\t\t\tvertex.z = points[ j ].x * cos;\r\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = i / segments;\r\n\t\t\tuv.y = j / ( points.length - 1 );\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// generate indices\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\tbase = j + i * points.length;\r\n\r\n\t\t\t// indices\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + points.length;\r\n\t\t\tvar c = base + points.length + 1;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\t// face one\r\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t\t// face two\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\r\n\tthis.setIndex( indices );\r\n\tthis.addAttribute( 'position', vertices );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\t// generate normals\r\n\r\n\tthis.computeVertexNormals();\r\n\r\n\t// if the geometry is closed, we need to average the normals along the seam.\r\n\t// because the corresponding vertices are identical (but still have different UVs).\r\n\r\n\tif( phiLength === Math.PI * 2 ) {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\t\tvar n1 = new THREE.Vector3();\r\n\t\tvar n2 = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3();\r\n\r\n\t\t// this is the buffer offset for the last line of vertices\r\n\t\tbase = segments * points.length * 3;\r\n\r\n\t\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\r\n\r\n\t\t\t// select the normal of the vertex in the first line\r\n\t\t\tn1.x = normals[ j + 0 ];\r\n\t\t\tn1.y = normals[ j + 1 ];\r\n\t\t\tn1.z = normals[ j + 2 ];\r\n\r\n\t\t\t// select the normal of the vertex in the last line\r\n\t\t\tn2.x = normals[ base + j + 0 ];\r\n\t\t\tn2.y = normals[ base + j + 1 ];\r\n\t\t\tn2.z = normals[ base + j + 2 ];\r\n\r\n\t\t\t// average normals\r\n\t\t\tn.addVectors( n1, n2 ).normalize();\r\n\r\n\t\t\t// assign the new values to both normals\r\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\r\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\r\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\r\n\r\n\t\t} // next row\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LatheBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry;\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points\r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2PI) range of the lathed section\r\n//    2PI is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.LatheBufferGeometry( points, segments, phiStart, phiLength ) );\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\n// File:src/extras/geometries/RingBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\nTHREE.RingBufferGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'RingBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 20;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\r\n\r\n\t// these are used to calculate buffer length\r\n\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\r\n\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\r\n\r\n\t// buffers\r\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\t// some helper variables\r\n\tvar index = 0, indexOffset = 0, segment;\r\n\tvar radius = innerRadius;\r\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\tvar vertex = new THREE.Vector3();\r\n\tvar uv = new THREE.Vector2();\r\n\tvar j, i;\r\n\r\n\t// generate vertices, normals and uvs\r\n\r\n\t// values are generate from the inside of the ring to the outside\r\n\r\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\r\n\r\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\r\n\r\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal\r\n\t\t\tnormals.setXYZ( index, 0, 0, 1 );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\r\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex++;\r\n\r\n\t\t}\r\n\r\n\t\t// increase the radius for next row of vertices\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\t// generate indices\r\n\r\n\tfor ( j = 0; j < phiSegments; j ++ ) {\r\n\r\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\r\n\r\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\r\n\r\n\t\t\tsegment = i + thetaSegmentLevel;\r\n\r\n\t\t\t// indices\r\n\t\t\tvar a = segment;\r\n\t\t\tvar b = segment + thetaSegments + 1;\r\n\t\t\tvar c = segment + thetaSegments + 2;\r\n\t\t\tvar d = segment + 1;\r\n\r\n\t\t\t// face one\r\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\r\n\t\t\t// face two\r\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\r\n\tthis.setIndex( indices );\r\n\tthis.addAttribute( 'position', vertices );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n};\r\n\r\nTHREE.RingBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry;\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\n// File:src/extras/geometries/SphereBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\r\n\r\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'SphereBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\r\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\r\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\r\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\tverticesRow.push( index );\r\n\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new ( positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute )( indices, 1 ) );\r\n\tthis.addAttribute( 'position', positions );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  font: <THREE.Font>, // font\r\n *\r\n *  size: <float>, // size of the text\r\n *  height: <float>, // thickness to extrude text\r\n *  curveSegments: <int>, // number of points on the curves\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into text bevel goes\r\n *  bevelSize: <float> // how far from text outline is bevel\r\n * }\r\n */\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar font = parameters.font;\r\n\r\n\tif ( font instanceof THREE.Font === false ) {\r\n\r\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\r\n\t\treturn new THREE.Geometry();\r\n\r\n\t}\r\n\r\n\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, shapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\nTHREE.TorusBufferGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'TorusBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\t// used to calculate buffer length\r\n\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\r\n\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\r\n\r\n\t// buffers\r\n\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\r\n\tvar vertices = new Float32Array( vertexCount * 3 );\r\n\tvar normals = new Float32Array( vertexCount * 3 );\r\n\tvar uvs = new Float32Array( vertexCount * 2 );\r\n\r\n\t// offset variables\r\n\tvar vertexBufferOffset = 0;\r\n\tvar uvBufferOffset = 0;\r\n\tvar indexBufferOffset = 0;\r\n\r\n\t// helper variables\r\n\tvar center = new THREE.Vector3();\r\n\tvar vertex = new THREE.Vector3();\r\n\tvar normal = new THREE.Vector3();\r\n\r\n\tvar j, i;\r\n\r\n\t// generate vertices, normals and uvs\r\n\r\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tvertices[ vertexBufferOffset ] = vertex.x;\r\n\t\t\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\r\n\t\t\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\r\n\r\n\t\t\t// this vector is used to calculate the normal\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\t// normal\r\n\t\t\tnormal.subVectors( vertex, center ).normalize();\r\n\r\n\t\t\tnormals[ vertexBufferOffset ] = normal.x;\r\n\t\t\tnormals[ vertexBufferOffset + 1 ] = normal.y;\r\n\t\t\tnormals[ vertexBufferOffset + 2 ] = normal.z;\r\n\r\n\t\t\t// uv\r\n\t\t\tuvs[ uvBufferOffset ] = i / tubularSegments;\r\n\t\t\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\r\n\r\n\t\t\t// update offsets\r\n\t\t\tvertexBufferOffset += 3;\r\n\t\t\tuvBufferOffset += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// generate indices\r\n\r\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t// indices\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\t// face one\r\n\t\t\tindices[ indexBufferOffset ] = a;\r\n\t\t\tindices[ indexBufferOffset + 1 ] = b;\r\n\t\t\tindices[ indexBufferOffset + 2 ] = d;\r\n\r\n\t\t\t// face two\r\n\t\t\tindices[ indexBufferOffset + 3 ] = b;\r\n\t\t\tindices[ indexBufferOffset + 4 ] = c;\r\n\t\t\tindices[ indexBufferOffset + 5 ] = d;\r\n\r\n\t\t\t// update offset\r\n\t\t\tindexBufferOffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.TorusBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\n// File:src/extras/geometries/TorusKnotBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n *\r\n * see: http://www.blackpawn.com/texts/pqtorus/\r\n */\r\nTHREE.TorusKnotBufferGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tradialSegments: radialSegments,\r\n\t\tp: p,\r\n\t\tq: q\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\r\n\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\r\n\t// used to calculate buffer length\r\n\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\r\n\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\r\n\r\n\t// buffers\r\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\t// helper variables\r\n\tvar i, j, index = 0, indexOffset = 0;\r\n\r\n\tvar vertex = new THREE.Vector3();\r\n\tvar normal = new THREE.Vector3();\r\n\tvar uv = new THREE.Vector2();\r\n\r\n\tvar P1 = new THREE.Vector3();\r\n\tvar P2 = new THREE.Vector3();\r\n\r\n\tvar B = new THREE.Vector3();\r\n\tvar T = new THREE.Vector3();\r\n\tvar N = new THREE.Vector3();\r\n\r\n\t// generate vertices, normals and uvs\r\n\r\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\r\n\r\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\r\n\r\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\r\n\r\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\r\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\r\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\r\n\r\n\t\t// calculate orthonormal basis\r\n\r\n\t\tT.subVectors( P2, P1 );\r\n\t\tN.addVectors( P2, P1 );\r\n\t\tB.crossVectors( T, N );\r\n\t\tN.crossVectors( B, T );\r\n\r\n\t\t// normalize B, N. T can be ignored, we don't use it\r\n\r\n\t\tB.normalize();\r\n\t\tN.normalize();\r\n\r\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\r\n\r\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\t\tvar cx = - tube * Math.cos( v );\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\t// now calculate the final vertex position.\r\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\r\n\r\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\r\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\r\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = i / tubularSegments;\r\n\t\t\tuv.y = j / radialSegments;\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// generate indices\r\n\r\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t// indices\r\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\r\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t// face one\r\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t\t// face two\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\r\n\tthis.setIndex( indices );\r\n\tthis.addAttribute( 'position', vertices );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\t// this function calculates the current position on the torus curve\r\n\r\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = q / p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry;\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tradialSegments: radialSegments,\r\n\t\tp: p,\r\n\t\tq: q\r\n\t};\r\n\r\n\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\r\n\r\n\tthis.fromBufferGeometry( new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed,\r\n\t\ttaper: taper\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// construct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > Number.EPSILON ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, x1, x2 );\r\n\t\tvar min = Math.min( x0, x1, x2 );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3, materialIndex ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow( 2, detail );\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\tvar materialIndex = face.materialIndex;\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t 0,  r, - t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t r, - t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t- t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'DodecahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/geometries/WireframeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeGeometry = function ( geometry ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\r\n\tfunction sortFunction( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t}\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t// Indexed BufferGeometry\r\n\r\n\t\t\tvar indices = geometry.index.array;\r\n\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\tvar groups = geometry.groups;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\tgeometry.addGroup( 0, indices.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar group = groups[ o ];\r\n\r\n\t\t\t\tvar start = group.start;\r\n\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://clara.io\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.BufferGeometry();\r\n\tlineGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\r\n\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\tthis.line.matrixAutoUpdate = false;\r\n\t\tthis.add( this.line );\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function setDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\r\n\tthis.line.updateMatrix();\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tthis.line.material.color.copy( color );\r\n\tthis.cone.material.color.copy( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = ( function () {\r\n\r\n\tvar box = new THREE.Box3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tif ( object instanceof THREE.Box3 ) {\r\n\r\n\t\t\tbox.copy( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tbox.setFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tif ( box.isEmpty() ) return;\r\n\r\n\t\tvar min = box.min;\r\n\t\tvar max = box.max;\r\n\r\n\t\t/*\r\n\t\t  5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.camera = camera;\r\n\tthis.camera.updateProjectionMatrix();\r\n\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tfunction setPoint( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tif ( size === undefined ) size = 1;\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [\r\n\t\t- size,   size, 0,\r\n\t\t  size,   size, 0,\r\n\t\t  size, - size, 0,\r\n\t\t- size, - size, 0,\r\n\t\t- size,   size, 0\r\n\t], 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\r\n\tthis.add( new THREE.Line( geometry, material ) );\r\n\r\n\tgeometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\r\n\r\n\tthis.add( new THREE.Line( geometry, material ));\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tvar lightPlane = this.children[ 0 ];\r\n\tvar targetLine = this.children[ 1 ];\r\n\r\n\tlightPlane.geometry.dispose();\r\n\tlightPlane.material.dispose();\r\n\ttargetLine.geometry.dispose();\r\n\ttargetLine.material.dispose();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tvar lightPlane = this.children[ 0 ];\r\n\t\tvar targetLine = this.children[ 1 ];\r\n\r\n\t\tlightPlane.lookAt( v3 );\r\n\t\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\ttargetLine.lookAt( v3 );\r\n\t\ttargetLine.scale.z = v3.length();\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\tvar faces = objGeometry.faces;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar normal = face.normal;\r\n\r\n\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step, color1, color2 ) {\r\n\r\n\tcolor1 = new THREE.Color( color1 !== undefined ? color1 : 0x444444 );\r\n\tcolor2 = new THREE.Color( color2 !== undefined ? color2 : 0x888888 );\r\n\r\n\tvar vertices = [];\r\n\tvar colors = [];\r\n\r\n\tfor ( var i = - size, j = 0; i <= size; i += step ) {\r\n\r\n\t\tvertices.push( - size, 0, i, size, 0, i );\r\n\t\tvertices.push( i, 0, - size, i, 0, size );\r\n\r\n\t\tvar color = i === 0 ? color1 : color2;\r\n\r\n\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\tcolor.toArray( colors, j ); j += 3;\r\n\r\n\t}\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.Float32Attribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function () {\r\n\r\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereBufferGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dynamic = true;\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = [\r\n\t\t0, 0, 0,   0,   0,   1,\r\n\t\t0, 0, 0,   1,   0,   1,\r\n\t\t0, 0, 0, - 1,   0,   1,\r\n\t\t0, 0, 0,   0,   1,   1,\r\n\t\t0, 0, 0,   0, - 1,   1\r\n\t];\r\n\r\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\r\n\r\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\r\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\r\n\r\n\t\tpositions.push(\r\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\r\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( positions, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\r\n\tthis.cone = new THREE.LineSegments( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tnNormals = objGeometry.attributes.normal.count;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function ( material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.material = material;\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/i;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}