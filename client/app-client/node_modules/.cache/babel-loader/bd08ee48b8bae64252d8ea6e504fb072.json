{"ast":null,"code":"var _jsxFileName = \"/Users/jackbocresion/Desktop/YoCal/client/app-client/src/components/Chat/chatHome.jsx\";\nimport '../../styles/progress.scss';\nimport React from 'react';\nimport { AnimateSharedLayout, motion, useCycle } from 'framer-motion';\nimport Axios from 'axios';\nimport { useRef, useState } from 'react';\nimport { useEffect } from 'react';\nimport '../../styles/messages.scss';\nimport { userData } from '../../App';\nimport { useContext } from 'react';\nimport ChatSelect from './chatSelect';\nimport NewChat from './newChat';\nimport AddFriend from '.././Friends/friendEventCard';\nimport io from 'socket.io-client';\nvar socket; //= io('http://localhost:5000')\n\nexport default function Chat() {\n  const user = useContext(userData);\n  const [channel, setChannel] = useState(0);\n  const [message, setMessage] = useState('');\n  const [errors, setErrors] = useState('');\n  const [sidebar, setSidebar] = useState(0);\n  const [chat, setChat] = useState([]);\n  const [channels, setChannels] = useState([]);\n  useEffect(() => {\n    console.log(user.id);\n    socket = io.connect('http://localhost:5000', {\n      query: `user=${user.id}?chat=${0}`\n    });\n    setSidebar(25);\n    socket.emit('init');\n  });\n  useEffect(() => {\n    socket.on(`message-${channel}`, ({\n      name,\n      message\n    }) => {\n      console.log(\"message!\");\n      setChat([...chat, {\n        name,\n        message\n      }]);\n      console.log(chat, \"chattttdfsd\");\n    });\n    socket.on(`init-${channel}`, res => {\n      console.log(res, 'resfsfdds');\n      setChat(res.messages);\n      setChannels(res.chats);\n    });\n    socket.on(`chats-${channel}`, res => {\n      console.log('got a chat ping!', res);\n    });\n  });\n  useEffect(() => {\n    socket = io.connect('http://localhost:5000', {\n      query: 'channel=' + channel\n    });\n    console.log('refreshed channel!');\n  }, [channel]); //console.log(user.chats[0].chat,\"no undef\")\n\n  const [currentChat, setCurrentChat] = useState(0);\n  const [new2, createNew] = useState([]);\n  const [showingFriends, ShowFriends] = useCycle(false, true);\n\n  function updateText(text) {\n    if (text.length <= 140 || text.length < message.length) {\n      setErrors('');\n      setMessage(text);\n    } else {\n      console.log('trimming!');\n      setMessage(text.slice(0, 140));\n      setErrors(\"you've reached the 140 character limit!\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(motion.div, {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => socket.emit(`init`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }, \"refresh init\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      socket.emit(`create-channel`, {\n        name: \"pp\",\n        users: [16, 43]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }\n  }, \"createchat!\"), console.log(channels, \"SDfasdfasd\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setChannel(channel => channel + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }\n  }, \"channelup\"), channel, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setChannel(channel => channel - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  }, \"channeldown\"), console.log(chat, 'dfasdfasdf'), chat && chat.map(i => i.name == user.username ? /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, i.message) : /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, i.name, \": \", i.message)), /*#__PURE__*/React.createElement(motion.div, {\n    className: \"message-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(motion.input, {\n    className: \"form-control message-input\",\n    value: message,\n    style: {\n      width: '70vw',\n      float: 'left'\n    },\n    onChange: e => updateText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(motion.svg, {\n    whileHover: {\n      y: 6\n    },\n    onClick: () => {\n      console.log({\n        name: user.username,\n        message: message\n      });\n      socket.emit(\"message\", {\n        name: user.username,\n        message: message\n      });\n      setMessage('');\n    },\n    whileTap: {\n      y: -10\n    },\n    width: \"34px\",\n    height: \"34px\",\n    viewBox: \"0 0 16 16\",\n    className: \"bi bi-arrow-up-circle-fill mx-1\",\n    fill: \"#007ef5\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"message-send\",\n    style: {\n      pathLength: 1\n    },\n    \"fill-rule\": \"evenodd\",\n    d: \"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(Progress, {\n    done: Math.floor(message.length / 1.4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, errors)));\n}\n\nconst Progress = ({\n  done\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-done\",\n    style: {\n      opacity: 1,\n      width: `${done}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 10\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/jackbocresion/Desktop/YoCal/client/app-client/src/components/Chat/chatHome.jsx"],"names":["React","AnimateSharedLayout","motion","useCycle","Axios","useRef","useState","useEffect","userData","useContext","ChatSelect","NewChat","AddFriend","io","socket","Chat","user","channel","setChannel","message","setMessage","errors","setErrors","sidebar","setSidebar","chat","setChat","channels","setChannels","console","log","id","connect","query","emit","on","name","res","messages","chats","currentChat","setCurrentChat","new2","createNew","showingFriends","ShowFriends","updateText","text","length","slice","users","map","i","username","color","width","float","e","target","value","y","pathLength","Math","floor","Progress","done","opacity"],"mappings":"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","sourcesContent":["import '../../styles/progress.scss';\nimport React from 'react';\nimport { AnimateSharedLayout, motion, useCycle } from 'framer-motion';\nimport Axios from 'axios';\nimport { useRef, useState } from 'react';\nimport { useEffect } from 'react';\nimport '../../styles/messages.scss';\nimport { userData } from '../../App';\nimport { useContext } from 'react';\nimport ChatSelect from './chatSelect';\nimport NewChat from './newChat';\nimport AddFriend from '.././Friends/friendEventCard';\nimport io from 'socket.io-client';\nvar socket //= io('http://localhost:5000')\nexport default function Chat() {\n   const user = useContext(userData);\n   const [channel, setChannel] = useState(0);\n   const [message, setMessage] = useState('');\n   const [errors, setErrors] = useState('');\n   const [sidebar, setSidebar] = useState(0);\n   const [chat, setChat] = useState([])\n   const [channels, setChannels] = useState([])\n   useEffect(() => {\n      console.log(user.id)\n      socket = io.connect('http://localhost:5000', {\n         query:`user=${user.id}?chat=${0}`\n   })\n      setSidebar(25);\n      socket.emit('init')\n   });\n   useEffect(() => {\n      socket.on(`message-${channel}`, ({name, message}) => {\n         console.log(\"message!\")\n         setChat([...chat, {name, message}]);\n         console.log(chat,\"chattttdfsd\")\n      });\n      socket.on(`init-${channel}`, (res) => {\n         console.log(res, 'resfsfdds');\n         setChat(res.messages);\n         setChannels(res.chats)\n      });\n      socket.on(`chats-${channel}`, (res) => {\n         console.log('got a chat ping!', res)\n      })\n   });\n   useEffect(() => {\n      socket = io.connect('http://localhost:5000',{query: 'channel=' + channel})\n      console.log('refreshed channel!')\n   },[channel])\n   //console.log(user.chats[0].chat,\"no undef\")\n   const [currentChat, setCurrentChat] = useState(0);\n   const [new2, createNew] = useState([]);\n   const [showingFriends, ShowFriends] = useCycle(false, true);\n   function updateText(text) {\n      if (text.length <= 140 || text.length < message.length) {\n         setErrors('');\n         setMessage(text);\n      } else {\n         console.log('trimming!');\n         setMessage(text.slice(0, 140));\n         setErrors(\"you've reached the 140 character limit!\");\n      }\n   }\n   return (\n      <motion.div className=\"chat\">\n         <button onClick={()=>socket.emit(`init`)}>refresh init</button>\n         <button onClick={() => {\n           socket.emit(`create-channel`, {name:\"pp\", users:[16,43]})\n         }}>createchat!</button>\n         {console.log(channels,\"SDfasdfasd\")}\n         <button onClick={() => setChannel(channel => channel + 1)}>channelup</button>\n         {channel}\n         <button onClick={() => setChannel(channel => channel - 1)}>channeldown</button>\n         {console.log(chat,'dfasdfasdf')}\n         {chat && chat.map(i => (\n            i.name == user.username?\n               (<h1 style={{ color: \"blue\" }}>{i.message}</h1>)\n               :\n               (<h1 style={{ color: \"red\" }}>{i.name}: {i.message}</h1>)\n         ))}\n         <motion.div className=\"message-controls\">\n            <motion.input\n               className=\"form-control message-input\"\n               value={message}\n               style={{ width: '70vw', float: 'left' }}\n               onChange={(e) => updateText(e.target.value)}\n            />\n            <motion.svg\n               whileHover={{ y: 6 }}\n               onClick={() => {\n                  console.log({ name: user.username, message: message })\n                  socket.emit(\"message\", { name: user.username, message: message })\n                  setMessage('')\n               }}\n               whileTap={{ y: -10 }}\n               width=\"34px\"\n               height=\"34px\"\n               viewBox=\"0 0 16 16\"\n               className=\"bi bi-arrow-up-circle-fill mx-1\"\n               fill=\"#007ef5\"\n               xmlns=\"http://www.w3.org/2000/svg\"\n            >\n               <path\n                  className=\"message-send\"\n                  style={{ pathLength: 1 }}\n                  fill-rule=\"evenodd\"\n                  d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\"\n               />\n            </motion.svg>\n            <Progress done={Math.floor(message.length / 1.4)} />\n            <span className=\"error mx-2\">{errors}</span>\n         </motion.div>\n      </motion.div>\n   );\n}\nconst Progress = ({ done }) => {\n   return (\n      <div className=\"progress\">\n         <div\n            className=\"progress-done\"\n            style={{\n               opacity: 1,\n               width: `${done}%`,\n            }}\n         ></div>\n      </div>\n   );\n};\n"]},"metadata":{},"sourceType":"module"}