{"ast":null,"code":"var _jsxFileName = \"/Users/jackbocresion/Desktop/Final App sql/client/app-client/src/components/Edit.jsx\";\nimport React, { useContext, useRef, useState } from 'react';\nimport { userData } from '../App';\nimport { motion, useMotionTemplate } from 'framer-motion';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport Event from '../components/animatedEvent';\nimport Progress from \"../microComponents/progress\";\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport default function Edit(props) {\n  const user = useContext(userData);\n  const {\n    id\n  } = useParams(); //useparams\n\n  const [event, setEvent] = useState(user.events && user.events[id]);\n  useEffect(() => {\n    setEvent(user.events && user.events[id]);\n    console.log(event);\n  }, [user]);\n  const [error, setError] = useState('');\n\n  function updateTitle(e) {\n    if (e.target.value.length > 60) return setError('your event title must be between 4 and 60 characters');\n    setEvent({\n      title: e.target.value,\n      date: event.date,\n      duration: event.duration\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, JSON.stringify(user.events && user.events[id])), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    value: event && event.title,\n    onChange: e => updateTitle(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    value: 'd',\n    onChange: e => updateTitle(e),\n    style: {\n      width: '15%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Progress, {\n    size: '20%',\n    done: event.title.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    value: event && event.duration,\n    onChange: e => setEvent({\n      title: event.title,\n      date: event.date,\n      duration: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }\n  }, event && event.date), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setEvent({\n      title: event.title,\n      date: new Date(new Date(event.date).setMinutes(e.target.value)).toISOString(),\n      duration: event.duration\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  }, [...Array(10).keys()].map(item => /*#__PURE__*/React.createElement(\"option\", {\n    selected: event && new Date(event.date).getMinutes() == item ? true : false,\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }\n  }, '0' + item)), [...Array(50).keys()].map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item++,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }\n  }, 9 + item++))));\n\n  async function update(id) {\n    return await axios.patch(`http://localhost:8000/edit/${id}`);\n  }\n}","map":{"version":3,"sources":["/Users/jackbocresion/Desktop/Final App sql/client/app-client/src/components/Edit.jsx"],"names":["React","useContext","useRef","useState","userData","motion","useMotionTemplate","Link","useParams","useLocation","useEffect","axios","Event","Progress","months","Edit","props","user","id","event","setEvent","events","console","log","error","setError","updateTitle","e","target","value","length","title","date","duration","JSON","stringify","width","Date","setMinutes","toISOString","Array","keys","map","item","getMinutes","update","patch"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useState } from 'react';\nimport { userData } from '../App';\nimport { motion, useMotionTemplate } from 'framer-motion';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport Event from '../components/animatedEvent';\nimport Progress from \"../microComponents/progress\"\nconst months = [\n   'January',\n   'February',\n   'March',\n   'April',\n   'May',\n   'June',\n   'July',\n   'August',\n   'September',\n   'October',\n   'November',\n   'December',\n];\n\nexport default function Edit(props) {\n   const user = useContext(userData);\n\n   const { id } = useParams();\n   //useparams\n   const [event, setEvent] = useState(user.events && user.events[id]);\n   useEffect(() => {\n      setEvent(user.events && user.events[id]);\n      console.log(event);\n   }, [user]);\n  const [error, setError] = useState('')\n  function updateTitle(e) {\n    if(e.target.value.length>60) return setError('your event title must be between 4 and 60 characters')\n    setEvent({\n      title: e.target.value,\n      date: event.date,\n      duration: event.duration,\n   })\n}\n  \n  \n   return (\n      <>\n         <h1>{JSON.stringify(user.events && user.events[id])}</h1>\n         <input\n            className=\"form-control\"\n            value={event && event.title}\n            onChange={(e) => updateTitle(e)}\n         />\n         <input\n            className=\"form-control\"\n            value={'d'}\n            onChange={(e) => updateTitle(e)}\n            style={{width:'15%'}}\n         />\n         <Progress size={'20%'}done={event.title.length}/>\n         <input\n            className=\"form-control\"\n            value={event && event.duration}\n            onChange={(e) =>\n               setEvent({\n                  title: event.title,\n                  date: event.date,\n                  duration: e.target.value,\n               })\n            }\n         />\n         <h2>{event && event.date}</h2>\n         <select\n            onChange={(e) =>\n               setEvent({\n                  title: event.title,\n                  date: new Date(\n                     new Date(event.date).setMinutes(e.target.value)\n                  ).toISOString(),\n                  duration: event.duration,\n               })\n            }\n         >\n            {[...Array(10).keys()].map((item) => (\n               <option\n                  selected={\n                     event && new Date(event.date).getMinutes() == item\n                        ? true\n                        : false\n                  }\n                  key={item}\n               >\n                  {'0' + item}\n               </option>\n            ))}\n            {[...Array(50).keys()].map((item) => (\n               <option key={item++}>{9 + item++}</option>\n            ))}\n         </select>\n      </>\n   );\n   async function update(id) {\n      return await axios.patch(`http://localhost:8000/edit/${id}`);\n   }\n}\n"]},"metadata":{},"sourceType":"module"}