{"ast":null,"code":"var _jsxFileName = \"/Users/jackbocresion/Desktop/YoCal copy/client/app-client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\nconst socket = io.connect('http://localhost:4000');\n\nfunction App() {\n  const [state, setStaet] = useState({\n    message: '',\n    name: ''\n  });\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    socket.on('message', ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n  });\n\n  const onTextChange = e => {\n    setStaet({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      message\n    } = state;\n    socket.emit('message', {\n      name,\n      message\n    });\n    setStaet({\n      message: '',\n      name\n    });\n  };\n\n  const renderChat = () => {\n    return chat.map(({\n      name,\n      message\n    }, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, name, \": \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }\n    }, message))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onMessageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Messanger\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"name\",\n    onChange: e => onTextChange(e),\n    value: state.name,\n    label: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    onChange: e => onTextChange(e),\n    value: state.message,\n    id: \"outlined-multiline-static\",\n    variant: \"outlined\",\n    label: \"Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Send Message\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"render-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Chat Log\"), renderChat()));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jackbocresion/Desktop/YoCal copy/client/app-client/src/App.js"],"names":["React","useState","useEffect","io","TextField","socket","connect","App","state","setStaet","message","name","chat","setChat","on","onTextChange","e","target","value","onMessageSubmit","preventDefault","emit","renderChat","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\n\nconst socket = io.connect('http://localhost:4000');\n\nfunction App() {\n   const [state, setStaet] = useState({ message: '', name: '' });\n   const [chat, setChat] = useState([]);\n\n   useEffect(() => {\n      socket.on('message', ({ name, message }) => {\n         setChat([...chat, { name, message }]);\n      });\n   });\n\n   const onTextChange = (e) => {\n      setStaet({ ...state, [e.target.name]: e.target.value });\n   };\n\n   const onMessageSubmit = (e) => {\n      e.preventDefault();\n      const { name, message } = state;\n      socket.emit('message', { name, message });\n      setStaet({ message: '', name });\n   };\n\n   const renderChat = () => {\n      return chat.map(({ name, message }, index) => (\n         <div key={index}>\n            <h3>\n               {name}: <span>{message}</span>\n            </h3>\n         </div>\n      ));\n   };\n\n   return (\n      <div className=\"card\">\n         <form onSubmit={onMessageSubmit}>\n            <h1>Messanger</h1>\n            <div className=\"name-field\">\n               <TextField\n                  name=\"name\"\n                  onChange={(e) => onTextChange(e)}\n                  value={state.name}\n                  label=\"Name\"\n               />\n            </div>\n            <div>\n               <TextField\n                  name=\"message\"\n                  onChange={(e) => onTextChange(e)}\n                  value={state.message}\n                  id=\"outlined-multiline-static\"\n                  variant=\"outlined\"\n                  label=\"Message\"\n               />\n            </div>\n            <button>Send Message</button>\n         </form>\n         <div className=\"render-chat\">\n            <h1>Chat Log</h1>\n            {renderChat()}\n         </div>\n      </div>\n   );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}